<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>F2E 星球通訊</title>
  
  <subtitle>DO！ Or DO Not！ There is NO TRY！</subtitle>
  <link href="https://popeye-ux.github.io/atom.xml" rel="self"/>
  
  <link href="https://popeye-ux.github.io/"/>
  <updated>2023-09-16T07:11:01.551Z</updated>
  <id>https://popeye-ux.github.io/</id>
  
  <author>
    <name>POPEYE</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>axios打API手不痠</title>
    <link href="https://popeye-ux.github.io/2023/09/16/js-axios-basic/"/>
    <id>https://popeye-ux.github.io/2023/09/16/js-axios-basic/</id>
    <published>2023-09-16T07:07:52.000Z</published>
    <updated>2023-09-16T07:11:01.551Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://axios-http.com/docs/intro">axios 官網</a></p><p>一個前端工程師的日常就是打不完的 API，接不完的資料。而串接 API 最常使用的函式庫莫過於 axios，但是雖然每天都在用，卻常常覺得用的只是皮毛，始終都沒有好好地去研究與了解 axios，這篇筆記就讓我好好來記錄一下 axios 的使用觀念與方法。</p><p>axios 官網開宗明義就寫到 axios 是基於 promise 的 HTTP 用戶端工具，供瀏覽器與 node.js使用。</p><p>所以它的特點是：</p><ul><li>一致的 Java Script promise 撰寫風格。</li><li>解決 API 串接的非同步問題。</li><li>鍊式寫法，易閱讀，好維護。</li></ul><h3 id="CDN-引入"><a href="#CDN-引入" class="headerlink" title="CDN 引入"></a>CDN 引入</h3><figure><div class="code-wrapper"><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;axios&#x2F;dist&#x2F;axios.min.js&quot;&gt;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;axios&#x2F;dist&#x2F;axios.min.js&quot;&gt;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="npm-引入"><a href="#npm-引入" class="headerlink" title="npm 引入"></a>npm 引入</h3><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">$ npm install axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="在使用-axios-前必須有的觀念"><a href="#在使用-axios-前必須有的觀念" class="headerlink" title="在使用 axios 前必須有的觀念"></a>在使用 axios 前必須有的觀念</h3><p>甚麼是 API，想像一下你去投自動販賣機的飲料，投錢之後，按下按鈕，自動販賣機就吐出你買的飲料，投下的零錢就是取得驗證的身分，那顆選擇按鈕就是 API，自動販賣機吐出來的飲料就是打 API 後得到的資料。</p><p>對於使用者來說，不用去管自動販賣機裡面怎麼運作，只要投錢，按下選擇的按鈕就可以取得想要的飲料。</p><p>而對前端工程師而言，也不用去管後端跟資料庫怎麼運作，只要使用對的方法，對應正確的路徑，發出請求(request)就可以界接 Web API。取得想要的資料。</p><p>上面有提到 <strong>對的方法</strong> 跟 <strong>正確的路徑</strong>，在這裡解釋一下幾種常用的界接API的方法，分別對應 CRUD 的<strong>Create 新增、Read 讀取、Update 更新、Delete 刪除</strong>：</p><ul><li>get&#x2F;取得</li><li>post&#x2F;新增</li><li>put&#x2F;編輯更新</li><li>delete&#x2F;刪除</li></ul><p>實務上界接 API 並非只有以上 4 種方法。</p><p>所以基本的 axios 寫法會是這樣：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// axios.方法('路徑')</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://randomuser.me/api/'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>再加上前面提到的 promise 鍊式寫法，<code>console.log</code> 就可以看到回應(response)的結果：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://randomuser.me/api/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"第一次打API"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> seed <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>info<span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"seed"</span><span class="token punctuation">,</span> seed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="axios 基礎應用" src="https://codepen.io/popeye_ux/embed/rNozjzP?default-tab=js" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/rNozjzP">  axios 基礎應用</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><p>如果要依序打多個 API 可以在 <code>.then</code> 裡面 return 下一個 axios，然後再用另一個 <code>.then</code> 串接：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">axios  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://randomuser.me/api/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"第一次打API"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> seed <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>info<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"seed"</span><span class="token punctuation">,</span> seed<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://randomuser.me/api/?seed=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>seed<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> seed <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>info<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"第二次打API"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://randomuser.me/api/?seed=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>seed<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> seed <span class="token punctuation">&#125;</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>info<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"第三次打API"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="axios 基礎應用" src="https://codepen.io/popeye_ux/embed/WNLERXM?default-tab=js" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/WNLERXM">  axios 基礎應用</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h3 id="搭配-async-await-使用"><a href="#搭配-async-await-使用" class="headerlink" title="搭配 async await 使用"></a>搭配 async await 使用</h3><p>也可以搭配 promise 的語法糖 async await 來使用，語法會更簡潔。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">getData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://randomuser.me/api/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> response2 <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://randomuser.me/api/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">,</span> response2<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="axios async basic" src="https://codepen.io/popeye_ux/embed/JjwyVjY?default-tab=js%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/JjwyVjY">  axios async basic</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><p>如果要做非同步的錯誤處理就要搭配 try catch 來使用</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">getData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://randomuser.me/api/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://randomuser.me/api/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="axios async try catch" src="https://codepen.io/popeye_ux/embed/WNLEWvg?default-tab=js%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/WNLEWvg">  axios async try catch</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul><li><a href="https://rapidapi.com/guides/axios-async-await">https://rapidapi.com/guides/axios-async-await</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://axios-http.com/docs/intro&quot;&gt;axios 官網&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一個前端工程師的日常就是打不完的 API，接不完的資料。而串接 API 最常使用的函式庫莫過於 axios，但是雖然每天都在用，卻常常覺得用的只是</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, axios, API" scheme="https://popeye-ux.github.io/tags/JavaScript-axios-API/"/>
    
  </entry>
  
  <entry>
    <title>2023切版直播班心得牆</title>
    <link href="https://popeye-ux.github.io/2023/09/09/2023layouttohtml/"/>
    <id>https://popeye-ux.github.io/2023/09/09/2023layouttohtml/</id>
    <published>2023-09-09T02:37:08.000Z</published>
    <updated>2023-09-09T02:46:33.194Z</updated>
    
    <content type="html"><![CDATA[<h3 id="當初為什麼報名這堂課"><a href="#當初為什麼報名這堂課" class="headerlink" title="當初為什麼報名這堂課"></a>當初為什麼報名這堂課</h3><p>之前陸續參加過JS直播班，也上過兩次的 VUE 直播班，一起上課的同學大多是參加切版直播班之後，才接著上 JS 跟 VUE。聽了同學的推薦，一直想找時間回來補齊切版技能與觀念，所以才會報名參加這堂課。</p><h3 id="第一週-第八週的學習過程"><a href="#第一週-第八週的學習過程" class="headerlink" title="第一週~第八週的學習過程"></a>第一週~第八週的學習過程</h3><p>不同於JS直播班與VUE直播班時，那時我是全職學習，可以全心全意的上課與寫作業，現在是一邊上班一邊上課，要從夾縫中擠出時間也只能寫完第六周的作業，這一點十分遺憾。</p><h3 id="最大的收獲是？"><a href="#最大的收獲是？" class="headerlink" title="最大的收獲是？"></a>最大的收獲是？</h3><p>切版一直以來都是自己摸索，對於自己的工作流程與觀念一直有種不確定的困惑感，尤其是現在工作上有時會需要切版，常常都是手忙腳亂、事倍功半。</p><p>但是在這八周過程中，聽洧杰老師由CSS語意化命名帶我們入門，接著上 Bootstrap ，最後揚棄語意化標籤，改成使用容器、通用類別、元件等來組成網頁版面的架構，整個觀念大翻轉，再回去看公司前輩切的舊專案，忽然看懂他們切版的方法與邏輯，讓我懷疑他們也是六角學院的學長姊。</p><h3 id="最喜歡直播班的哪些活動？"><a href="#最喜歡直播班的哪些活動？" class="headerlink" title="最喜歡直播班的哪些活動？"></a>最喜歡直播班的哪些活動？</h3><p>一直以來最喜歡的都是每日任務，由每天的小練習，吸收觀念，轉化為札實的技能。</p><h3 id="如果時光能倒流，會希望自己再次注意哪些細節？"><a href="#如果時光能倒流，會希望自己再次注意哪些細節？" class="headerlink" title="如果時光能倒流，會希望自己再次注意哪些細節？"></a>如果時光能倒流，會希望自己再次注意哪些細節？</h3><p>應該是時間安排，如果可以會調整工作與學習時間的比重，讓自己可以有比較多的時間完成課程。</p><h3 id="對課程的建議或鼓勵？"><a href="#對課程的建議或鼓勵？" class="headerlink" title="對課程的建議或鼓勵？"></a>對課程的建議或鼓勵？</h3><p>老師可以多說些業界的故事，讓我們可以避開一些坑。</p><h3 id="身為學長姐，分享些想入坑的新同學一些勉勵的話"><a href="#身為學長姐，分享些想入坑的新同學一些勉勵的話" class="headerlink" title="身為學長姐，分享些想入坑的新同學一些勉勵的話"></a>身為學長姐，分享些想入坑的新同學一些勉勵的話</h3><p>我今年49歲，是 47 歲才開始準備，由插畫師轉行當前端工程師，這樣的跑道轉換連我自己也無法說是有好好規劃生涯。從甚麼都不懂，學了就忘，一直反覆練習，才慢慢發現自己學會了，過程中也會焦慮與自我懷疑，但是這也只能從實做中去化解這樣的情緒。</p><p>也還好有公司願意給我機會，讓我可以跨入這一行，雖然起步也是跌跌撞撞，入職半年才慢慢習慣與熟悉公司的工作流程，之前學到的知識與技能也在實作才能轉化成心智表徵。</p><p>這條路容易走嗎？應該是說人生沒有好走的一條路，但這是很踏實的一條路，有多少付出就有多少收穫！</p><p>謝謝這三年來六角學院的老師跟助教們！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;當初為什麼報名這堂課&quot;&gt;&lt;a href=&quot;#當初為什麼報名這堂課&quot; class=&quot;headerlink&quot; title=&quot;當初為什麼報名這堂課&quot;&gt;&lt;/a&gt;當初為什麼報名這堂課&lt;/h3&gt;&lt;p&gt;之前陸續參加過JS直播班，也上過兩次的 VUE 直播班，一起上課的同學大多是</summary>
      
    
    
    
    <category term="雜記" scheme="https://popeye-ux.github.io/categories/%E9%9B%9C%E8%A8%98/"/>
    
    
    <category term="六角學院" scheme="https://popeye-ux.github.io/tags/%E5%85%AD%E8%A7%92%E5%AD%B8%E9%99%A2/"/>
    
  </entry>
  
  <entry>
    <title>VUE元件--emit 事件外送</title>
    <link href="https://popeye-ux.github.io/2023/07/02/vue-component-emit/"/>
    <id>https://popeye-ux.github.io/2023/07/02/vue-component-emit/</id>
    <published>2023-07-02T14:54:31.000Z</published>
    <updated>2023-07-02T14:59:30.759Z</updated>
    
    <content type="html"><![CDATA[<p>使用Vue 框架的時候，子元件要傳遞事件給父元件可以使用 <code>emit</code>。</p><p>在這裡要注意，子元件對父元件的事件沒有冒泡機制。</p><h2 id="預設在子元件觸發事件的-DOM-元素上可以直接使用-emit"><a href="#預設在子元件觸發事件的-DOM-元素上可以直接使用-emit" class="headerlink" title="預設在子元件觸發事件的 DOM 元素上可以直接使用 $emit"></a>預設在子元件觸發事件的 DOM 元素上可以直接使用 $emit</h2><p>直接在子元件的 DOM 元素上使用<code>$emit</code>，就可以把事件傳遞到父元件，並不需要 <code>defineEmits</code> 定義子元件的 emit 事件才能使用。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"$emit('someEvent')"</span><span class="token operator">></span>click me<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>讓我們看一下範例：</p><ul><li><strong>先在子元件的 <code>&lt;button&gt;</code> 上綁定 <code>$emit</code></strong></li></ul><p>使用 <code>v-on</code> 綁定事件，<code>@click=&quot;$emit(&#39;increaseBy&#39;, 2)&quot;</code>，再使用 <code>$emit</code> 傳遞到父元件，<code>increaseBy</code> 是父元件接收的方法， <code>2</code> 則是傳給父層接收方法的參數。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token comment">// defineEmits(['increaseBy']);</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>h2<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"$emit('increaseBy', 2)"</span><span class="token operator">></span><span class="token constant">ADD</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token literal-property property">Count</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ul><li><strong>在父元件上接收透過 <code>v-on</code> 來接收 子元件的<code>emit</code></strong></li></ul><p>在這裡 <code>&lt;HelloWorld  @increase-by=&quot;increaseCount&quot; /&gt;</code> 同樣要遵守「前內元件，後外元件」的規則，<code>@increase-by</code> 是子元件定義的 <code>emit</code> 事件，而 <code>increaseCount</code> 則是父元件的接收方法。</p><p>再以下程式碼中透過一個涵式接收：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">'./components/HelloWorld.vue'</span><span class="token punctuation">;</span><span class="token keyword">const</span> countParent <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">increaseCount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  countParent<span class="token punctuation">.</span>value <span class="token operator">+=</span> n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>HelloWorld  @increase<span class="token operator">-</span>by<span class="token operator">=</span><span class="token string">"increaseCount"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>h3<span class="token operator">></span>countParent<span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> countParent <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>這種方式也可以</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>MHelloWorld @increase<span class="token operator">-</span>by<span class="token operator">=</span><span class="token string">"(n) => count += n"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><a href="https://stackblitz.com/edit/vitejs-vite-ettajq?file=src/App.vue">示範範例</a></p><h2 id="官方建議透過-defineEmits-定義-emit-事件"><a href="#官方建議透過-defineEmits-定義-emit-事件" class="headerlink" title="官方建議透過 defineEmits 定義 emit 事件"></a>官方建議透過 defineEmits 定義 emit 事件</h2><p>Vue 官方建議明確地在 <script setup> 中宣告 <code>defineEmits()</code> ，明確地定義在子元件中要往父元件傳遞的事件。<br><code>$emit</code> 只能在 <code>&lt;template&gt;</code> 中使用，不能用在 <code>&lt;script setup&gt;</code>，如果要在 <script setup> 中使用要省略 $ 符號，直接使用 emit。</p><ul><li><p>子元件要定義一個 常數 <code>emit</code> 來宣告 <code>emit</code> 的事件</p></li><li><p>然後在 <code>&lt;script setup&gt;</code> 中的函式使用 <code>emit</code> 把事件傳送給父元件</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">msg</span><span class="token operator">:</span> String<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'increaseBy'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">addNum</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  count<span class="token punctuation">.</span>value <span class="token operator">+=</span> n<span class="token punctuation">;</span>  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'increaseBy'</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>h2<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token operator">&lt;</span>h2<span class="token operator">></span>子元件 count <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"addNum(2)"</span><span class="token operator">></span><span class="token constant">ADD</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>父元件一樣遵守「前內後外」的原則，用函式接收由子元件傳來的事件<br><code>@increase-by</code> 是子元件的 <code>emit</code> 而 <code>increaseCount</code> 是父元件接收的函數。</p></li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">'./components/HelloWorld.vue'</span><span class="token punctuation">;</span><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'第二個HelloWorld'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> countParent <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">increaseCount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  countParent<span class="token punctuation">.</span>value <span class="token operator">+=</span> n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 範例三 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>HelloWorld msg<span class="token operator">=</span><span class="token string">"第三個HelloWorld"</span> @increase<span class="token operator">-</span>by<span class="token operator">=</span><span class="token string">"increaseCount"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>h3<span class="token operator">></span>父元件 countParent<span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> countParent <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><a href="https://stackblitz.com/edit/vitejs-vite-fgvedq?file=src/components/HelloWorld.vue">示範範例</a></p><h3 id="emit-驗證"><a href="#emit-驗證" class="headerlink" title="emit 驗證"></a>emit 驗證</h3><p>如過要對 emit 事件及其所傳送的參數做驗證，<code>defineEmits()</code> 要改為物件型別。<br>以下參考官網範例。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 沒有驗證</span>  <span class="token literal-property property">click</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  <span class="token comment">// 驗證 submit 事件</span>  <span class="token function-variable function">submit</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> email<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>email <span class="token operator">&amp;&amp;</span> password<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">'Invalid submit event payload!'</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">submitForm</span><span class="token punctuation">(</span><span class="token parameter">email<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'submit'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> email<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用Vue 框架的時候，子元件要傳遞事件給父元件可以使用 &lt;code&gt;emit&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在這裡要注意，子元件對父元件的事件沒有冒泡機制。&lt;/p&gt;
&lt;h2 id=&quot;預設在子元件觸發事件的-DOM-元素上可以直接使用-emit&quot;&gt;&lt;a href=&quot;#預設在</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="emit, component" scheme="https://popeye-ux.github.io/tags/emit-component/"/>
    
  </entry>
  
  <entry>
    <title>VUE元件--props資料捕手</title>
    <link href="https://popeye-ux.github.io/2023/06/30/vue-component-props/"/>
    <id>https://popeye-ux.github.io/2023/06/30/vue-component-props/</id>
    <published>2023-06-30T14:43:30.000Z</published>
    <updated>2023-06-30T14:55:52.490Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://hackmd.io/_uploads/HJ1qtPh_2.png"></p><p>在談 <code>props</code> 之前，先來說說子元件的資料來源：</p><ul><li><strong>自己的資料</strong>：也就是子元件裡面自定義的資料。</li><li><strong>父元件 <code>props</code> 進子元件的資料</strong>：這是子元件跟父元件借資料來用，不屬於子元件所有。</li><li><strong>Store 裡面大家公用的資料</strong>： 例如放在 pinia 與 vuex 裡面的資料。</li></ul><p>如果是要同層級的元件間互相傳遞資料，或是跨好幾個層級的元件要傳遞資料，並不適合使用 props。</p><h2 id="props-是子元件的資料接收器"><a href="#props-是子元件的資料接收器" class="headerlink" title="props 是子元件的資料接收器"></a>props 是子元件的資料接收器</h2><p>父元件如果要傳送資料給子元件必須透過 <code>props</code> ，而且必須遵守<strong>單向資料流</strong>的規則 ，也就是子元件接收到父元件的資料後，不能去修改那個資料，因為那份資料可能是給很多個子元件共用的。</p><h2 id="內層子元件定義-props-接收"><a href="#內層子元件定義-props-接收" class="headerlink" title="內層子元件定義 props 接收"></a>內層子元件定義 props 接收</h2><p>以 <code>&lt;script setup&gt;</code> 來舉例，必須在子元件先定義 <code>defineProps</code>。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span>    <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">,</span><span class="token string">'message'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>title<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>或是用一個變數來定義 <code>defineProps</code>。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span>    <span class="token keyword">const</span> prop<span class="token operator">=</span><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">,</span><span class="token string">'message'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>title<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>可以在陣列中放入多個接收父元件資料的 <code>props</code> 聲明，Vue 才能知道父元件傳入子元件的哪些是 props。而<code>defineProps</code> 預設會返回一個帶有所 <code>props</code> 屬性的物件。</p><p>一個元件可以有多個 props，預設都可以接收任何型別的值，包含字串、數值、布林值、陣列、物件及函數。</p><h3 id="子元件內的-props-命名要使用小駝峰形式。"><a href="#子元件內的-props-命名要使用小駝峰形式。" class="headerlink" title="子元件內的 props 命名要使用小駝峰形式。"></a>子元件內的 props 命名要使用小駝峰形式。</h3><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'ironMan'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="父元件中用-v-bind-綁定props，則使用-kebab-case"><a href="#父元件中用-v-bind-綁定props，則使用-kebab-case" class="headerlink" title="父元件中用 v-bind 綁定props，則使用 kebab-case"></a>父元件中用 v-bind 綁定props，則使用 kebab-case</h3><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>MyComponent iron<span class="token operator">-</span>man<span class="token operator">=</span><span class="token string">"tony"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="props-接收動態資料"><a href="#props-接收動態資料" class="headerlink" title="props 接收動態資料"></a>props 接收動態資料</h2><p>而在父層中要傳送資料給子元件，可以這樣做：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>ChildComp <span class="token operator">:</span>message<span class="token operator">=</span><span class="token string">"catcher"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildComp<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>tmplate<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>在上面的範例中，使用 <code>v-bind</code> 綁定內層子元件的 <code>props</code>，後面則是放外層父元件要傳送的資料，口訣為「前內後外」。</p><p>假設子元件的內層 defineProps 如此聲明：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">addNum</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  count<span class="token punctuation">.</span>value <span class="token operator">+=</span> n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>h2<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"addNum(1)"</span><span class="token operator">></span><span class="token constant">ADD</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token literal-property property">Count</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>父元件的資料如此定義：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">'./components/HelloWorld.vue'</span><span class="token punctuation">;</span><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'第二個HelloWorld'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>外層父元件可以如此傳資料給子元件：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>HelloWorld <span class="token operator">:</span>msg<span class="token operator">=</span><span class="token string">"name"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token comment">// msg 是內層的 props，name 是外層的變數    </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="props-接收靜態資料"><a href="#props-接收靜態資料" class="headerlink" title="props 接收靜態資料"></a>props 接收靜態資料</h2><p>如果是靜態資料，依樣是遵守「前內後外」的原則，但是不用 <code>v-bind</code> 綁定。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>ChildComp <span class="token operator">:</span>message<span class="token operator">=</span><span class="token string">"我是一個要傳入子元件的靜態資料"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildComp<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>外層父元件可以如此傳資料給子元件：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>HelloWorld <span class="token operator">:</span>msg<span class="token operator">=</span><span class="token string">"第一個HelloWorld"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token comment">// msg 是內層的 props，name 是靜態的字串    </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><a href="https://stackblitz.com/edit/vitejs-vite-pvms69?file=src/App.vue">示範範例</a></p><h2 id="props-與-v-for-的結合"><a href="#props-與-v-for-的結合" class="headerlink" title="props 與 v-for 的結合"></a>props 與 v-for 的結合</h2><p>如果父元件要傳給子元件的資料是陣列的形式，而且每個子元件要呈現的資料隨陣列的 index 不同，可以搭配 <code>v-for</code> 來傳遞多筆資料。</p><p>父元件中的資料型態：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'我是第一個元件'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'我是第二個元件'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'我是第三個元件'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>在子元件中定義 <code>defineProps</code>：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span>    <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>message<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>在父元件中使用 <code>v-for</code> 渲染多個子元件</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>ChildComp v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"item in msg"</span> <span class="token operator">:</span>message<span class="token operator">=</span><span class="token string">"item.text"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item.id"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildComp<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>換言之，假設要在父元件中放入多個子元件，而且子元件分別要呈現不同資料，則<strong>資料可以設計成陣列物件的形式</strong>，用 <code>v-for</code> 來跑子元件。</p><p><a href="https://stackblitz.com/edit/vitejs-vite-6w1h5p?file=src/components/HelloWorld.vue">示範範例</a></p><h2 id="單向數據流"><a href="#單向數據流" class="headerlink" title="單向數據流"></a>單向數據流</h2><p>前面有提到 props 由父元件往子元件傳遞資料是單向數據流，當父元件的資料更新的時候，<strong>所有</strong>子元件的 props 會更新到最新值，所以如果你在某個元件更改了 props 的資料，則會破壞子元件間的獨立狀態，Vue 會在控制台中示警。</p><p>這意味著你不能也不該在子元件中更改 props 的資料。</p><p>但是如果你要在子元件中操作運算 props 進來的資料，可以這樣做：</p><h3 id="props-作為初始值，指定給一個新的變數"><a href="#props-作為初始值，指定給一個新的變數" class="headerlink" title="props 作為初始值，指定給一個新的變數"></a>props 作為初始值，指定給一個新的變數</h3><p>傳入的 props 要變成某個物件的屬性，再指給一個新的變數，這樣新的變數就可以自由操作運算，而不會去改到父層的資料。 </p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">const</span> prop <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 要把 msg 變成一個物件的屬性，才能運作</span><span class="token keyword">const</span> newMsg <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>prop<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>h2<span class="token operator">></span>msg <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token operator">&lt;</span>h3<span class="token operator">></span>newMsg <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> newMsg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>  <span class="token operator">&lt;</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"newMsg"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><a href="https://stackblitz.com/edit/vitejs-vite-dv9ukx?file=src/App.vue,src/components/HelloWorld.vue">示範範例</a></p><h3 id="將傳入的-props-轉換，例如把他指定給一個-computed-去產生一個新的資料。"><a href="#將傳入的-props-轉換，例如把他指定給一個-computed-去產生一個新的資料。" class="headerlink" title="將傳入的 props 轉換，例如把他指定給一個 computed 去產生一個新的資料。"></a>將傳入的 props 轉換，例如把他指定給一個 computed 去產生一個新的資料。</h3><h2 id="props-驗證"><a href="#props-驗證" class="headerlink" title="props 驗證"></a>props 驗證</h2><p>前面範例的 props 大多放在一個陣列之中，但是實務上，放入物件是比較好的做法，這樣做的同時可以把驗證的條件帶入 props 的屬性中，例如指定型別、設定預設值及是否為必須。</p><p>以下說明，取自 Vue 的官網：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 基礎型別檢查</span>  <span class="token comment">// （帶入 `null` 和 `undefined` 會跳過任何型別檢查）</span>  <span class="token literal-property property">propA</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>  <span class="token comment">// 檢查多種型別</span>  <span class="token literal-property property">propB</span><span class="token operator">:</span> <span class="token punctuation">[</span>String<span class="token punctuation">,</span> Number<span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// require 必傳，且為 String 型別</span>  <span class="token literal-property property">propC</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// Number 型別，default 為預設值</span>  <span class="token literal-property property">propD</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">100</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 物件型別的預設值</span>  <span class="token literal-property property">propE</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>    <span class="token comment">// 物件或陣列的預設值</span>    <span class="token comment">// 必须从一个工厂函数返回。</span>    <span class="token comment">// 该函数接收组件所接收到的原始 prop 作为参数。</span>    <span class="token keyword">default</span><span class="token punctuation">(</span>rawProps<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'hello'</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 自訂義行型別叫驗函數</span>  <span class="token literal-property property">propF</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">validator</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// The value must match one of these strings</span>      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">'success'</span><span class="token punctuation">,</span> <span class="token string">'warning'</span><span class="token punctuation">,</span> <span class="token string">'danger'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 函數型別的預設值</span>  <span class="token literal-property property">propG</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>    <span class="token comment">// 不像对象或数组的默认，这不是一个</span>    <span class="token comment">// 工厂函数。这会是一个用来作为默认值的函数</span>    <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">'Default function'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://hackmd.io/_uploads/HJ1qtPh_2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在談 &lt;code&gt;props&lt;/code&gt; 之前，先來說說子元件的資料來源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自己的資料&lt;/strong&gt;：也就</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="props, component" scheme="https://popeye-ux.github.io/tags/props-component/"/>
    
  </entry>
  
  <entry>
    <title>ref再複習</title>
    <link href="https://popeye-ux.github.io/2023/06/17/vue-reviewREF/"/>
    <id>https://popeye-ux.github.io/2023/06/17/vue-reviewREF/</id>
    <published>2023-06-17T15:32:16.000Z</published>
    <updated>2023-06-17T15:38:01.649Z</updated>
    
    <content type="html"><![CDATA[<p>寫了一陣子 VUE，也用了一陣子的 ref()，結果看了 Alex 的<a href="https://www.youtube.com/watch?v=P3_pwbbN4X4&t=3395s">直播</a>才發現自己和 ref() 有點陌生，回頭去好好讀了 VUE3 的官方文件，整理了一下筆記，方便回頭複習。</p><h3 id="ref-重點整理"><a href="#ref-重點整理" class="headerlink" title="ref 重點整理"></a>ref 重點整理</h3><ul><li>ref() 會將傳入參數的值轉換為帶有 .value 屬性的 ref 物件</li><li>如果 ref()放入的是物件，則 .value 屬性的值是proxy物件</li><li>ref() 是 refimpl 的物件</li><li>ref() 的.value 是響應式的，當值為物件時，會用 reactive() 轉換 .value</li><li>ref() 的參數如果放入物件型別，可以響應式的替換整個物件</li><li>ref() 被傳遞給函式或是解構時，不會失去響應性</li><li>ref() 讓我們能夠創造對任意值得引用 (reference)，並在不失去響應性的前提下傳遞這些引用</li><li>ref() 在 template渲染 上下文頂層屬性時才會自動解包</li><li>當一個 ref 被放入reactive() 物件中，作為屬性被訪問或更改時，會自動解包</li><li>如果將一個新的 ref() 賦值給一個已經有 ref 的屬性，那它會替換舊的 ref</li></ul><h2 id="ref-會將傳入參數的值轉換為帶有-value-屬性的-ref-物件"><a href="#ref-會將傳入參數的值轉換為帶有-value-屬性的-ref-物件" class="headerlink" title="ref() 會將傳入參數的值轉換為帶有 .value 屬性的 ref 物件"></a>ref() 會將傳入參數的值轉換為帶有 .value 屬性的 ref 物件</h2><p>在 VUE 裡面要使用 ref(),作法是在 () 括號中放入 基本型別的字串、數字或是布林值，也可以放入陣列或是物件。</p><p><strong>ref()的樣子看起來就是一個函式，() 括號中放入的就是參數,參數會變成帶有 .value 的 ref 物件。</strong></p><p>參數可以傳入基本型別的字串、數字或是布林值，也可以放入陣列或是物件。</p><p>以下面 VUE 官網的例子來說，<code>console.log(count) </code> 得出一個 <code>&#123; value: 0 &#125;</code> 的物件，因此要取得 <code>count</code> 的值必須使用 <code>count.value</code>。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token comment">// &#123; value: 0 &#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 0</span>count<span class="token punctuation">.</span>value<span class="token operator">++</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="ref-的-value-是響應式的"><a href="#ref-的-value-是響應式的" class="headerlink" title="ref() 的.value 是響應式的"></a>ref() 的.value 是響應式的</h2><p>ref() 的.value 是響應式的，當值為物件時，會用 reactive() 轉換為 .value，所以裡面運作的是proxy 機制，但如果是基本型別的話則否。</p><p>在 SFC 的 <code>&lt;script&gt;</code> 區塊要透過 .value 取值，而在<code>&lt;template&gt;</code> 模板中取用 ref() 不需要加上 .value。</p><h3 id="ref-的參數如果放入物件型別，可以響應式的替換整個物件"><a href="#ref-的參數如果放入物件型別，可以響應式的替換整個物件" class="headerlink" title="ref() 的參數如果放入物件型別，可以響應式的替換整個物件"></a>ref() 的參數如果放入物件型別，可以響應式的替換整個物件</h3><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> objectRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 物件替換後，仍為響應式</span>objectRef<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> objectRef<span class="token punctuation">.</span>count <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token comment">//1</span>  <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> objectRef<span class="token punctuation">.</span>count<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token comment">//2</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="ref-被傳遞給函式或是解構時，不會失去響應性"><a href="#ref-被傳遞給函式或是解構時，不會失去響應性" class="headerlink" title="ref() 被傳遞給函式或是解構時，不會失去響應性"></a>ref() 被傳遞給函式或是解構時，不會失去響應性</h3><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// add 函式接收一個 ref</span><span class="token comment">// 需要透過 value 取值</span><span class="token comment">// 但是會維持響應性</span><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  v<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 仍然是响应式的</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> foo<span class="token punctuation">,</span> bar <span class="token punctuation">&#125;</span> <span class="token operator">=</span> obj<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> foo <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token comment">//1</span>  <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"add(obj.foo)"</span><span class="token operator">></span> 加加 <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>foo<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>ref() 讓我們能夠創造對任意值的參考 (reference)，並在不失去響應性的前提下傳遞這些參考。</p><h2 id="甚麼是「解包」"><a href="#甚麼是「解包」" class="headerlink" title="甚麼是「解包」"></a>甚麼是「解包」</h2><p>「解包」這兩個字其實就是英文的 「unwrap」，指的是當在 <code>&lt;template&gt;</code> 中引用 ref 的頂層屬性不需要使用 .value。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">></span>    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 模板中引用不需要使用 <span class="token punctuation">.</span>value <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="頂層屬性的-ref-才能自動解包"><a href="#頂層屬性的-ref-才能自動解包" class="headerlink" title="頂層屬性的 ref 才能自動解包"></a>頂層屬性的 ref 才能自動解包</h3><p>也就是如果是在物件的屬性中包入 ref() 雖然能傳遞計算後的最終值，但是如果在模板中做處理效果會不如預期。例如下面的範例，<code>&#123;&#123; object.foo + 1 &#125;&#125;</code> 會變成 <code>[object Object]1</code>。</p><p>但是如果是在函式中做運算，則可以正常運作。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script setup<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> foo <span class="token punctuation">&#125;</span> <span class="token operator">=</span> object<span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  foo<span class="token punctuation">.</span>value<span class="token operator">++</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   object<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>value<span class="token operator">++</span> <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span>foo <span class="token operator">===</span> foo<span class="token punctuation">)</span>  <span class="token comment">// true</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>template<span class="token operator">></span>   <span class="token operator">&lt;</span>br<span class="token operator">></span>   <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"add"</span><span class="token operator">></span>    object<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> object<span class="token punctuation">.</span>foo <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 无需 <span class="token punctuation">.</span>value <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>object<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span>br<span class="token operator">></span>  object<span class="token punctuation">.</span>foo <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">=</span>  <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> object<span class="token punctuation">.</span>foo <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token punctuation">[</span>object Object<span class="token punctuation">]</span><span class="token number">1</span> <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>br<span class="token operator">></span>  foo <span class="token operator">=</span>  <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> foo <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">1</span> <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>br<span class="token operator">></span>   <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">></span>    foo <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> foo <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 无需 <span class="token punctuation">.</span>value <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>由上面的範例也可以看到，當 ref()作為物件的屬性時，即使經過解構，判斷 <code>object.foo === foo</code> 仍然為 true，指向相同的參考。</p><h3 id="ref-在-reactive-作為屬性解包"><a href="#ref-在-reactive-作為屬性解包" class="headerlink" title="ref() 在 reactive() 作為屬性解包"></a>ref() 在 reactive() 作為屬性解包</h3><p>当一个 ref 被嵌套在一个响应式对象中，作为属性被访问或更改时，它会自动解包，因此会表现得和一般的属性一样：</p><p>當 ref() 作為一個 reactive()物件的屬性被操作時，它會自動解包，表現和一般屬性一樣：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript!" data-language="javascript!"><code class="language-javascript!">const count &#x3D; ref(0)const state &#x3D; reactive(&#123;  count&#125;)console.log(state.count) &#x2F;&#x2F; 0state.count &#x3D; 1console.log(count.value) &#x2F;&#x2F; 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="一個已經是-ref-的常數可以被新的-ref-賦值"><a href="#一個已經是-ref-的常數可以被新的-ref-賦值" class="headerlink" title="一個已經是 ref() 的常數可以被新的 ref() 賦值"></a>一個已經是 ref() 的常數可以被新的 ref() 賦值</h3><p>俗話說：「只見新人笑，不見舊人哭」，如果一個常數已經被某個 ref()賦值，仍然可以拿一個新的 ref() 賦值給它，這時這個常數就會指向新的 ref()。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript!" data-language="javascript!"><code class="language-javascript!">const otherCount &#x3D; ref(2)state.count &#x3D; otherCountconsole.log(state.count) &#x2F;&#x2F; 2&#x2F;&#x2F; 原始 ref 现在已经和 state.count 失去联系console.log(count.value) &#x2F;&#x2F; 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;寫了一陣子 VUE，也用了一陣子的 ref()，結果看了 Alex 的&lt;a href=&quot;https://www.youtube.com/watch?v=P3_pwbbN4X4&amp;t=3395s&quot;&gt;直播&lt;/a&gt;才發現自己和 ref() 有點陌生，回頭去好好讀了 VUE3 的官方</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue3, refs" scheme="https://popeye-ux.github.io/tags/Vue3-refs/"/>
    
  </entry>
  
  <entry>
    <title>輸入框變身搜尋下拉選單</title>
    <link href="https://popeye-ux.github.io/2023/05/25/js-input-select/"/>
    <id>https://popeye-ux.github.io/2023/05/25/js-input-select/</id>
    <published>2023-05-25T15:44:56.000Z</published>
    <updated>2023-05-25T15:57:14.016Z</updated>
    
    <content type="html"><![CDATA[<p>最近常常遇到 PM 要求「下拉選單同時要有搜尋」的功能，之前在 Vue 裡面使用 V-select 套件來做，如果在原生的 JS 要寫這樣的功能，也找到 chosen.js 或 select2.js 這樣的套件可以做出這樣的功能。</p><p>剛開始我都以為「下拉選單同時要有搜尋」是使用<code>&lt;select&gt;</code> 表單元素去改的，但是在找資料的過程中，慢慢認知到可能不是用 <code>select</code> ，而是用 <code>input</code> 去改出這樣的效果。</p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-div<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 箭頭 要做旋轉的互動 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uil uil-angle-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- input 輸入搜尋 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- option 要放下拉選單的選項 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>CSS 部分儘量不做太多裝飾，不要混淆我們學習做這個功能的單純性。在這裡我會取消 <code>input</code> 的框線，用 <code>input-div</code> 包住它及放選項的 <code>option</code>，偽裝成下拉選單。</p><p>當 user 點擊 <code>input</code> 的時候，<code>option</code> 加上 <code>.active</code> 樣式，露出下拉選單的選項。 </p><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.input-wrapper</span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.input-div</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 240px<span class="token punctuation">;</span>  <span class="token property">max-height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.input-div input</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 196px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.input-div input:focus</span> <span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">.input-div i</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> transform 0.3s linear<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token selector">.arrowTransform</span> <span class="token punctuation">&#123;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-180deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.option.active  i</span><span class="token punctuation">&#123;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-180deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.option</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.option li</span> <span class="token punctuation">&#123;</span>  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.option::-webkit-scrollbar</span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 7px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.option::-webkit-scrollbar-track</span><span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #f1f1f1<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.option::-webkit-scrollbar-thumb</span><span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.active</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span class="token comment">/*   border: 1px red solid; */</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>改造的思路如下：</p><ol><li>監聽 <code>&lt;input&gt;</code> 輸入框的點擊事件，下方要如同下拉選單一般呈現所有的選項。</li><li>監聽 <code>&lt;input&gt;</code> 輸入事件，篩選下拉選單中符合輸入「字串」的選項。</li><li>選取下拉選單中的選項，同時呈現在輸入框之中。</li></ol><p>在 JS 中，我們先取得這幾個 DOM 元素及設定下拉選單的資料陣列：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token comment">// inputSearch 取得 input 輸入框的 DOM 元素</span><span class="token keyword">const</span> inputSearch <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'input-search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// option 取得 要置放下拉選項的 DOM 元素</span><span class="token keyword">const</span> option <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.option'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// arrow 取得 input 輸入框的向下箭頭</span><span class="token keyword">const</span> arrow <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.uil-angle-down'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 下拉選單的選項</span><span class="token keyword">let</span> iParks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"鋼鐵人"</span><span class="token punctuation">,</span><span class="token string">"蜘蛛人"</span><span class="token punctuation">,</span><span class="token string">"美國隊長"</span><span class="token punctuation">,</span><span class="token string">"黑寡婦"</span><span class="token punctuation">,</span><span class="token string">"雷神"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="監聽-lt-input-gt-輸入框的點擊事件"><a href="#監聽-lt-input-gt-輸入框的點擊事件" class="headerlink" title="監聽 &lt;input&gt; 輸入框的點擊事件"></a>監聽 <code>&lt;input&gt;</code> 輸入框的點擊事件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token comment">// 監聽 輸入框，點擊時 option 加上 .active 樣式</span>inputSearch<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token comment">//   添加 active 樣式，讓下拉選單顯現出來</span>  option<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     i<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"arrowTransform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    i<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"arrowTransform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// arrow.classList.toggle('arrowTransform');</span>  <span class="token function">addIpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="監聽-lt-input-gt-輸入事件"><a href="#監聽-lt-input-gt-輸入事件" class="headerlink" title="監聽 &lt;input&gt; 輸入事件"></a>監聽 <code>&lt;input&gt;</code> 輸入事件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token comment">// 監聽輸入框</span>inputSearch<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"keyup"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//     輸入的字串</span>  <span class="token keyword">let</span> searchedVal <span class="token operator">=</span> inputSearch<span class="token punctuation">.</span>value<span class="token punctuation">;</span>  arr <span class="token operator">=</span> iParks<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>searchedVal<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;li onclick="updateName(this)"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/li></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//     組字串到 option 中</span>  option<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> arr <span class="token operator">?</span> arr <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p>沒有符合您輸入條件的選項&lt;/p></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="選取下拉選單中的選項，同時呈現在輸入框之中"><a href="#選取下拉選單中的選項，同時呈現在輸入框之中" class="headerlink" title="選取下拉選單中的選項，同時呈現在輸入框之中"></a>選取下拉選單中的選項，同時呈現在輸入框之中</h2><p>這個 <code>function</code> 要在 <code>option</code> 的選項組版時，放入 <code>&lt;li&gt;</code> 中。</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;li onclick="updateName(this)"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/li></span><span class="token template-punctuation string">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">function</span> <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token parameter">selectedLi</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selectedLi<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">;</span>  inputSearch<span class="token punctuation">.</span>value <span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>  <span class="token function">addIpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  option<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     i<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"arrowTransform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    i<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"arrowTransform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  inputSearch<span class="token punctuation">.</span>value <span class="token operator">=</span> selectedLi<span class="token punctuation">.</span>innerText<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="完整-JS"><a href="#完整-JS" class="headerlink" title="完整 JS"></a>完整 JS</h3><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token comment">// inputSearch 取得 input 輸入框的 DOM 元素</span><span class="token keyword">const</span> inputSearch <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'input-search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// option 取得 要置放下拉選項的 DOM 元素</span><span class="token keyword">const</span> option <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.option'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// arrow 取得 input 輸入框的向下箭頭</span><span class="token keyword">const</span> arrow <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.uil-angle-down'</span><span class="token punctuation">)</span><span class="token keyword">const</span> i <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.input-div i'</span><span class="token punctuation">)</span><span class="token comment">// 下拉選單的選項</span><span class="token keyword">let</span> iParks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"鋼鐵人"</span><span class="token punctuation">,</span><span class="token string">"蜘蛛人"</span><span class="token punctuation">,</span><span class="token string">"美國隊長"</span><span class="token punctuation">,</span><span class="token string">"黑寡婦"</span><span class="token punctuation">,</span><span class="token string">"雷神"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 監聽 輸入框，點擊時 option 加上 .active 樣式</span>inputSearch<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token comment">//   添加 active 樣式，讓下拉選單顯現出來</span>  option<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     i<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"arrowTransform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    i<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"arrowTransform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// arrow.classList.toggle('arrowTransform');</span>  <span class="token function">addIpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 把選項渲染到下拉選單中</span><span class="token keyword">function</span> <span class="token function">addIpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  option<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  iParks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">iPark</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iPark<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> li <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;li onclick="updateName(this)"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>iPark<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/li></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    option<span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">"beforeend"</span><span class="token punctuation">,</span>li<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 下拉選單 選取選項之後 更新到 input</span><span class="token keyword">function</span> <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token parameter">selectedLi</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selectedLi<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">;</span>  inputSearch<span class="token punctuation">.</span>value <span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>  <span class="token function">addIpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  option<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     i<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"arrowTransform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    i<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"arrowTransform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  inputSearch<span class="token punctuation">.</span>value <span class="token operator">=</span> selectedLi<span class="token punctuation">.</span>innerText<span class="token punctuation">;</span>  <span class="token comment">// selectBtn.firstElementChild.innerText = selectedLi.innerText; </span><span class="token punctuation">&#125;</span><span class="token comment">// 監聽輸入框</span>inputSearch<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"keyup"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>inputSearch<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> searchedVal <span class="token operator">=</span> inputSearch<span class="token punctuation">.</span>value<span class="token punctuation">;</span>  arr <span class="token operator">=</span> iParks<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>searchedVal<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;li onclick="updateName(this)"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/li></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  option<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> arr <span class="token operator">?</span> arr <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p>沒有符合您輸入條件的選項&lt;/p></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="下拉選單 輸入搜尋" src="https://codepen.io/popeye_ux/embed/vYVbwYp?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/vYVbwYp">  下拉選單 輸入搜尋</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><p>參考資料：</p><ul><li><a href="https://ithelp.ithome.com.tw/articles/10193392">Chosen - 下拉式選單全面進化</a></li><li><a href="https://www.youtube.com/watch?v=R4owT-LcKOo">https://www.youtube.com/watch?v=R4owT-LcKOo</a></li><li><a href="https://dotblogs.com.tw/Henry_Blog/2020/08/18/135817">https://dotblogs.com.tw/Henry_Blog/2020/08/18/135817</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近常常遇到 PM 要求「下拉選單同時要有搜尋」的功能，之前在 Vue 裡面使用 V-select 套件來做，如果在原生的 JS 要寫這樣的功能，也找到 chosen.js 或 select2.js 這樣的套件可以做出這樣的功能。&lt;/p&gt;
&lt;p&gt;剛開始我都以為「下拉選單同時</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, input, search, selects" scheme="https://popeye-ux.github.io/tags/JavaScript-input-search-selects/"/>
    
  </entry>
  
  <entry>
    <title>用給定的順序改變陣列本來的順序</title>
    <link href="https://popeye-ux.github.io/2023/05/14/js-resort-array/"/>
    <id>https://popeye-ux.github.io/2023/05/14/js-resort-array/</id>
    <published>2023-05-14T15:49:05.000Z</published>
    <updated>2023-05-14T16:02:27.171Z</updated>
    
    <content type="html"><![CDATA[<p>公司要提供客戶美食優惠券，公司資料庫中有客戶偏好的食物類型，我心想這個簡單，不就打個 API 就把資料取回來了嗎，取回的資料結果如下：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"小明"</span><span class="token punctuation">,</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"牛排"</span><span class="token punctuation">,</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"小華"</span><span class="token punctuation">,</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"壽司"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"小春"</span><span class="token punctuation">,</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"燒肉"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"小陽"</span><span class="token punctuation">,</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"義大利麵"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"小陽"</span><span class="token punctuation">,</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"麥當勞"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>但這時候，行銷部門的經理跑來說，這個名單要按照這樣的「”燒肉”,”牛排”,”壽司”,”麥當勞”,”義大利麵”」順序來排列。</p><p>要解決這個問題，我們可以先根據食物順序排定一個陣列：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">const</span> typeOrder <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"燒肉"</span><span class="token punctuation">,</span><span class="token string">"牛排"</span><span class="token punctuation">,</span><span class="token string">"壽司"</span><span class="token punctuation">,</span><span class="token string">"麥當勞"</span><span class="token punctuation">,</span><span class="token string">"義大利麵"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>然後利用 Array.prototype.indexOf() 與  Array.prototype.sort() 來重新排列原始陣列的順序：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx">arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>typeOrder<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>typeOrder<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> typeOrder<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token operator">-</span> typeOrder<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>Array.prototype.indexOf()會回傳給定元素於陣列中第一個被找到之索引位置，若不存在於陣列中則回傳 -1。</p><p>Array.prototype.sort() 方法會原地（in place）對一個陣列的所有元素進行排序，並回傳此陣列。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;公司要提供客戶美食優惠券，公司資料庫中有客戶偏好的食物類型，我心想這個簡單，不就打個 API 就把資料取回來了嗎，取回的資料結果如下：&lt;/p&gt;
&lt;figure&gt;&lt;div class=&quot;code-wrapper&quot;&gt;&lt;pre class=&quot;line-numbers langua</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript,array,sort,indexOf" scheme="https://popeye-ux.github.io/tags/JavaScript-array-sort-indexOf/"/>
    
  </entry>
  
  <entry>
    <title>網頁截圖功能 DOM to image</title>
    <link href="https://popeye-ux.github.io/2023/03/17/dom-to-image/"/>
    <id>https://popeye-ux.github.io/2023/03/17/dom-to-image/</id>
    <published>2023-03-17T15:43:26.000Z</published>
    <updated>2023-03-17T15:45:59.880Z</updated>
    
    <content type="html"><![CDATA[<p>最近在工作上需要寫網頁截圖的功能，所以稍微研究了一下 dom-to-image 這個插件，在我寫這篇筆記時的版本是 2.15.0。<br><a href="https://github.com/tsayen/dom-to-image">dom-to-image</a><br><a href="https://www.npmjs.com/package/dom-to-image-more">npm-dom-to-image</a></p><h2 id="起手式"><a href="#起手式" class="headerlink" title="起手式"></a>起手式</h2><h3 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h3><p>如果要使用 npm 的方式可以參考以下安裝指令：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">npm install dom<span class="token operator">-</span>to<span class="token operator">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="官網範例"><a href="#官網範例" class="headerlink" title="官網範例"></a>官網範例</h3><p>**step1 **</p><p><code>node</code> 參數放入要抓取截圖的 DOM 節點，<code>config</code> 的部分放入細部的設定。</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  domtoimage<span class="token punctuation">.</span><span class="token function">toPng</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span>config<span class="token punctuation">)</span>  <span class="token comment">//程式碼放的位置</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>config&#96; 設定</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">quality</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token string">"grayscale(100%)"</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">"600px"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ul><li>quality: 設定圖片的品質。</li><li>style: 可以套用濾鏡，也可以設定圖片的寬度與高度。</li></ul><p><strong>step2</strong><br>後面接非同步程式碼</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'my-node'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>domtoimage<span class="token punctuation">.</span><span class="token function">toPng</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>    <span class="token comment">// 非同步程式碼</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">dataUrl</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 產生圖片的網址</span>        img<span class="token punctuation">.</span>src <span class="token operator">=</span> dataUrl<span class="token punctuation">;</span>        <span class="token comment">// 把圖片加入到 body 節點的下方</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'oops, something went wrong!'</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>我在 CodePen 中加入一個按鈕，去監聽 <code>click</code> 事件，觸發 domtoimage ，擷取到 <code>capture1</code> DOM 元素，轉為圖片， 然後把圖片的網址 append 到按鈕之後的 <code>inserDiv</code> 節點上。</p><iframe height="300" style="width: 100%;" scrolling="no" title="dom-to-image-append" src="https://codepen.io/popeye_ux/embed/VwGQxQJ?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/VwGQxQJ">  dom-to-image-append</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h2 id="擷取-DOM-元素，下載圖片"><a href="#擷取-DOM-元素，下載圖片" class="headerlink" title="擷取 DOM 元素，下載圖片"></a>擷取 DOM 元素，下載圖片</h2><p>接下來加上以下程式碼，就可以做到截取 DOM 元素，轉為圖片之後下載的功能。</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token comment">// 幫下載的圖片檔案名稱</span><span class="token keyword">const</span> filename <span class="token operator">=</span> <span class="token string">"popeye_Demo_"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 下載的部分</span><span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 下載圖片的檔名</span>link<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>filename<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.jpeg</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>link<span class="token punctuation">.</span>href <span class="token operator">=</span> dataUrl<span class="token punctuation">;</span>link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>完整 JS 程式碼</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">var</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"capture1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// config 參數設定</span><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">quality</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token string">"grayscale(100%)"</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">"600px"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> newnode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"h2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> textnode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token string">"截到的圖"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>newnode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>textnode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 觸發按鈕</span><span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"captureBtn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 監聽觸發按鈕 domtoimage.toPng(node)</span>captureBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  domtoimage    <span class="token punctuation">.</span><span class="token function">toPng</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> config<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">dataUrl</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      img<span class="token punctuation">.</span>src <span class="token operator">=</span> dataUrl<span class="token punctuation">;</span>      <span class="token keyword">const</span> filename <span class="token operator">=</span> <span class="token string">"popeye_Demo_"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 下載的部分</span>      <span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 下載圖片的檔名</span>      link<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>filename<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.jpeg</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>      link<span class="token punctuation">.</span>href <span class="token operator">=</span> dataUrl<span class="token punctuation">;</span>      link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 把截圖插入到指定的位置</span>      <span class="token keyword">const</span> inserDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"insert"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      inserDiv<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newnode<span class="token punctuation">)</span><span class="token punctuation">;</span>      inserDiv<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"oops, something went wrong!"</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="dom-to-image" src="https://codepen.io/popeye_ux/embed/PodQRVv?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/PodQRVv">  dom-to-image</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul><li><a href="https://medium.com/front-end-augustus-study-notes/web-to-image-88901c073da6">做一個簡單的網頁截圖功能</a></li><li><a href="https://html2canvas.hertzen.com/">html2canvas 官網</a></li><li><a href="https://dev.to/letswrite/jian-dan-de-wang-ye-jie-tu-gong-neng-dom-to-image-2h8d">https://dev.to/letswrite/jian-dan-de-wang-ye-jie-tu-gong-neng-dom-to-image-2h8d</a></li><li><a href="https://codepen.io/weilinzung/pen/VXzEaN">https://codepen.io/weilinzung/pen/VXzEaN</a></li><li><a href="https://stackblitz.com/edit/react-3j9qja?file=src/App.js">https://stackblitz.com/edit/react-3j9qja?file=src%2FApp.js</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在工作上需要寫網頁截圖的功能，所以稍微研究了一下 dom-to-image 這個插件，在我寫這篇筆記時的版本是 2.15.0。&lt;br&gt;&lt;a href=&quot;https://github.com/tsayen/dom-to-image&quot;&gt;dom-to-image&lt;/a&gt;&lt;br</summary>
      
    
    
    
    <category term="PlugIn" scheme="https://popeye-ux.github.io/categories/PlugIn/"/>
    
    
    <category term="JavaScript, dom-to-image, plugin" scheme="https://popeye-ux.github.io/tags/JavaScript-dom-to-image-plugin/"/>
    
  </entry>
  
  <entry>
    <title>Vue 實作 check box 全選與取消全選</title>
    <link href="https://popeye-ux.github.io/2023/03/09/vue-allchecked/"/>
    <id>https://popeye-ux.github.io/2023/03/09/vue-allchecked/</id>
    <published>2023-03-09T14:07:52.000Z</published>
    <updated>2023-03-11T04:18:58.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-實作-check-box-全選與取消全選"><a href="#Vue-實作-check-box-全選與取消全選" class="headerlink" title="Vue 實作 check box 全選與取消全選"></a>Vue 實作 check box 全選與取消全選</h1><p>check box 全選與取消全選有 2 種做法可以實現這個功能，可以使用 methods 來實現，也可以使用 computed 來監聽「全選的核取框」。</p><h2 id="使用-methods-方法實作"><a href="#使用-methods-方法實作" class="headerlink" title="使用 methods 方法實作"></a>使用 methods 方法實作</h2><ul><li>全選的 check box 雙向綁定到 allChecked 這個資料狀態，預設的布林值為 false。</li><li>checkList 這個資料狀態是一個陣列，存放所有的 check box 選項。</li><li>在 data 中準備一個 checkedItems 的空陣列。</li><li>使用 v-for 把 checkList 裡面的資料渲染成一個一個的 check box 選項，與 checkedItems 雙向綁定。</li><li>在 <code>methods</code> 中，準備一個 allCheckedFn 的方法，綁定change事件到「全選」的核取框，把 checkList 裡面的的選項 map 到一個 arr 空陣列，點擊全選的時候，allChecked會變成 true ，然後使用 三元運算式判斷，當 allChecked 為 true 的時候，checkedItems（與所有選項雙向綁定）會被賦值為 arr ，allChecked 為 false 的時候為空陣列：<figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">this</span><span class="token punctuation">.</span>checkedHeros <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allChecked <span class="token operator">?</span> arr <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li>changeFn這個方法，比對 checkedHeros 的陣列長度與 核取框原始資料陣列長度 是否一致，返回一個布林值，賦值給 全選 allChecked 這個資料狀態。</li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;div id&#x3D;&quot;app&quot;&gt;  &lt;p&gt;    &lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;select&quot; v-model&#x3D;&quot;allChecked&quot; @change&#x3D;&quot;allCheckedFn&quot;&gt;    &lt;label for&#x3D;&quot;select&quot;&gt;全選&#x2F;反選&lt;&#x2F;label&gt;  &lt;&#x2F;p&gt;  &lt;!-- 注意下面 input 對應的都是 v-model&#x3D;&quot;checkedHeros&quot;  --&gt;  &lt;div v-for&#x3D;&quot;item in checkList&quot; :key&#x3D;&quot;item.id&quot; v-model&#x3D;&quot;checkedItems&quot;&gt;     &lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;item.name&quot; :value&#x3D;&quot;item.name&quot; v-model&#x3D;&quot;checkedItems&quot; @change&#x3D;&quot;changeFn&quot;&gt;    &lt;label for&#x3D;&quot;item.name&quot;&gt;&#123;&#123;item.id + item.name&#125;&#125;&lt;&#x2F;label&gt;  &lt;&#x2F;div&gt;  &lt;br&gt;  &lt;p&gt;checkedItems: &#123;&#123; checkedItems &#125;&#125;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 因為是複選的關係，這裡的 checkedHeros 是陣列</span><span class="token keyword">const</span> vm <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// checkedHeros和複選框雙向綁定</span>      <span class="token literal-property property">checkedItems</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">allChecked</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token literal-property property">checkList</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'鋼鐵人'</span><span class="token punctuation">,</span>        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>         <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'蜘蛛人'</span><span class="token punctuation">,</span>        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>         <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'蟻人'</span><span class="token punctuation">,</span>        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 全選用的方法</span>    <span class="token function">allCheckedFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment">// heroList 是所有選項的清單，arr 這個陣列會裝進所有選項</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>checkList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// allChecked 和全選框綁定，如果是true，就是裝有所有選項的 arr 陣列（全選），如果 false ，就是空陣列（全不選）</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>checkedItems <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allChecked <span class="token operator">?</span> arr <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">changeFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//       比對</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>allChecked <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>checkedItems<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>checkList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>vm<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="全選或取消選取-methods" src="https://codepen.io/popeye_ux/embed/BaOZEXE?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/BaOZEXE">  全選或取消選取-methods</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h2 id="使用-computed-實作"><a href="#使用-computed-實作" class="headerlink" title="使用 computed 實作"></a>使用 computed 實作</h2><p><img src="https://i.imgur.com/JiJ4JJA.png"></p><p>使用 computed 監聽 allChecked 這個資料狀態，然後 allChecked 與全選框綁定。checkedItems 與所有的選項雙向綁定。</p><ul><li>get 的部分是監聽所有的選項，所有選項都打勾時，全選會被核取。<ul><li>使用三元運算子，當 checkList 的陣列長度等於 checkedItems 的陣列長度時，全選會打勾。</li></ul></li><li>set 的部分是監聽全選框，全選核取時，所有的選項都會打勾。<ul><li>設一個 selected 空陣列，當全選框勾選時，value 為 true，會把 checkList 裡的選項推到 selected，把 selected 賦值給 checkedItems，這時所有選項都會打勾。</li><li>當全選框沒有勾選時， value 為 false，selected 為空陣列，checkedItems 裏沒有選項。<figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;div id&#x3D;&quot;app&quot;&gt;  &lt;p&gt;    &lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;select&quot; v-model&#x3D;&quot;allChecked&quot;&gt;    &lt;label for&#x3D;&quot;select&quot;&gt;全選&#x2F;反選&lt;&#x2F;label&gt;  &lt;&#x2F;p&gt;  &lt;!-- 注意下面 input 對應的都是 v-model&#x3D;&quot;checkedHeros&quot;  --&gt;  &lt;div v-for&#x3D;&quot;item in checkList&quot; :key&#x3D;&quot;item.id&quot; &gt;     &lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;item.name&quot; :value&#x3D;&quot;item.name&quot; v-model&#x3D;&quot;checkedItems&quot;&gt;    &lt;label for&#x3D;&quot;item.name&quot;&gt;&#123;&#123;item.id + item.name&#125;&#125;&lt;&#x2F;label&gt;  &lt;&#x2F;div&gt;  &lt;br&gt;  &lt;p&gt;Checked heros: &#123;&#123; checkedItems &#125;&#125;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul></li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 因為是複選的關係，這裡的 checkedHeros 是陣列</span><span class="token keyword">const</span> vm <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">checkedHeros</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment">// allChecked: false,</span>      <span class="token literal-property property">heroList</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"鋼鐵人"</span><span class="token punctuation">,</span>          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>          <span class="token literal-property property">selected</span><span class="token operator">:</span> <span class="token boolean">false</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"蜘蛛人"</span><span class="token punctuation">,</span>          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>          <span class="token literal-property property">selected</span><span class="token operator">:</span> <span class="token boolean">false</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"蟻人"</span><span class="token punctuation">,</span>          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>          <span class="token literal-property property">selected</span><span class="token operator">:</span> <span class="token boolean">false</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//allChecked 與 全選雙向綁定</span>    <span class="token literal-property property">allChecked</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//當所有選項都選的時候，全選會打勾</span>      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>heroList          <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>checkedHeros<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>heroList<span class="token punctuation">.</span>length          <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">//全選打勾時，所有選項都會打勾</span>      <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// value 是  在全選 checkbox 上的勾選狀態，打勾時為 true，用 v-model 雙向綁定</span>        <span class="token comment">// 暫存用陣列，用來存放被打勾的 checkbox value</span>        <span class="token keyword">let</span> selected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 如果全選打勾</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 把可以勾的 選項 push 到暫存的 selected 陣列</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>heroList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 寫入暫存陣列</span>            selected<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 將暫存陣列的值寫到已經勾選的容器陣列，表示全都勾（true），false 時會被清空，因為 selected 此時為空陣列</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>checkedHeros <span class="token operator">=</span> selected<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>vm<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="全選或取消選取-computed" src="https://codepen.io/popeye_ux/embed/eYLEYwo?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/eYLEYwo">  全選或取消選取-computed</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue-實作-check-box-全選與取消全選&quot;&gt;&lt;a href=&quot;#Vue-實作-check-box-全選與取消全選&quot; class=&quot;headerlink&quot; title=&quot;Vue 實作 check box 全選與取消全選&quot;&gt;&lt;/a&gt;Vue 實作 check b</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue3, JavaScript, checkbox, computed,methods" scheme="https://popeye-ux.github.io/tags/Vue3-JavaScript-checkbox-computed-methods/"/>
    
  </entry>
  
  <entry>
    <title>在 Option API 使用 ref 來操控 DOM 元素</title>
    <link href="https://popeye-ux.github.io/2023/02/28/vue-option-ref-basics/"/>
    <id>https://popeye-ux.github.io/2023/02/28/vue-option-ref-basics/</id>
    <published>2023-02-28T09:04:12.000Z</published>
    <updated>2023-02-28T09:05:58.483Z</updated>
    
    <content type="html"><![CDATA[<p>在原生的 Java Script 中常常會使用 id 來取得 DOM 元素，但是開發到最後常常會用了太多的 id，搞的 id 的名稱互相衝突。在 VUE 中提供了 $refs 的方法，讓我們用 ref 代替 id 來取得 DOM 元素。</p><p>ref 的作用：</p><ul><li>用來選取與操控 DOM 元素。</li><li>用來取得元件的內容。</li><li>Bootstrap Modal 元件的封裝。</li></ul><h2 id="使用-ref-取得-DOM-元素"><a href="#使用-ref-取得-DOM-元素" class="headerlink" title="使用 ref 取得 DOM 元素"></a>使用 ref 取得 DOM 元素</h2><p>在 <code>input</code> 標籤中加入 <code>ref=&quot;inputDom&quot;</code>，就可以在 Vue 中使用 <code>this.$refs.inputDom</code>選取到 <code>input</code> 輸入框。</p><h3 id="HTML-部分"><a href="#HTML-部分" class="headerlink" title="HTML 部分"></a>HTML 部分</h3><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;div id&#x3D;&quot;app&quot;&gt;  &lt;h3&gt;使用 ref 定義元素&lt;&#x2F;h3&gt;   message: &lt;br&gt;  &lt;input type&#x3D;&quot;text&quot; ref&#x3D;&quot;inputDom&quot;&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="Vue-js-部分"><a href="#Vue-js-部分" class="headerlink" title="Vue.js 部分"></a>Vue.js 部分</h3><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>         <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>如圖所示，<code>console.log(this.$refs);</code>顯示取得的 DOM 元素。<br><img src="https://i.imgur.com/bdNdyca.png"></p><iframe height="300" style="width: 100%;" scrolling="no" title="refs-1" src="https://codepen.io/popeye_ux/embed/KKxaVOy?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/KKxaVOy">  refs-1</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h3 id="讓-輸入框-一載入就-focus"><a href="#讓-輸入框-一載入就-focus" class="headerlink" title="讓 輸入框 一載入就 focus"></a>讓 輸入框 一載入就 focus</h3><p><a href="https://codepen.io/popeye_ux/pen/ExeZKKM?editors=1111">https://codepen.io/popeye_ux/pen/ExeZKKM?editors=1111</a></p><h2 id="使用-ref-來取得-DOM-元素的內容"><a href="#使用-ref-來取得-DOM-元素的內容" class="headerlink" title="使用 ref 來取得 DOM 元素的內容"></a>使用 ref 來取得 DOM 元素的內容</h2><p>我們在 Vue 的實體上註冊了一個 <code>&lt;card&gt;</code> 元件，在 HTML 中插入 <code>&lt;card ref=&quot;card&quot;&gt; &lt;/card&gt;</code>，同時可以看到在 <code>ref</code> 屬性中定義了 card 的 DOM 名稱。</p><h3 id="HTML-的部分"><a href="#HTML-的部分" class="headerlink" title="HTML 的部分"></a>HTML 的部分</h3><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;div id&#x3D;&quot;app&quot;&gt;  &lt;h3&gt;使用 ref 更新元件內容&lt;&#x2F;h3&gt;    &lt;card ref&#x3D;&quot;card&quot;&gt; &lt;&#x2F;card&gt;  &lt;button @click&#x3D;&quot;getComponentInfo&quot;&gt;取得元件資訊&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="Vue-js-的部分"><a href="#Vue-js-的部分" class="headerlink" title="Vue.js 的部分"></a>Vue.js 的部分</h3><p>我們在 card 元件的 <code>data</code> 中定義了：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'文件標題'</span><span class="token punctuation">,</span><span class="token literal-property property">content</span><span class="token operator">:</span><span class="token string">'文件內文'</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>然後在父元件中定義了這樣的方法：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token function">getComponentInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>card<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>card<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'被更新的元件標題'</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>card<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">'被更新的內文'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>然後把 <code>getComponentInfo()</code> 方法綁定到 HTML 的 <code>&lt;button&gt;</code> 上面，就可以取得 <code>&lt;car&gt;</code> 元件裡的內容。</p><h3 id="Vue-js-的完整內容"><a href="#Vue-js-的完整內容" class="headerlink" title="Vue.js 的完整內容"></a>Vue.js 的完整內容</h3><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span> <span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>         <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>   <span class="token function">getComponentInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>card<span class="token punctuation">)</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>card<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'被更新的元件標題'</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>card<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">'被更新的內文'</span>   <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'card'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'文件標題'</span><span class="token punctuation">,</span>      <span class="token literal-property property">content</span><span class="token operator">:</span><span class="token string">'文件內文'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">  &lt;div class="card" width="18rem">  &lt;h3>&#123;&#123;title&#125;&#125;&lt;/h3>  &lt;p>&#123;&#123;content&#125;&#125;&lt;/p>  &lt;/div>  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>在 CodePen 上看看如何實作：</p><iframe height="300" style="width: 100%;" scrolling="no" title="refs-card" src="https://codepen.io/popeye_ux/embed/jOvyqVZ?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/jOvyqVZ">  refs-card</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h2 id="Bootstrap-Modal-封裝"><a href="#Bootstrap-Modal-封裝" class="headerlink" title="Bootstrap Modal 封裝"></a>Bootstrap Modal 封裝</h2><p>我們也可以利用 ref 來操作 Bootstrap Modal 的開關。</p><p>首先到 Bootstrap 官網把 Modal 的 HTML 碼 COPY 過來。</p><figure><div class="code-wrapper"><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;div id&#x3D;&quot;app&quot;&gt;&lt;div class&#x3D;&quot;btn btn-primary&quot; @click&#x3D;&quot;openModal&quot;&gt; 開啟 Modal &lt;&#x2F;div&gt;    &lt;-- Modal --&gt;  &lt;div class&#x3D;&quot;modal&quot; tabindex&#x3D;&quot;-1&quot; ref&#x3D;&quot;modal&quot;&gt;  &lt;div class&#x3D;&quot;modal-dialog&quot;&gt;    &lt;div class&#x3D;&quot;modal-content&quot;&gt;      &lt;div class&#x3D;&quot;modal-header&quot;&gt;        &lt;h5 class&#x3D;&quot;modal-title&quot;&gt;Modal title&lt;&#x2F;h5&gt;        &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn-close&quot; data-bs-dismiss&#x3D;&quot;modal&quot; aria-label&#x3D;&quot;Close&quot;&gt;&lt;&#x2F;button&gt;      &lt;&#x2F;div&gt;      &lt;div class&#x3D;&quot;modal-body&quot;&gt;        &lt;p&gt;Modal body text goes here.&lt;&#x2F;p&gt;      &lt;&#x2F;div&gt;      &lt;div class&#x3D;&quot;modal-footer&quot;&gt;        &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-secondary&quot; data-bs-dismiss&#x3D;&quot;modal&quot;&gt;Close&lt;&#x2F;button&gt;        &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot;&gt;Save changes&lt;&#x2F;button&gt;      &lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><img src="https://i.imgur.com/iBjTtxL.png"><br>其次把 Bootstrap 使用 JavaScript 操控 Modal 的方法 COPY 到 <code>Mounted()</code> 中：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">var</span> myModal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'myModal'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>接著改成下面這樣，<code>new bootstrap.Modal</code> 是用來建立一個 Modal 實體，<code>this.bsModal</code> 要在 data 中定義：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">this</span><span class="token punctuation">.</span>bsModal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>modal<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>在 <code>methods</code> 中定義打開 Modal 的方法，然後綁定到按鈕上面，(<code>.show()</code> 是 Bootstrap Modal 所提供的方法)：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token function">openModal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>bsModal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">bsModal</span><span class="token operator">:</span> <span class="token string">""</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">openModal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>bsModal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// var myModal = new bootstrap.Modal(document.getElementById('myModal'), options)</span>    <span class="token comment">// 建立實體</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>bsModal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bootstrap<span class="token punctuation">.</span>Modal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>modal<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="refs-card" src="https://codepen.io/popeye_ux/embed/BaOpKMY?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/BaOpKMY">  refs-card</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在原生的 Java Script 中常常會使用 id 來取得 DOM 元素，但是開發到最後常常會用了太多的 id，搞的 id 的名稱互相衝突。在 VUE 中提供了 $refs 的方法，讓我們用 ref 代替 id 來取得 DOM 元素。&lt;/p&gt;
&lt;p&gt;ref 的作用：&lt;/p</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue3, JavaScript, ref, Modal" scheme="https://popeye-ux.github.io/tags/Vue3-JavaScript-ref-Modal/"/>
    
  </entry>
  
  <entry>
    <title>VUE 直播班上課心得</title>
    <link href="https://popeye-ux.github.io/2023/02/28/wall/"/>
    <id>https://popeye-ux.github.io/2023/02/28/wall/</id>
    <published>2023-02-28T02:52:09.000Z</published>
    <updated>2023-02-28T04:39:31.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="當初為什麼報名這堂課？"><a href="#當初為什麼報名這堂課？" class="headerlink" title="當初為什麼報名這堂課？"></a>當初為什麼報名這堂課？</h2><p>我曾經參加過 2022 春季 VUE 直播班，後來去當了一陣子的 PM。本以為沒機會當工程師了，因緣際會，拿了直播班的作品去參加了一場面試，結果順利拿到了工作機會。因為有半年時間沒有接觸程式，所以想要重新複習一下 VUE 的語法與使用。</p><h2 id="第一週-第八週的學習過程"><a href="#第一週-第八週的學習過程" class="headerlink" title="第一週~第八週的學習過程"></a>第一週~第八週的學習過程</h2><p>雖然每周五下班都累得像條狗，上課也是偶而會打瞌睡，還是撐著上完了，連假日直播也都沒有錯過。第八周課程的那一天剛好也是我通過試用期的日子，覺得努力沒有白費。</p><h2 id="最大的收獲是？"><a href="#最大的收獲是？" class="headerlink" title="最大的收獲是？"></a>最大的收獲是？</h2><p>重新在學一次 VUE 的語法，發覺自己之前雖然懂了，但是不知道該怎麼用。有許多語法的使用場景在上一次課之後已經可以想像與觸類旁通，許多都已經用在工作實戰的任務中了。</p><h2 id="最喜歡直播班的哪些活動？"><a href="#最喜歡直播班的哪些活動？" class="headerlink" title="最喜歡直播班的哪些活動？"></a>最喜歡直播班的哪些活動？</h2><p>最喜歡的活動是每日任務。</p><h2 id="如果時光能倒流，會希望自己再次注意哪些細節？"><a href="#如果時光能倒流，會希望自己再次注意哪些細節？" class="headerlink" title="如果時光能倒流，會希望自己再次注意哪些細節？"></a>如果時光能倒流，會希望自己再次注意哪些細節？</h2><p>一邊適應新工作，一邊上課，沒有時間可以參與最終作業的考驗，覺得很對不起老師，之後還是會把最終作業做完的。</p><h2 id="對課程的建議或鼓勵？"><a href="#對課程的建議或鼓勵？" class="headerlink" title="對課程的建議或鼓勵？"></a>對課程的建議或鼓勵？</h2><p>我覺得今年老師的功力又進步了，對於同學的學習狀況也更能掌握。今年少了 Ray 助教，覺得有點寂寞。</p><h2 id="身為學長姐，分享些想入坑的新同學一些勉勵的話"><a href="#身為學長姐，分享些想入坑的新同學一些勉勵的話" class="headerlink" title="身為學長姐，分享些想入坑的新同學一些勉勵的話"></a>身為學長姐，分享些想入坑的新同學一些勉勵的話</h2><p>每日任務一定要做，小小的練習卻能把基礎穩穩地札好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;當初為什麼報名這堂課？&quot;&gt;&lt;a href=&quot;#當初為什麼報名這堂課？&quot; class=&quot;headerlink&quot; title=&quot;當初為什麼報名這堂課？&quot;&gt;&lt;/a&gt;當初為什麼報名這堂課？&lt;/h2&gt;&lt;p&gt;我曾經參加過 2022 春季 VUE 直播班，後來去當了一陣子的 P</summary>
      
    
    
    
    <category term="雜記" scheme="https://popeye-ux.github.io/categories/%E9%9B%9C%E8%A8%98/"/>
    
    
    <category term="雜記" scheme="https://popeye-ux.github.io/tags/%E9%9B%9C%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>Vee-Validate 4 表單驗證簡單上手</title>
    <link href="https://popeye-ux.github.io/2023/02/18/vue-vee-validate4/"/>
    <id>https://popeye-ux.github.io/2023/02/18/vue-vee-validate4/</id>
    <published>2023-02-17T16:27:46.000Z</published>
    <updated>2023-02-17T16:34:32.436Z</updated>
    
    <content type="html"><![CDATA[<p>在開發中驗證表單欄位是一件前後端都必須處理的事情，不僅前端要驗證使用者輸入的欄位資訊，後端也要驗證送往伺服器的資料。</p><p>而前端的驗證如果要自己寫，會牽扯到正則，而且也會容易掛一漏萬，所以如果要在 Vue 裡面進行表單驗證，通常會引用套件，但是並不是所有的套件都支援中文語系。</p><p>Vee-Validate 是目前比較完整而且支援繁體中文語系的驗證套件。雖然說是套件，如果你去看 Vee-Validate 的官網，保證看完了，還是一頭霧水。所以我整理了 Vee-Validate 的使用方法，以防自己下次要用又失憶了。</p><p>Vee-Validate 官網：<a href="https://vee-validate.logaretm.com/v4/">https://vee-validate.logaretm.com/v4/</a></p><p>因為目前我所使用的是 Vue 3 的版本，所以要搭配 Vee-Validate 4.0 以上版本，在安裝的時候要注意版本相匹配的問題。</p><h2 id="安裝-Vee-Validate"><a href="#安裝-Vee-Validate" class="headerlink" title="安裝 Vee-Validate"></a>安裝 Vee-Validate</h2><p>安裝時除了 Vee-Validate 主程式之外，還要安裝驗證規則（rules）及多國語系（i18n）。</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx">npm i vee<span class="token operator">-</span>validate @vee<span class="token operator">-</span>validate<span class="token operator">/</span>i18n @vee<span class="token operator">-</span>validate<span class="token operator">/</span>rules @vee<span class="token operator">-</span>validate<span class="token operator">/</span>i18n <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>只要在 main.js 中設定，多國語系（i18n）就會把驗證的錯誤訊息轉成繁體中文。</p><p>例如： “email”: “{field} 須為有效的電子信箱”, {field} 的部分會填入對應的欄位名稱。</p><p><a href="https://github.com/logaretm/vee-validate/blob/vee-validate%404.1.16/packages/i18n/src/locale/zh_TW.json">繁體中文驗證顯示內容</a>。</p><h2 id="main-js-設定"><a href="#main-js-設定" class="headerlink" title="main.js 設定"></a>main.js 設定</h2><p>在 main.js 中引入套件之外，同時把相關的規則及元件做全域註冊，就不用在每個需要做驗證的 vue 檔案中一一匯入。</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createPinia <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"pinia"</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App.vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"./router"</span><span class="token punctuation">;</span><span class="token comment">// 匯入 vee-validate 主套件</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Field<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> ErrorMessage<span class="token punctuation">,</span> defineRule<span class="token punctuation">,</span> configure <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vee-validate"</span><span class="token punctuation">;</span><span class="token comment">// 匯入 vee-validate 相關規則</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  required<span class="token punctuation">,</span>  email<span class="token punctuation">,</span>  min<span class="token punctuation">,</span>  numeric<span class="token punctuation">,</span>  max_value<span class="token punctuation">,</span>  min_value<span class="token punctuation">,</span>  between<span class="token punctuation">,</span>  digits<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@vee-validate/rules"</span><span class="token punctuation">;</span><span class="token comment">// import * as rules from '@vee-validate/rules';</span><span class="token comment">// 匯入多國語系的功能</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> localize<span class="token punctuation">,</span> setLocale <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@vee-validate/i18n"</span><span class="token punctuation">;</span><span class="token comment">// 匯入繁體中文語系檔案</span><span class="token keyword">import</span> zhTW <span class="token keyword">from</span> <span class="token string">"@vee-validate/i18n/dist/locale/zh_TW.json"</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 定義驗證規則</span><span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token string">"required"</span><span class="token punctuation">,</span> required<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token string">"min"</span><span class="token punctuation">,</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//  數字，但是小數點會認為是非數字</span><span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token string">"numeric"</span><span class="token punctuation">,</span> numeric<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token string">"max_value"</span><span class="token punctuation">,</span> max_value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token string">"min_value"</span><span class="token punctuation">,</span> min_value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// between 可以驗證 某個區間的數字，例如 5~10</span><span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token string">"between"</span><span class="token punctuation">,</span> between<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// digits 限制小數點後幾位數</span><span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token string">"digits"</span><span class="token punctuation">,</span> digits<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 設定 vee-validate 全域規則</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">generateMessage</span><span class="token operator">:</span> <span class="token function">localize</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">zh_TW</span><span class="token operator">:</span> zhTW <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 載入繁體中文語系</span>  <span class="token literal-property property">validateOnInput</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 當輸入任何內容直接進行驗證</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 設定預設語系</span><span class="token function">setLocale</span><span class="token punctuation">(</span><span class="token string">"zh_TW"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 註冊 vee-validate 三個全域元件</span>app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"Form"</span><span class="token punctuation">,</span> Form<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"Field"</span><span class="token punctuation">,</span> Field<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"ErrorMessage"</span><span class="token punctuation">,</span> ErrorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>也可以使用這種方法把全部的規則都引入，就不用像上面一樣一一定義驗證規則。</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineRule <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vee-validate'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> rules <span class="token keyword">from</span> <span class="token string">'@vee-validate/rules'</span><span class="token punctuation">;</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>rules<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">rule</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">defineRule</span><span class="token punctuation">(</span>rule<span class="token punctuation">,</span> rules<span class="token punctuation">[</span>rule<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="表單欄位的設定"><a href="#表單欄位的設定" class="headerlink" title="表單欄位的設定"></a>表單欄位的設定</h2><p>表單的頭尾要用大寫 F 開頭的 <code>&lt;Form&gt;</code> 包住， <code>v-slot=”&#123; errors &#125;”</code> 則對應到錯誤訊息欄位。</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submitOrders<span class="token punctuation">"</span></span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; errors &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>原本的 <code>&lt;input&gt;</code>Z標籤用 <Field> 標籤取代， 其中 <code>name</code> 會對應到 <ErrorMessage> 的 <code>name</code>，如果欄位輸入錯誤，以 email 欄位為例，就會出現：「email 為必填」。</p><p><code>rules=&quot;email|required&quot;</code> 則會去抓 main.js 中定義的表單規則。</p><p><code>:class=&quot;&#123; &#39;is-invalid&#39;: errors[&#39;email&#39;] &#125;&quot;</code> 輸入驗證錯誤則會綁定 Bootstrap 中 is-invalid 樣式，讓輸入框的 border 變成紅色的。</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Field</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email|required<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; 'is-invalid': errors['email'] &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>請輸入 Email<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.user.email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Field</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ErrorMessage</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>invalid-feedback<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ErrorMessage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><code>&lt;button&gt;</code> 的 <code>disabled</code> 有綁訂到 Vee-Validate 的 <code>errors</code> 物件，如果陣列長度大於 0，按鈕就不能按。</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-lg w-100 add-btn<span class="token punctuation">"</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submitOrders<span class="token punctuation">"</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Object.keys(errors).length > 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      送出訂單<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submitOrders<span class="token punctuation">"</span></span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; errors &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mb-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-note<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Field</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email|required<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; 'is-invalid': errors['email'] &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>請輸入 Email<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.user.email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Field</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ErrorMessage</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>invalid-feedback<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ErrorMessage</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mb-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>收件人姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-note<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Field</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>姓名<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; 'is-invalid': errors['姓名'] &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>請輸入姓名<span class="token punctuation">"</span></span> <span class="token attr-name">rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>required<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.user.name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Field</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ErrorMessage</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>姓名<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>invalid-feedback<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ErrorMessage</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mb-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tel<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>收件人電話<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-note<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Field</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tel<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>電話<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isPhone<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; 'is-invalid': errors['電話'] &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>請輸入電話<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.user.tel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Field</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ErrorMessage</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>電話<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>invalid-feedback<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ErrorMessage</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mb-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>收件人地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-note<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Field</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>地址<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; 'is-invalid': errors['地址'] &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>請輸入地址<span class="token punctuation">"</span></span> <span class="token attr-name">rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>required<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.user.address<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Field</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ErrorMessage</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>地址<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>invalid-feedback<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ErrorMessage</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mb-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>留言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-end<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-lg w-100 add-btn<span class="token punctuation">"</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submitOrders<span class="token punctuation">"</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Object.keys(errors).length > 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      送出訂單    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="Script-中的設定"><a href="#Script-中的設定" class="headerlink" title="Script 中的設定"></a>Script 中的設定</h2><p>表單的 <code>v-model </code> 有綁訂到 data 的 form 物件。 button 綁定的 submitOrders 方法是打 API 把訂單送去後端。</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">form</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>          <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>          <span class="token literal-property property">tel</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>          <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">''</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">''</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>         <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>其中手機號碼的驗證規則，也寫在 methods 裡面：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// validate</span>    <span class="token function">isPhone</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> phoneNumber <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(09)[0-9]&#123;8&#125;$</span><span class="token regex-delimiter">/</span></span>      <span class="token keyword">return</span> phoneNumber<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token string">'需要正確的電話號碼'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>久久寫一次驗證，發覺自己有點失意，寫個筆記，希望下次可以不用花那麼久的時間重新探索。</p><p>參考：</p><ul><li><a href="https://stackblitz.com/edit/vue-3-veevalidate-form-validation-example?file=src/App.vue">https://stackblitz.com/edit/vue-3-veevalidate-form-validation-example?file=src%2FApp.vue</a></li><li><a href="https://www.npmjs.com/package/@vee-validate/rules">https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;@vee-validate&#x2F;rules</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在開發中驗證表單欄位是一件前後端都必須處理的事情，不僅前端要驗證使用者輸入的欄位資訊，後端也要驗證送往伺服器的資料。&lt;/p&gt;
&lt;p&gt;而前端的驗證如果要自己寫，會牽扯到正則，而且也會容易掛一漏萬，所以如果要在 Vue 裡面進行表單驗證，通常會引用套件，但是並不是所有的套件都支</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue3, JavaScript, Vee-Valdate, Validate" scheme="https://popeye-ux.github.io/tags/Vue3-JavaScript-Vee-Valdate-Validate/"/>
    
  </entry>
  
  <entry>
    <title>Vite 設定開發環境與正式環境使用不同的 G-tag</title>
    <link href="https://popeye-ux.github.io/2023/02/12/vue-env-gtag/"/>
    <id>https://popeye-ux.github.io/2023/02/12/vue-env-gtag/</id>
    <published>2023-02-11T17:29:27.000Z</published>
    <updated>2023-02-11T17:31:09.410Z</updated>
    
    <content type="html"><![CDATA[<p>PM 開了一項需求，希望在開發環境與正式部屬環境使用不同的 Google-Analytics 的評估碼 g-tag，之前在開發的時候都是寫死的，剛聽到這個需求，我有點不明所以。</p><p>請教了有處理過這個 issue 的前輩，才明白是使用了 vite-plugin-html 這個插件，分別在不同環境的env 檔案寫入對應的 g-tag，然後動態依據不同環境替換不同的 g-tag。</p><p>首先安裝 vite-plugin-html ：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx">npm i vite<span class="token operator">-</span>plugin<span class="token operator">-</span>html <span class="token operator">-</span><span class="token constant">D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>然後 vite 的根目錄，建立 .env 、.env.development 及 .env.production 三個檔案。 </p><ul><li>.env 通用的環境變數</li><li>.env.development 開發中的環境變數</li><li>.env.production 產品完成布署的環境</li></ul><p><img src="https://i.imgur.com/GYSY1XB.jpg"></p><p>.env 裡面寫入：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token constant">VITE_BASE_URL</span><span class="token operator">=</span><span class="token operator">/</span><span class="token constant">VITE_GATAG</span><span class="token operator">=</span><span class="token constant">G</span><span class="token operator">-</span><span class="token constant">AAAAAAAAAA</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>.env.development 裡面寫入：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token constant">VITE_GATAG</span><span class="token operator">-</span><span class="token constant">AAAAAAAAAA</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>.env.production 裡面寫入：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token constant">VITE_GATAG</span><span class="token operator">=</span><span class="token constant">G</span><span class="token operator">-</span><span class="token constant">BBBBBBBBBB</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>原本的 vite.config.js 長這樣：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fileURLToPath<span class="token punctuation">,</span> <span class="token constant">URL</span> <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"node:url"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineConfig <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vite"</span><span class="token punctuation">;</span><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">"@vitejs/plugin-vue"</span><span class="token punctuation">;</span><span class="token comment">// https://vitejs.dev/config/</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string-property property">"@"</span><span class="token operator">:</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">"./src"</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 解決 Network: use --host to expose</span>  <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>然後現在把 vite.config.js 改成：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fileURLToPath<span class="token punctuation">,</span> <span class="token constant">URL</span> <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"node:url"</span><span class="token punctuation">;</span><span class="token comment">// import path from "path";</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineConfig<span class="token punctuation">,</span> loadEnv <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vite"</span><span class="token punctuation">;</span><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">"@vitejs/plugin-vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createHtmlPlugin <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vite-plugin-html"</span><span class="token punctuation">;</span><span class="token comment">// https://vitejs.dev/config/</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> mode <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  process<span class="token punctuation">.</span>env <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>process<span class="token punctuation">.</span>env<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">loadEnv</span><span class="token punctuation">(</span>mode<span class="token punctuation">,</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">base</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_BASE_URL</span><span class="token punctuation">,</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token function">createHtmlPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">inject</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token constant">GA4</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_GATAG</span><span class="token punctuation">,</span>            <span class="token comment">// injectScript: `&lt;script src="./inject.js">&lt;/script>`,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">"@"</span><span class="token operator">:</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">"./src"</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>然後修改根目錄的 index.html，把原本放 g-tag 的地方替換成 &lt;%- GATAG %&gt;：</p><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">  &lt;!DOCTYPE html&gt;&lt;html lang&#x3D;&quot;en&quot;&gt;  &lt;head&gt;    &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;    &lt;link rel&#x3D;&quot;icon&quot; href&#x3D;&quot;&#x2F;favicon.ico&quot; &#x2F;&gt;    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot; &#x2F;&gt;    &lt;title&gt;標題&lt;&#x2F;title&gt;    &lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;    &lt;script      async      src&#x3D;&quot;https:&#x2F;&#x2F;www.googletagmanager.com&#x2F;gtag&#x2F;js?id&#x3D;&lt;%- GATAG %&gt;&quot;    &gt;&lt;&#x2F;script&gt;    &lt;script&gt;      window.dataLayer &#x3D; window.dataLayer || [];      function gtag() &#123;        dataLayer.push(arguments);      &#125;      gtag(&quot;js&quot;, new Date());      gtag(&quot;config&quot;, &quot;&lt;%- GATAG %&gt;&quot;);    &lt;&#x2F;script&gt;  &lt;&#x2F;head&gt;  &lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;&lt;&#x2F;div&gt;    &lt;script type&#x3D;&quot;module&quot; src&#x3D;&quot;&#x2F;src&#x2F;main.js&quot;&gt;&lt;&#x2F;script&gt;  &lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PM 開了一項需求，希望在開發環境與正式部屬環境使用不同的 Google-Analytics 的評估碼 g-tag，之前在開發的時候都是寫死的，剛聽到這個需求，我有點不明所以。&lt;/p&gt;
&lt;p&gt;請教了有處理過這個 issue 的前輩，才明白是使用了 vite-plugin-h</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue3, Javascript, env, g-tag" scheme="https://popeye-ux.github.io/tags/Vue3-Javascript-env-g-tag/"/>
    
  </entry>
  
  <entry>
    <title>Vue router 有沒有 hash 有差別</title>
    <link href="https://popeye-ux.github.io/2023/02/12/vue-router-historymode/"/>
    <id>https://popeye-ux.github.io/2023/02/12/vue-router-historymode/</id>
    <published>2023-02-11T17:10:36.000Z</published>
    <updated>2023-02-11T17:19:33.697Z</updated>
    
    <content type="html"><![CDATA[<p>Vue 3 主要有 2 種處理路由的方式，分別是 Hash Mode 以及 HTML5 (History API) Mode 兩種。(其實還有一種 abstract 模式)</p><h2 id="createWebHashHistory-模式"><a href="#createWebHashHistory-模式" class="headerlink" title="createWebHashHistory 模式"></a>createWebHashHistory 模式</h2><p><img src="https://i.imgur.com/7Hp9899.png"><br>網址列多了一個 <code>#</code> 字號。</p><p>Hash 也就是 我們用來設定連結錨點的那個 <code>#</code> 字號。</p><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;a hhref&#x3D;&quot;https:&#x2F;&#x2F;xxx.com&#x2F;#hashmark&quot;&gt;&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>利用改變<code>#</code>後面對應到 HTML 檔案 <code>id</code> 的文字，就可以不用換頁，又可以在瀏覽器中留下「上一頁」與「下一頁」的歷史紀錄，而且切換時不會刷新頁面。</p><p>createWebHashHistory 模式預設的路徑為 location.pathname 或 &#x2F; 根目錄，也可以改變預設路徑，使用 createWebHashHistory(‘&#x2F;folder&#x2F;‘)，就可以對應到 <a href="https://xxxx.com/folder/#">https://xxxx.com/folder/#</a> 。</p><p>Hash 模式完全是前端模式，只在瀏覽器中動作，不牽扯後端，缺點是對 SEO 不利，因為搜尋引擎會自動忽略 URL 有 <code>#</code> 的部分。</p><p>router.js</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createRouter<span class="token punctuation">,</span> createWebHashHistory <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token keyword">import</span> HomeView <span class="token keyword">from</span> <span class="token string">'../views/HomeView.vue'</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span>      <span class="token literal-property property">component</span><span class="token operator">:</span> HomeView    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/about'</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'about'</span><span class="token punctuation">,</span>      <span class="token comment">// route level code-splitting</span>      <span class="token comment">// this generates a separate chunk (About.[hash].js) for this route</span>      <span class="token comment">// which is lazy-loaded when the route is visited.</span>      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../views/AboutView.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="createWebHistory-模式"><a href="#createWebHistory-模式" class="headerlink" title="createWebHistory 模式"></a>createWebHistory 模式</h2><p><img src="https://i.imgur.com/VmULArB.png"><br>如果是 <code>createWebHistory</code> 就是採用 HTML5 的 History API，可以使用 <code>pushState()</code>、<code>replaceState()</code> 等方法更新 URL，搭配原有的 history.go()、history.back()來指定頁面路徑切換，如，也提供了 state 物件讓開發這可以暫時存取網頁的狀態。</p><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;a hhref&#x3D;&quot;https:&#x2F;&#x2F;xxx.com&#x2F;path&quot;&gt;&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>需要搭配後端路由，如果沒有後端的配置，使用者直接輸入網址，或瀏覽器重整網頁的時候會找不到網頁，跳 404 頁面。</p><p>router.js</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createRouter<span class="token punctuation">,</span> createWebHistory <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token keyword">import</span> HomeView <span class="token keyword">from</span> <span class="token string">'../views/HomeView.vue'</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span>      <span class="token literal-property property">component</span><span class="token operator">:</span> HomeView    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/about'</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'about'</span><span class="token punctuation">,</span>      <span class="token comment">// route level code-splitting</span>      <span class="token comment">// this generates a separate chunk (About.[hash].js) for this route</span>      <span class="token comment">// which is lazy-loaded when the route is visited.</span>      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../views/AboutView.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Vue 3 主要有 2 種處理路由的方式，分別是 Hash Mode 以及 HTML5 (History API) Mode 兩種。(其實還有一種 abstract 模式)&lt;/p&gt;
&lt;h2 id=&quot;createWebHashHistory-模式&quot;&gt;&lt;a href=&quot;#cre</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue3, JavaScript, createWebHashHistory, createWebHistory" scheme="https://popeye-ux.github.io/tags/Vue3-JavaScript-createWebHashHistory-createWebHistory/"/>
    
  </entry>
  
  <entry>
    <title>在 Vue 裡面使用 pinia 管理狀態</title>
    <link href="https://popeye-ux.github.io/2023/02/06/piniabeginner/"/>
    <id>https://popeye-ux.github.io/2023/02/06/piniabeginner/</id>
    <published>2023-02-05T16:28:02.000Z</published>
    <updated>2023-02-11T17:14:12.137Z</updated>
    
    <content type="html"><![CDATA[<p>pinia 是 Vue 官方推薦的狀態管理工具，可以解決跨元件之間資料傳遞要反覆的 props 及 emit 的問題，只要把資料跟方法放在 store 裡面，就可以讓所有的元件取用，不但傳遞變簡單了，在管理資料上面也變得更清楚。</p><p>首先安裝 pinia</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx">npm install pinia<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>main.js 中初始化</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App.vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createPinia <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"pinia"</span><span class="token punctuation">;</span><span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>在 src 下面建立 stores 資料夾，然後在 stores 裡面建立 user.js。</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineStore <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"pinia"</span><span class="token punctuation">;</span><span class="token comment">// userStore 為自定義名稱</span><span class="token comment">// &#123;屬性參數&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">"userStore"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// data</span>  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"鋼鐵人"</span><span class="token punctuation">,</span> <span class="token literal-property property">friend</span><span class="token operator">:</span> <span class="token string">"蜘蛛人"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// computed</span>  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>state<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 和 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>state<span class="token punctuation">.</span>friend<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">是好朋友</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// methods</span>  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 可以使用 this，所以不用箭頭函式</span>    <span class="token function">updateFriend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>friend <span class="token operator">=</span> <span class="token string">"美國隊長"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><img src="https://i.imgur.com/Et55AcC.png"></p><p>HelloWorld.vue</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text">,</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> friend <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> getUserName <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token plain-text">    &lt;button type="button" @click="updateFriend">更新復仇者好友</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token plain-text">import &#123; mapState, mapActions &#125; from "pinia";import userStore from "@/stores/user";export default &#123;  name: "HelloWorld",  props: &#123;    msg: String,  &#125;,  computed: &#123;    ...mapState(userStore, ["name", "friend", "getUserName"]),  &#125;,  methods: &#123;    ...mapActions(userStore, ["updateFriend"]),  &#125;,&#125;;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe src="https://codesandbox.io/embed/pinia-option-api-t0z4n8?fontsize=14&hidenavigation=1&theme=dark"     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"     title="pinia-option-api"     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"   ></iframe><h1 id="在-Composition-中使用-pinia"><a href="#在-Composition-中使用-pinia" class="headerlink" title="在 Composition 中使用 pinia"></a>在 Composition 中使用 pinia</h1><p>簡單初始化，首先</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> userStore <span class="token keyword">from</span> <span class="token string">"@/stores/user"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="使用-reactive-格式"><a href="#使用-reactive-格式" class="headerlink" title="使用 reactive 格式"></a>使用 reactive 格式</h3><p>然後在 <code>setup()</code> 把 <code>userStore</code> 賦值給一個常數 <code>user</code>，記得要 把 <code>user</code> 給 <code>return</code> 出去。</p><p>然後在 HTML 中使用 <code>&#123;&#123; user.變數名稱或方法 &#125;&#125;</code> ， 就可以綁定 <code>user.js</code> 裡面 <code>state</code> 定義的資料、 <code>getters</code> 及 <code>actions</code> 中的方法，而且這樣的情形下，資料及方法都是 <code>reactive</code> 格式的，所以可以做到雙向綁定。</p><p>HelloWorld.vue</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> user<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text">,</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> user<span class="token punctuation">.</span>friend <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> user<span class="token punctuation">.</span>getFriendName <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token plain-text">    &lt;button type="button" @click="user.updateFriend">更新復仇者好友</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token plain-text">import userStore from "@/stores/user";export default &#123;  name: "HelloWorld",  props: &#123;    msg: String,  &#125;,  setup() &#123;    const user = userStore();//state 中的資料為 reactive 格式    return &#123;      user,    &#125;;  &#125;,&#125;;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe src="https://codesandbox.io/embed/pinia-composition-api-reactive-owzg04?fontsize=14&hidenavigation=1&theme=dark"     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"     title="pinia-composition-api-reactive"     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"   ></iframe><h3 id="使用-ref-格式"><a href="#使用-ref-格式" class="headerlink" title="使用 ref 格式"></a>使用 ref 格式</h3><p>要使用 <code>ref</code> 格式，除了 <code>import userStore from &quot;@/stores/user&quot;;</code>之外，還必須匯入一個 <code>pinia</code> 提供的 <code>&#123; storeToRefs &#125;</code> 方法，把 <code>store</code> 中定義的方法跟資料轉為 <code>ref</code> 格式：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> storeToRefs <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"pinia"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>然後在 setup() 中，取出 store 中的變數及方法：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> friend<span class="token punctuation">,</span> getFriendName <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 如果要改變 變數的值，記得加上 .value</span>name<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'雷神'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><code>return</code> 的時候除了 <code>user</code> 之外， <code>name</code> 、 <code>friend</code> 及 <code>getFriendName</code> 也要記得 <code>return</code> 出去。</p><p>這時 HTML 中的 <code>&#123;&#123; user.xxxx &#125;&#125;</code> 就可以拿掉了。但是如果要在 <code>setup()</code> 中更改 變數的值，就要像使用 <code>ref</code> 一樣，加上  <code>xxxx.value</code> 。</p><p>如果在 state 中不用作到雙向綁定的，就直接取出</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token comment">// 不用雙向綁定 直接取出</span><span class="token keyword">const</span>  <span class="token punctuation">&#123;</span> updateFriend <span class="token punctuation">&#125;</span> <span class="token operator">=</span> user<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>HelloWorld.vue</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> user<span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text">,</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> user<span class="token punctuation">.</span>friend <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> user<span class="token punctuation">.</span>getFriendName <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token plain-text">    &lt;!-- user 可以拿掉 -->    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text">,</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> friend <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> getFriendName <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token plain-text">    &lt;!-- 雙向綁定也可以 -->    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user.name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">    &lt;button type="button" @click="user.updateFriend">更新復仇者好友</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token plain-text">import &#123; storeToRefs &#125; from "pinia";import userStore from "@/stores/user";export default &#123;  name: "HelloWorld",  props: &#123;    msg: String,  &#125;,  setup() &#123;    const user = userStore();    // 轉成 ref 格式    const &#123; name, friend, getFriendName &#125; = storeToRefs(user);    // ref 格式，state 中的變數須加上 .value    name.value = "雷神";// 不用雙向綁定 直接取出    const  &#123; updateFriend &#125; = user;    return &#123;      user,      name,      friend,      getFriendName,    &#125;;  &#125;,&#125;;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>使用 pinia 提供的 patch 方法修改資料：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">function</span> <span class="token function">updateData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      user<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"浩克"</span><span class="token punctuation">,</span>        <span class="token literal-property property">friend</span><span class="token operator">:</span> <span class="token string">"薩諾斯"</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>使用 pinia 提供的 reset 方法重置資料：</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">function</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      user<span class="token punctuation">.</span><span class="token function">$reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><iframe src="https://codesandbox.io/embed/pinia-composition-api-ref-qkq8gp?fontsize=14&hidenavigation=1&theme=dark"     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"     title="pinia-composition-api-ref"     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"   ></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pinia 是 Vue 官方推薦的狀態管理工具，可以解決跨元件之間資料傳遞要反覆的 props 及 emit 的問題，只要把資料跟方法放在 store 裡面，就可以讓所有的元件取用，不但傳遞變簡單了，在管理資料上面也變得更清楚。&lt;/p&gt;
&lt;p&gt;首先安裝 pinia&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue, pinia, compositionAPI, optionAPI" scheme="https://popeye-ux.github.io/tags/Vue-pinia-compositionAPI-optionAPI/"/>
    
  </entry>
  
  <entry>
    <title>在 Composition API 中使用 pinia 操控 modal</title>
    <link href="https://popeye-ux.github.io/2023/01/29/modal-pinia/"/>
    <id>https://popeye-ux.github.io/2023/01/29/modal-pinia/</id>
    <published>2023-01-29T15:18:09.000Z</published>
    <updated>2023-02-11T17:13:55.118Z</updated>
    
    <content type="html"><![CDATA[<p>之前寫過一篇在 《<a href="https://popeye-ux.github.io/2023/01/27/modal-props-emit/">在 Composition API 中使用 props 與 emit 操控 modal</a>》的筆記，那時是使用 props 跟 emit 處理外部元件與內部元件之間資料傳遞的問題。</p><p>但是當有兩個以上的 modal&#x2F;彈跳視窗 的時候，第一個 modal 是開啟狀態，這時觸發第二個 modal 開啟，同時第一個 modal 要關閉。這種情形下，兩個內部元件彼此要傳遞訊息變得十分複雜，這次我試著用 pinia 來管理兩個 modal 的狀態，狀態就不再儲存在兩個 modal 元件內部。</p><h2 id="任務說明"><a href="#任務說明" class="headerlink" title="任務說明"></a>任務說明</h2><p>在 pinia 中有 <code>isFirstOpen</code> 跟 <code>isSecondOpen</code> 兩個變數，用來管理 2 個元件的開啟與關閉，預設都是 <code>false</code>， 內部元件則用 v-if 控制元件的顯示與否，在 <code>false</code> 狀態，兩個元件皆為關閉，當有一個元件被開啟，則另外一個元件的狀態則會轉為 false(預設也是 false)。</p><p>假設第一個元件是開啟狀態，<code>isFirstOpen</code> 的狀態為 <code>true</code>，第二個元件的狀態<code>isSecondOpen</code> 為 <code>false</code> 。這時去開啟第二個元件，<code>isSecondOpen</code> 轉為 <code>true</code>，則<code>isFirstOpen</code> 轉為 false，第一個元件就會關閉，反之亦然。這樣就可以達到切換2個 modal 的目的。 </p><p><img src="https://i.imgur.com/6utwNJe.jpg"></p><p>檔案結構如下：<br><img src="https://i.imgur.com/ijzwq3G.jpg"></p><h2 id="main-js-引入-pinia"><a href="#main-js-引入-pinia" class="headerlink" title="main.js 引入 pinia"></a>main.js 引入 pinia</h2><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App.vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createPinia <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"pinia"</span><span class="token punctuation">;</span><span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="pinia-中-modalControl-js-的設定"><a href="#pinia-中-modalControl-js-的設定" class="headerlink" title="pinia 中 modalControl.js 的設定"></a>pinia 中 modalControl.js 的設定</h2><p>stores&#x2F;modalControl.js</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineStore <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"pinia"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">"modalControl"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"胖胖"</span><span class="token punctuation">,</span> <span class="token literal-property property">isFirstOpen</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">isSecondOpen</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="app-vue-中的設定"><a href="#app-vue-中的設定" class="headerlink" title="app.vue 中的設定"></a>app.vue 中的設定</h2><ul><li><p>把兩個元件 import 進來，當成子元件。</p></li><li><p>把 pinia 中的狀態及方法匯入。<br><code>import &#123; storeToRefs &#125; from &quot;pinia&quot;</code><br><code>import modalControl from &quot;@/stores/modalControl.js&quot;;</code></p></li><li><p>設定開啟及切換 modal 的方法</p></li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">const</span> <span class="token function-variable function">openModal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      isFirstOpen<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      isSecondOpen<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 開啟第二個 modal，關閉第一個 modal</span>    <span class="token keyword">const</span> <span class="token function-variable function">openSecond</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      isSecondOpen<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      isFirstOpen<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ul><li>將兩個按鈕綁上開啟 modal 的方法。</li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"button"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn"</span> @click<span class="token operator">=</span><span class="token string">"openModal"</span><span class="token operator">></span>showModal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"button"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn"</span> @click<span class="token operator">=</span><span class="token string">"openSecond"</span><span class="token operator">></span>showModal2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>app.vue</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">    &lt;button type="button" class="btn" @click="openModal">showModal</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">    &lt;button type="button" class="btn" @click="openSecond">showModal2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">  &lt;!-- &lt;Modal :open="isOpen" @close="isOpen = !isOpen"> -->  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">      </span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text">      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quo molestiae      consectetur blanditiis aspernatur velit autem labore amet    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SecondModal</span></span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">      </span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text">      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quo molestiae      consectetur blanditiis aspernatur velit autem labore amet    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SecondModal</span></span><span class="token punctuation">></span></span><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token plain-text">import &#123; ref &#125; from "vue";// 第一個元件import Modal from "./components/ModalView.vue";// 第二個元件import SecondModal from "./components/SecondModal.vue";// pinia 中共用的狀態import modalControl from "@/stores/modalControl.js";// 使用 pinia 中資料的方法import &#123; storeToRefs &#125; from "pinia";// import HelloWorldVue from "./components/HelloWorld.vue";export default &#123;  components: &#123; Modal, SecondModal &#125;,  setup() &#123;    // 把 pinia 中元件共用的狀態，賦值給 modaltest 這個變數    const modaltest = modalControl();    // 解構    const &#123; name, isFirstOpen, isSecondOpen &#125; = storeToRefs(modaltest);    // const isOpen = ref(false);    // 開啟第一個 modal，關閉第二個 modal    const openModal = function () &#123;      isFirstOpen.value = true;      isSecondOpen.value = false;    &#125;;    // 開啟第二個 modal，關閉第一個 modal    const openSecond = function () &#123;      isSecondOpen.value = true;      isFirstOpen.value = false;    &#125;;    return &#123;      isFirstOpen,      modalControl,      name,      isSecondOpen,      openModal,      openSecond,    &#125;;  &#125;,&#125;;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token plain-text">.up &#123;  z-index: 500;  cursor: pointer;&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="2-個-modal-元件的設定"><a href="#2-個-modal-元件的設定" class="headerlink" title="2 個 modal 元件的設定"></a>2 個 modal 元件的設定</h2><p>ModalView.vue</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fade<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vue-modal<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isFirstOpen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>drop-in<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vue-modal-inner<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isFirstOpen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vue-modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span><span class="token plain-text">            </span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text"> </span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> isOpen <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text">            &lt;button type="button" @click="isFirstOpen = false">close</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">></span></span><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token plain-text">import &#123; onMounted, onUnmounted &#125; from "vue";import modalControl from "@/stores/modalControl.js";import &#123; storeToRefs &#125; from "pinia";export default &#123;  setup() &#123;    const modaltest = modalControl();    const &#123; name, isFirstOpen &#125; = storeToRefs(modaltest);    return &#123;      modaltest,      name,      isFirstOpen,    &#125;;  &#125;,&#125;;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>SecondModal.vue</p><figure><div class="code-wrapper"><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fade<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vue-modal<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isSecondOpen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>drop-in<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vue-modal-inner<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isSecondOpen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vue-modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span><span class="token plain-text">            </span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text"> </span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> isOpen <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token plain-text">            &lt;button type="button" @click="isSecondOpen = false">close</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">></span></span><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">></span></span><span class="token plain-text"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token plain-text">import modalControl from "@/stores/modalControl.js";import &#123; storeToRefs &#125; from "pinia";export default &#123;  setup(props, &#123; emit &#125;) &#123;    const modaltest = modalControl();    const &#123; name, isSecondOpen &#125; = storeToRefs(modaltest);    return &#123;      modaltest,      name,      isSecondOpen,    &#125;;  &#125;,&#125;;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe src="https://codesandbox.io/embed/vue-2modal-pinia-5zqp9q?fontsize=14&hidenavigation=1&theme=dark"     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"     title="Vue-2Modal-pinia"     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"   ></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前寫過一篇在 《&lt;a href=&quot;https://popeye-ux.github.io/2023/01/27/modal-props-emit/&quot;&gt;在 Composition API 中使用 props 與 emit 操控 modal&lt;/a&gt;》的筆記，那時是使用 pro</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue, modal, pinia" scheme="https://popeye-ux.github.io/tags/Vue-modal-pinia/"/>
    
  </entry>
  
  <entry>
    <title>在 Composition API 中使用 props 與 emit 操控 modal</title>
    <link href="https://popeye-ux.github.io/2023/01/27/modal-props-emit/"/>
    <id>https://popeye-ux.github.io/2023/01/27/modal-props-emit/</id>
    <published>2023-01-26T17:14:43.000Z</published>
    <updated>2023-02-11T17:14:25.558Z</updated>
    
    <content type="html"><![CDATA[<p>在前端工程師的日常中，modal&#x2F; 彈出視窗 是常常會遇到的工作情境。畫面大概就是外部元件有一個按鈕，按下去會有一個對話框（內部元件）彈出來，對話框上有個按鈕，點擊後對話框就會關閉。</p><p>如果前端框架是 Vue 的話，一般我們會在外部元件定義一個布林值，預設為 <code>false</code> ，按下外部的按鈕後，布林值會變為 <code>true</code>。</p><ul><li><p>開啟：在內部元件 modal 用 props 接收外部元件的布林值，綁上 <code>v-if= props 接收到的布林值</code>。這樣就可以由外部元件控制內部元件的開啟。</p></li><li><p>關閉：內元件 modal 可以由元件內部的按鈕關閉，按下按鈕後以 emit 傳送一個事件去觸發外部元件反轉布林值，達成元件的關閉。</p></li></ul><p><img src="https://i.imgur.com/bazrYl9.jpg"></p><p>App.vue(外部元件)</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"isOpen = true"</span><span class="token operator">></span>showModal<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 外部元件中插入內部元件 modal <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> props 口訣：先內後外 <span class="token operator">:</span>open<span class="token operator">=</span><span class="token string">"isOpen"</span><span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> emit 口訣：先內後外  @close<span class="token operator">=</span><span class="token string">"isOpen = !isOpen"</span><span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>Modal <span class="token operator">:</span>open<span class="token operator">=</span><span class="token string">"isOpen"</span> @close<span class="token operator">=</span><span class="token string">"isOpen = !isOpen"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>p<span class="token operator">></span>      Lorem ipsum dolor<span class="token punctuation">,</span> sit amet consectetur adipisicing elit<span class="token punctuation">.</span> Quo molestiae      consectetur blanditiis aspernatur velit autem labore amet    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Modal<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Modal <span class="token keyword">from</span> <span class="token string">"./components/ModalView.vue"</span><span class="token punctuation">;</span><span class="token comment">// import HelloWorldVue from "./components/HelloWorld.vue";</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> Modal <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 由 isOpen 的 true 或 false 控制 modal 的開關</span>    <span class="token keyword">const</span> isOpen <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      isOpen<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>&#x2F;components&#x2F;ModalView.vue(內部元件)</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>transition name<span class="token operator">=</span><span class="token string">"fade"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 控制背景 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"vue-modal"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"open"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>transition name<span class="token operator">=</span><span class="token string">"drop-in"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 彈跳視窗本體 props 為 open，所以 v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"open"</span> <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"vue-modal-inner"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"open"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"vue-modal-content"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>slot <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> @click<span class="token operator">=</span><span class="token string">"close"</span> 觸發 emit 事件，傳送至外層切換 isOpen <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"button"</span> @click<span class="token operator">=</span><span class="token string">"close"</span><span class="token operator">></span>close<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>transition<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>transition<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> onMounted<span class="token punctuation">,</span> onUnmounted <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token literal-property property">requires</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// peops 這個參數一定要帶到，才能使用 &#123;emit&#125;</span>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> emit <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token function-variable function">close</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"close"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token function-variable function">handleKeyup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"keyup"</span><span class="token punctuation">,</span> handleKeyup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">onUnmounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"keyup"</span><span class="token punctuation">,</span> handleKeyup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> close <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span><span class="token operator">*</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token operator">:</span>before<span class="token punctuation">,</span><span class="token operator">:</span><span class="token operator">:</span>after <span class="token punctuation">&#123;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  box<span class="token operator">-</span>sizing<span class="token operator">:</span> border<span class="token operator">-</span>box<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>vue<span class="token operator">-</span>modal <span class="token punctuation">&#123;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> fixed<span class="token punctuation">;</span>  <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  overflow<span class="token operator">-</span>x<span class="token operator">:</span> hidden<span class="token punctuation">;</span>  overflow<span class="token operator">-</span>y<span class="token operator">:</span> auto<span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.04</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>vue<span class="token operator">-</span>modal<span class="token operator">-</span>inner <span class="token punctuation">&#123;</span>  max<span class="token operator">-</span>width<span class="token operator">:</span> 500px<span class="token punctuation">;</span>  <span class="token literal-property property">margin</span><span class="token operator">:</span> 2rem auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>vue<span class="token operator">-</span>modal<span class="token operator">-</span>content <span class="token punctuation">&#123;</span>  <span class="token literal-property property">position</span><span class="token operator">:</span> relative<span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #fff<span class="token punctuation">;</span>  <span class="token literal-property property">border</span><span class="token operator">:</span> 1px solid <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  background<span class="token operator">-</span>clip<span class="token operator">:</span> padding<span class="token operator">-</span>box<span class="token punctuation">;</span>  border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">.</span>3rem<span class="token punctuation">;</span>  <span class="token literal-property property">padding</span><span class="token operator">:</span> 1rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>fade<span class="token operator">-</span>enter<span class="token operator">-</span>active<span class="token punctuation">,</span><span class="token punctuation">.</span>fade<span class="token operator">-</span>leave<span class="token operator">-</span>active <span class="token punctuation">&#123;</span>  <span class="token literal-property property">transition</span><span class="token operator">:</span> opacity <span class="token number">0</span><span class="token punctuation">.</span>5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>fade<span class="token operator">-</span>enter<span class="token operator">-</span>from<span class="token punctuation">,</span><span class="token punctuation">.</span>fade<span class="token operator">-</span>leave<span class="token operator">-</span>to <span class="token punctuation">&#123;</span>  <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>drop<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>enter<span class="token operator">-</span>active<span class="token punctuation">,</span><span class="token punctuation">.</span>drop<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>leave<span class="token operator">-</span>active <span class="token punctuation">&#123;</span>  <span class="token literal-property property">transition</span><span class="token operator">:</span> all <span class="token number">0</span><span class="token punctuation">.</span>3s easeout<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>drop<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>enter<span class="token operator">-</span>from<span class="token punctuation">,</span><span class="token punctuation">.</span>drop<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>leave<span class="token operator">-</span>to <span class="token punctuation">&#123;</span>  <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token operator">-</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe src="https://codesandbox.io/embed/vue-modal-shi-yong-9qbw7f?fontsize=14&hidenavigation=1&theme=dark"     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"     title="Vue-Modal 使用"     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"   ></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在前端工程師的日常中，modal&amp;#x2F; 彈出視窗 是常常會遇到的工作情境。畫面大概就是外部元件有一個按鈕，按下去會有一個對話框（內部元件）彈出來，對話框上有個按鈕，點擊後對話框就會關閉。&lt;/p&gt;
&lt;p&gt;如果前端框架是 Vue 的話，一般我們會在外部元件定義一個布林值，</summary>
      
    
    
    
    <category term="Vue3" scheme="https://popeye-ux.github.io/categories/Vue3/"/>
    
    
    <category term="Vue, modal, props, emit" scheme="https://popeye-ux.github.io/tags/Vue-modal-props-emit/"/>
    
  </entry>
  
  <entry>
    <title>hover 基本應用</title>
    <link href="https://popeye-ux.github.io/2023/01/21/hoverBasic/"/>
    <id>https://popeye-ux.github.io/2023/01/21/hoverBasic/</id>
    <published>2023-01-20T17:05:30.000Z</published>
    <updated>2023-02-11T17:14:29.778Z</updated>
    
    <content type="html"><![CDATA[<p>hover 是一種常見的網頁滑鼠互動，用法十分簡單，但是卻可以變化出各種形式。以下筆記幾種常見的用法：</p><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>HTML元素先設定基本的樣式，再用 <code>選取器:hover&#123;...&#125;</code> 設定滑鼠滑上元素後變化的樣式。</p><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;div class&#x3D;&quot;box&quot;&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ffa7de<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box:hover</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ffd592<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="Untitled" src="https://codepen.io/popeye_ux/embed/qByprwM?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/qByprwM">  Untitled</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><p>樣式的變換可以是：</p><ul><li>opacity:透明度的變化。</li><li>border-radius：如果要讓正方形的 div 變成圓的，只要設定<code>:hover&#123;border-radius: 50%&#125;</code> 即可做到。</li><li>transform: 可以讓 HTML 元素放大、縮小、旋轉，範例如下：</li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ffa7de<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* transform 設定 放大1.2倍,旋轉 45 度*/</span><span class="token selector">.box:hover</span> <span class="token punctuation">&#123;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.2<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="hover:basic" src="https://codepen.io/popeye_ux/embed/yLqpbYo?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/yLqpbYo">  hover:basic</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h2 id="hover-結合-keyframes-與-animation"><a href="#hover-結合-keyframes-與-animation" class="headerlink" title="hover 結合 keyframes 與 animation"></a>hover 結合 keyframes 與 animation</h2><p>我們來做一個滑鼠移到方塊上，方塊就會搖擺的效果。</p><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ffa7de<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 設定搖擺的過程*/</span><span class="token atrule"><span class="token rule">@keyframes</span> swing</span> <span class="token punctuation">&#123;</span>  <span class="token selector">15%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>5px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token selector">40%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-5px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token selector">65%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>2px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token selector">85%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-2px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token selector">100%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token comment">/* 把搖擺的過程用 animation 加到 hover 上*/</span><span class="token selector">.box:hover</span> <span class="token punctuation">&#123;</span>  <span class="token property">animation</span><span class="token punctuation">:</span> swing 1s 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="hover:transform" src="https://codepen.io/popeye_ux/embed/yLqpbXp?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/yLqpbXp">  hover:transform</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h2 id="hover-結合偽元素的應用"><a href="#hover-結合偽元素的應用" class="headerlink" title="hover 結合偽元素的應用"></a>hover 結合偽元素的應用</h2><p>一般我們常常看到 navbar 的選項在滑鼠移上去之後，下方會有一條線跑出來。這是利用 <code>::before</code> 與 <code>::after</code> 偽元素加上hover所做出來的效果。</p><p><code>div</code> 方塊 <code>position</code> 要設定為 <code>relative</code>，而 <code>before</code> 與 <code>after</code> 偽元素 position 要設定為 absolute，width 要設定為 0，hover 之後設定為 100%，這樣就會有互動效果產生。</p><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 加上 position: relative */</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ffa7de<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 設定偽元素的寬度為 0 ，position 為 absolute */</span><span class="token selector">.box:before</span> <span class="token punctuation">&#123;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #ff5e33<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> all 0.3s linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box:after</span> <span class="token punctuation">&#123;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #ff5e33<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> all 0.3s linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 設定偽元素在滑鼠移上去之後，寬度變為 100% */</span><span class="token selector">.box:hover::after</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box:hover::before</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 第二個方塊，滑鼠移上去之後，由下方的中間變出線條 */</span><span class="token selector">.box2</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ffa7de<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box2:after</span> <span class="token punctuation">&#123;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #ff5e33<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> transform 0.5s ease<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box2:hover::after</span> <span class="token punctuation">&#123;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="hover: animation" src="https://codepen.io/popeye_ux/embed/gOjoWBL?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/gOjoWBL">  hover: animation</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;hover 是一種常見的網頁滑鼠互動，用法十分簡單，但是卻可以變化出各種形式。以下筆記幾種常見的用法：&lt;/p&gt;
&lt;h2 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h2&gt;&lt;p&gt;HTM</summary>
      
    
    
    
    <category term="CSS" scheme="https://popeye-ux.github.io/categories/CSS/"/>
    
    
    <category term="CSS, hover" scheme="https://popeye-ux.github.io/tags/CSS-hover/"/>
    
  </entry>
  
  <entry>
    <title>target 進階：頁籤切換顯示內容</title>
    <link href="https://popeye-ux.github.io/2023/01/20/cssTargetTab1/"/>
    <id>https://popeye-ux.github.io/2023/01/20/cssTargetTab1/</id>
    <published>2023-01-19T17:29:39.000Z</published>
    <updated>2023-02-11T17:14:32.775Z</updated>
    
    <content type="html"><![CDATA[<p>target 是一個虛擬類別選擇器，用途在於讓我們設定目標對象的樣式。</p><p>CSS 的寫法為：</p><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">選擇器：target</span><span class="token punctuation">&#123;</span>.....<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>也就是當有人點了<code>錨點為 hello 的 a 連結</code>，則透過 <code> #hello:target&#123;……..&#125;</code> 就可以改變 id 為 hello 的 HTML 元素樣式。</p><p>在這個範例中必須懂的知識點：</p><ul><li>選取 [ 擁有特定屬性 ]的選擇器<br><code> img[alt] &#123;……..&#125;</code> 為改變有 <code>alt</code> 屬性的圖片樣式。</li><li>選取對象A ~ 選取對象B：意指選到 A 後面所有同一層的 B</li><li>選取對象A &gt; 選取對象B：意指僅選到 A 的下一層的 B</li></ul><h2 id="第一步：設定-HTML-結構，「頁籤按鈕」與「內容」連動"><a href="#第一步：設定-HTML-結構，「頁籤按鈕」與「內容」連動" class="headerlink" title="第一步：設定 HTML 結構，「頁籤按鈕」與「內容」連動"></a>第一步：設定 HTML 結構，「頁籤按鈕」與「內容」連動</h2><ol><li>點選 <code>&lt;li&gt;&lt;a href=&quot;#tab-1&quot;&gt;Tab 1&lt;/a&gt;&lt;/li&gt;</code> 標籤來觸發 <code>&lt;span id=&quot;tab-1&quot;&gt;1&lt;/span&gt;</code></li><li><code>&lt;span id=&quot;tab-1&quot;&gt;1&lt;/span&gt;</code> 利用 <code>:target</code> 反過來改變 <code>&lt;li&gt;&lt;a href=&quot;#tab-1&quot;&gt;Tab 1&lt;/a&gt;&lt;/li&gt;</code>與 <code>&lt;div class=&quot;tab-content-1&quot;&gt;&lt;p&gt;內容-1&lt;/p&gt;&lt;/div&gt; 的樣式。</code></li></ol><p>HTML 結構如下：</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!–</span> <span class="token attr-name">頁籤按鈕</span> <span class="token attr-name">–</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#tab-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tab 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#tab-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tab 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#tab-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tab 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#tab-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tab 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!–</span> <span class="token attr-name">頁籤的內容區塊</span> <span class="token attr-name">–</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-content-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>內容-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-content-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>內容-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-content-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>內容-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-content-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>內容-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>CSS 結構如下：</p><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* span:target */</span><span class="token selector">#tab-1:target,#tab-2:target,#tab-3:target,#tab-4:target</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 1px red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* /頁籤變換 選到 #tab-1 後面 #tab 後面 ul li a標籤屬性為 "#tab-x"的元素/ */</span><span class="token selector">#tab-1:target ~ #tab > ul li a[href$="#tab-1"],#tab-2:target ~ #tab > ul li a[href$="#tab-2"],#tab-3:target ~ #tab > ul li a[href$="#tab-3"],#tab-4:target ~ #tab > ul li a[href$="#tab-4"]</span> <span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 1px blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* /頁籤內容顯示 / */</span><span class="token selector">#tab-1:target ~ #tab > div.tab-content-1,#tab-2:target ~ #tab > div.tab-content-2,#tab-3:target ~ #tab > div.tab-content-3,#tab-4:target ~ #tab > div.tab-content-4</span> <span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 1px black<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 頁籤的樣式設定 */</span><span class="token selector">#tab</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 4px pink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 頁籤ul */</span><span class="token selector">#tab>ul</span><span class="token punctuation">&#123;</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px 0 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#tab>ul>li</span><span class="token punctuation">&#123;</span><span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 設定頁籤內的樣式 */</span><span class="token selector">#tab>ul>li>a</span><span class="token punctuation">&#123;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="target 進階應用" src="https://codepen.io/popeye_ux/embed/dyjZqGe?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/dyjZqGe">  target 進階應用</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h2 id="第二步：設定隱藏與切換顯示"><a href="#第二步：設定隱藏與切換顯示" class="headerlink" title="第二步：設定隱藏與切換顯示"></a>第二步：設定隱藏與切換顯示</h2><ol><li>設定所有內容區塊為隱藏。</li><li>設定初始的時候 <code>tab1</code> 為啟動狀態，而 內容-1 為顯示狀態。</li><li>設定點選其他標籤時切換內容</li></ol><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* span:target */</span><span class="token selector">#tab-1:target,#tab-2:target,#tab-3:target,#tab-4:target</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 1px red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* /頁籤變換 選到 #tab-1 後面 #tab 後面 ul li a標籤屬性為 "#tab-x"的元素/ */</span><span class="token selector">#tab-1:target ~ #tab > ul li a[href$="#tab-1"],#tab-2:target ~ #tab > ul li a[href$="#tab-2"],#tab-3:target ~ #tab > ul li a[href$="#tab-3"],#tab-4:target ~ #tab > ul li a[href$="#tab-4"]</span> <span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 1px blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* /頁籤內容顯示 / */</span><span class="token selector">#tab-1:target ~ #tab > div.tab-content-1,#tab-2:target ~ #tab > div.tab-content-2,#tab-3:target ~ #tab > div.tab-content-3,#tab-4:target ~ #tab > div.tab-content-4</span> <span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 1px black<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#tab</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 4px pink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 頁籤ul */</span><span class="token selector">#tab>ul</span><span class="token punctuation">&#123;</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px 0 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#tab>ul>li</span><span class="token punctuation">&#123;</span><span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 設定頁籤內的樣式 */</span><span class="token selector">#tab>ul>li>a</span><span class="token punctuation">&#123;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 第二步由此開始 */</span><span class="token comment">/* /所有內容區塊隱藏起來/ */</span><span class="token selector">#tab>div</span> <span class="token punctuation">&#123;</span><span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span>0 15px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">visibility</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">-webkit-transition</span><span class="token punctuation">:</span>all .4s ease-in-out<span class="token punctuation">;</span><span class="token property">-moz-transition</span><span class="token punctuation">:</span>all .4s ease-in-out<span class="token punctuation">;</span><span class="token property">-ms-transition</span><span class="token punctuation">:</span>all .4s ease-in-out<span class="token punctuation">;</span><span class="token property">-o-transition</span><span class="token punctuation">:</span>all .4s ease-in-out<span class="token punctuation">;</span><span class="token property">transition</span><span class="token punctuation">:</span>all .4s ease-in-out<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* /第一筆的底色，點擊tab1以外的標籤會變色/ */</span><span class="token selector">span:target ~ #tab > ul li:first-child a</span> <span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* :first-of-type 代表本節點為兄弟節點中第一個此類型節點。 點擊tab1以外其他標籤內容-1隱藏 */</span><span class="token selector">span:target ~ #tab > div:first-of-type</span> <span class="token punctuation">&#123;</span><span class="token property">visibility</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span>0 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* /頁籤:點擊變換&amp;第一筆還未點擊的初始化樣式/ */</span><span class="token comment">/* 下面的是點擊才會變色 */</span><span class="token selector">span ~ #tab > ul li:first-child a,#tab-1:target ~ #tab > ul li a[href$="#tab-1"],#tab-2:target ~ #tab > ul li a[href$="#tab-2"],#tab-3:target ~ #tab > ul li a[href$="#tab-3"],#tab-4:target ~ #tab > ul li a[href$="#tab-4"]</span> <span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token comment">/* /頁籤內容顯示&amp;設定第一筆為顯示/ */</span><span class="token selector">span ~ #tab > div:first-of-type,#tab-1:target ~ #tab > div.tab-content-1,#tab-2:target ~ #tab > div.tab-content-2,#tab-3:target ~ #tab > div.tab-content-3,#tab-4:target ~ #tab > div.tab-content-4</span> <span class="token punctuation">&#123;</span><span class="token property">visibility</span><span class="token punctuation">:</span>visible<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="target 進階應用2" src="https://codepen.io/popeye_ux/embed/WNKXaoO?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/WNKXaoO">  target 進階應用2</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><p>最後記得把 <code>&lt;span&gt;</code> 設為 <code>display:none</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;target 是一個虛擬類別選擇器，用途在於讓我們設定目標對象的樣式。&lt;/p&gt;
&lt;p&gt;CSS 的寫法為：&lt;/p&gt;
&lt;figure&gt;&lt;div class=&quot;code-wrapper&quot;&gt;&lt;pre class=&quot;line-numbers language-css&quot; data-la</summary>
      
    
    
    
    <category term="CSS" scheme="https://popeye-ux.github.io/categories/CSS/"/>
    
    
    <category term="CSS, target" scheme="https://popeye-ux.github.io/tags/CSS-target/"/>
    
  </entry>
  
  <entry>
    <title>用 target 選擇器改變其他 HTML 元素的樣式</title>
    <link href="https://popeye-ux.github.io/2023/01/19/cssTarget-1/"/>
    <id>https://popeye-ux.github.io/2023/01/19/cssTarget-1/</id>
    <published>2023-01-18T16:05:30.000Z</published>
    <updated>2023-01-19T17:09:26.505Z</updated>
    
    <content type="html"><![CDATA[<p>target 是一個虛擬類別選擇器，用途在於讓我們設定目標對象的樣式。</p><p>CSS 的寫法如下：</p><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.類別選擇器：target</span><span class="token punctuation">&#123;</span>.....<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="target-基礎應用"><a href="#target-基礎應用" class="headerlink" title="target 基礎應用"></a>target 基礎應用</h3><p>在這個範例中，我們藉由 <code>&lt;a href=&quot;#top&quot;&gt;</code> 來動態地操控 <code>id</code> 是 <code>top</code> 的 HTML 元素樣式。</p><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;a href&#x3D;&quot;#top&quot;&gt;上面變色&lt;&#x2F;a&gt;&lt;a href&#x3D;&quot;#&quot;&gt;不變色&lt;&#x2F;a&gt;&lt;a href&#x3D;&quot;#bottom&quot;&gt;下面變色&lt;&#x2F;a&gt;&lt;div class&#x3D;&quot;change&quot; id&#x3D;&quot;top&quot;&gt;上面變色&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;change&quot; id&#x3D;&quot;bottom&quot;&gt;下面變色&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><code>&lt;a href=&quot;#top&quot;&gt;</code> 對應的 <code>target</code>  就是 id 為 <code>top</code> 的 HTML 元素。 </p><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.change:target</span><span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>當我們點選其他連結的時候，連結對應 <code>id</code> 的元素也會改變樣式，同時其他元素的樣式會恢復原狀。</p><iframe height="300" style="width: 100%;" scrolling="no" title=":target" src="https://codepen.io/popeye_ux/embed/JjBOdNg?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/JjBOdNg">  :target</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h3 id="target-進階應用：燈箱效果"><a href="#target-進階應用：燈箱效果" class="headerlink" title="target 進階應用：燈箱效果"></a>target 進階應用：燈箱效果</h3><p>利用 <code>&lt;a href=&quot;#example1&quot;&gt;</code> 來打開燈箱。</p><p>然後用 <code>&lt;a href=&quot;#&quot; class=&quot;close&quot;&gt;</code> 來關掉燈箱效果。</p><figure><div class="code-wrapper"><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;ul&gt;  &lt;li&gt;&lt;a href&#x3D;&quot;#example1&quot;&gt;打開燈箱 #1&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;  &lt;li&gt;&lt;a href&#x3D;&quot;#example2&quot;&gt;打開燈箱 #2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;div class&#x3D;&quot;lightbox&quot; id&#x3D;&quot;example1&quot;&gt;  &lt;figure&gt;    &lt;!-- 關閉燈箱效果 --&gt;    &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;close&quot;&gt;&lt;&#x2F;a&gt;    &lt;figcaption&gt;我是燈箱一&lt;&#x2F;figcaption&gt;  &lt;&#x2F;figure&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;lightbox&quot; id&#x3D;&quot;example2&quot;&gt;  &lt;figure&gt;    &lt;!-- 關閉燈箱效果 --&gt;    &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;close&quot;&gt;&lt;&#x2F;a&gt;    &lt;figcaption&gt;我是燈箱二&lt;&#x2F;figcaption&gt;  &lt;&#x2F;figure&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 先把燈箱設為 不顯示 */</span><span class="token selector">.lightbox</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 利用 target 來打開燈箱 */</span><span class="token selector">.lightbox:target</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Lightbox content */</span><span class="token selector">.lightbox figcaption</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 25rem<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 1.5em<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Close button */</span><span class="token selector">.lightbox .close</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.lightbox .close::after</span> <span class="token punctuation">&#123;</span>  <span class="token property">right</span><span class="token punctuation">:</span> -1rem<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -1rem<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"×"</span><span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Lightbox overlay */</span><span class="token selector">.lightbox .close::before</span> <span class="token punctuation">&#123;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.7<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><iframe height="300" style="width: 100%;" scrolling="no" title="Pure-CSS lightbox" src="https://codepen.io/popeye_ux/embed/zYLPGXO?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/popeye_ux/pen/zYLPGXO">  Pure-CSS lightbox</a> by POPEYE (<a href="https://codepen.io/popeye_ux">@popeye_ux</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;target 是一個虛擬類別選擇器，用途在於讓我們設定目標對象的樣式。&lt;/p&gt;
&lt;p&gt;CSS 的寫法如下：&lt;/p&gt;
&lt;figure&gt;&lt;div class=&quot;code-wrapper&quot;&gt;&lt;pre class=&quot;line-numbers language-css&quot; data-l</summary>
      
    
    
    
    <category term="CSS" scheme="https://popeye-ux.github.io/categories/CSS/"/>
    
    
    <category term="CSS, target" scheme="https://popeye-ux.github.io/tags/CSS-target/"/>
    
  </entry>
  
</feed>
