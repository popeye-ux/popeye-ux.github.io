<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>F2E 星球通訊</title>
  
  <subtitle>DO！ Or DO Not！ There is NO TRY！</subtitle>
  <link href="https://popeye-ux.github.io/atom.xml" rel="self"/>
  
  <link href="https://popeye-ux.github.io/"/>
  <updated>2022-07-06T00:34:30.000Z</updated>
  <id>https://popeye-ux.github.io/</id>
  
  <author>
    <name>POPEYE</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>getAttributeSetAttribute</title>
    <link href="https://popeye-ux.github.io/2022/07/06/getAttributeSetAttribute/"/>
    <id>https://popeye-ux.github.io/2022/07/06/getAttributeSetAttribute/</id>
    <published>2022-07-06T15:27:46.000Z</published>
    <updated>2022-07-06T00:34:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/TKSzURm.jpg"><br>Hi,我是POPEYE，今天要來談談 getAttribute 與 setAttribute 。</p><p>getAttribute 與 setAttribute 是兩個我比較容易混淆的 JS 方法，所以我花了一點工夫來研究一下這兩個方法如何使用。</p><p>首先要了解這兩種方法是存取與操作 HTML 標籤屬性的方法，都必須要透過<strong>選取到某個 HTML DOM 節點來操作</strong>，所以寫法上一定是這樣子：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="title function_">getAttribute</span>(<span class="string">&#x27;屬性名稱&#x27;</span>);</span><br><span class="line">element.<span class="title function_">setAttribute</span>(<span class="string">&#x27;屬性名稱&#x27;</span>,<span class="string">&#x27;屬性值&#x27;</span>);</span><br><span class="line"><span class="comment">//屬性名稱為 id 、 class 、 href、 data-** ……等等</span></span><br></pre></td></tr></table></figure><h2 id="getAttribute"><a href="#getAttribute" class="headerlink" title="getAttribute"></a>getAttribute</h2><p>getAttribute 用來取得 HTML 標籤的屬性值，如果指定的屬性不存在，則會回傳 null 或 “”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 class=&quot;title&quot; id=&quot;quiet&quot; data-band=&quot;Mayday&quot; name=&quot;好好&quot;&gt;</span><br><span class="line">    最安靜的時刻，回憶總是最喧囂</span><br><span class="line">&lt;/h2&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line"><span class="keyword">const</span> quiet = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.title&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(quiet.<span class="title function_">getAttribute</span>(<span class="string">&#x27;class&#x27;</span>));</span><br><span class="line"><span class="comment">// &quot;title&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(quiet.<span class="title function_">getAttribute</span>(<span class="string">&#x27;id&#x27;</span>));</span><br><span class="line"><span class="comment">//&quot;quiet&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(quiet.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-band&#x27;</span>));</span><br><span class="line"><span class="comment">//&quot;Mayday&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(quiet.<span class="title function_">getAttribute</span>(<span class="string">&#x27;name&#x27;</span>));</span><br><span class="line"><span class="comment">//&quot;好好&quot;</span></span><br></pre></td></tr></table></figure><p>所以我們可以把 HTML 節點的屬性值取出，拿來組字串之後，再塞回本來的節點去。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 class=&quot;title&quot; id=&quot;quiet&quot; data-band=&quot;Mayday&quot; name=&quot;好好&quot;&gt;</span><br><span class="line">    最安靜的時刻，回憶總是最喧囂</span><br><span class="line">&lt;/h2&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line"><span class="keyword">const</span> quiet = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.title&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str =<span class="string">`我最喜歡的歌詞是《<span class="subst">$&#123;quiet.getAttribute(<span class="string">&#x27;data-band&#x27;</span>)&#125;</span>》唱的</span></span><br><span class="line"><span class="string">《<span class="subst">$&#123;quiet.getAttribute(<span class="string">&#x27;data-song&#x27;</span>)&#125;</span>》，</span></span><br><span class="line"><span class="string">裡面這一句「<span class="subst">$&#123;quiet.textContent&#125;</span>」`</span>;</span><br><span class="line">quiet.<span class="property">textContent</span> = str;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(quiet.<span class="property">textContent</span>);</span><br><span class="line"><span class="comment">//&quot;我最喜歡的歌詞是《Mayday》唱的《null》，裡面這一句「最安靜的時刻，回憶總是最喧囂」&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本來 <code>&lt;h2&gt;</code> 標籤中 「最安靜的時刻，回憶總是最喧囂」 ，被改成 「我最喜歡的歌詞是《Mayday》唱的《null》，裡面這一句「最安靜的時刻，回憶總是最喧囂」」囉！！！</p><h2 id="setAttribute"><a href="#setAttribute" class="headerlink" title="setAttribute"></a>setAttribute</h2><p>setAttribute 的功用在於修改 HTML 節的的屬性。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="title function_">setAttribute</span>(<span class="string">&#x27;屬性名稱&#x27;</span>,<span class="string">&#x27;屬性值&#x27;</span>);</span><br><span class="line"><span class="comment">//屬性名稱為 id 、 class 、 href、 data-** ……等等</span></span><br></pre></td></tr></table></figure><p>不囉嗦！來看一下範例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;h2 class=&quot;title2&quot; data-song=&quot;好好&quot; data-band=&quot;Mayday&quot;&gt;</span><br><span class="line">    最喧囂的時刻，寂寞包圍著孤島</span><br><span class="line">&lt;/h2&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JavaScript</span></span><br><span class="line"><span class="keyword">const</span> noise = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.title2&#x27;</span>);</span><br><span class="line"></span><br><span class="line">noise.<span class="title function_">setAttribute</span>(<span class="string">&quot;data-song&quot;</span>,<span class="string">&quot;瘋狂世界&quot;</span>);</span><br><span class="line">noise.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line"><span class="comment">//字的顏色也變成藍色了</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(noise.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-song&#x27;</span>));</span><br><span class="line"><span class="comment">//瘋狂世界&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(noise.<span class="title function_">getAttribute</span>(<span class="string">&#x27;class&#x27;</span>));</span><br><span class="line"><span class="comment">//&quot;blue&quot;</span></span><br></pre></td></tr></table></figure><ul><li><a href="https://codepen.io/popeye_ux/pen/abLmggK">CODEPEN範例</a></li></ul><h2 id="getAttribute-與-setAttribute-的進階使用"><a href="#getAttribute-與-setAttribute-的進階使用" class="headerlink" title="getAttribute 與 setAttribute 的進階使用"></a>getAttribute 與 setAttribute 的進階使用</h2><p>除了用來操作屬性之外，在做事件監聽的時候，也可以利用 getAttribute 來做一些判斷：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;item&quot;&gt;</span><br><span class="line">  &lt;li class =&quot;item1&quot;&gt;item1&lt;/li&gt;</span><br><span class="line">  &lt;li class =&quot;item2&quot;&gt;item2&lt;/li&gt;</span><br><span class="line">  &lt;li class =&quot;item3&quot;&gt;item3&lt;/li&gt;</span><br><span class="line">  &lt;li class =&quot;item4&quot;&gt;item4&lt;/li&gt;</span><br><span class="line">  &lt;li class =&quot;item5&quot;&gt;item5&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item1</span>, <span class="selector-class">.item2</span>, <span class="selector-class">.item3</span>, <span class="selector-class">.item4</span>, <span class="selector-class">.item5</span>&#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blue</span>&#123;</span><br><span class="line">  <span class="attribute">color</span> : blue;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> item = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.item&#x27;</span>);</span><br><span class="line"></span><br><span class="line">item.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;class&#x27;</span>) === <span class="string">&#x27;item3&#x27;</span>)&#123;</span><br><span class="line">    e.<span class="property">target</span>.<span class="title function_">setAttribute</span>(<span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在這裡利用 <code>e.target.getAttribute(&#39;class&#39;)</code> 來判斷如果點擊到的 <code>class</code> 屬性如果是 <code>item3</code> ， 則把 e.target 的 class 屬性變成藍色的。</p><p>MDN 有把 getAttribute 與 setAttribute 這兩個節點方法可以操作的 HTML 屬性列出來，有需要時可以參考一下：</p><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/HTML/Attributes">MDN HTML attribute reference</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/TKSzURm.jpg&quot;&gt;&lt;br&gt;Hi,我是POPEYE，今天要來談談 getAttribute 與 setAttribute 。&lt;/p&gt;
&lt;p&gt;getAttribute 與 setAttribute 是兩個我比較</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>C3.js基本使用方法</title>
    <link href="https://popeye-ux.github.io/2021/11/29/c3js/"/>
    <id>https://popeye-ux.github.io/2021/11/29/c3js/</id>
    <published>2021-11-29T15:38:31.000Z</published>
    <updated>2022-05-23T00:47:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/wprOc5M.jpg"></p><p>這一周六角學院 JS 直播班教的是 C3.js 這個畫圖表的套件。</p><p>對於一個畫圖表快二十年的人，看到這個套件感到很親切。不同於手工畫的圖表，C3.js可以透過程式把資料帶入，只要資料更新，圖表也同步更新。</p><p>其實我也使用過另外一套圖表套件 Chart.js，那是在前公司結束前，做了一個 COVID-19 的網頁，裡面圖表就是用 Chart.js 做的，那時還不會串 API ，也不會篩選資料，每天都用手動把資料更新，真的很傻B！</p><p>誠如老師講的，不用真的把文件整個看過才會用，基本上只要抓住一些設定的要點，就可以做出還不錯的圖表。以下就整理了一些我試過可行的設定，方便未來要用時，可以快速上手：</p><h2 id="導入方法"><a href="#導入方法" class="headerlink" title="導入方法"></a>導入方法</h2><p>在HTML中插入以下程式碼：</p><ul><li>CSS要放在自己寫的CSS之前。</li><li>透過CDN抓進來使用的 d3.js 與 c3.js 也要放在自己寫的 JS檔之前。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/c3/0.7.18/c3.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/d3/5.16.0/d3.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/c3/0.7.18/c3.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="曲線圖-Line-Chart"><a href="#曲線圖-Line-Chart" class="headerlink" title="曲線圖 Line Chart"></a>曲線圖 Line Chart</h2><p>基本上套件就是一個物件，而所有的圖表的資料與外觀都在 generate 這個屬性的函式參數裡面設定。而  generate 函式的參數也是一個物件。</p><p>可以透過 <code>bindto</code> 這個屬性把圖表綁定到 HTML 的 DOM 元素上。 </p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chart = c3.<span class="title function_">generate</span>(&#123;</span><br><span class="line">  <span class="attr">bindto</span>: <span class="string">&quot;.chart&quot;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="comment">// x 是設定 x 軸刻度的格式與數據</span></span><br><span class="line">    <span class="attr">x</span>: <span class="string">&quot;date&quot;</span>,</span><br><span class="line">    <span class="attr">columns</span>: [</span><br><span class="line">      <span class="comment">//&quot;date&quot; 綁定到 x 屬性的值&quot;date&quot; ，日期是字串格式</span></span><br><span class="line">      [<span class="string">&quot;date&quot;</span>, <span class="string">&quot;2021-11-21&quot;</span>, <span class="string">&quot;2021-11-22&quot;</span>, <span class="string">&quot;2021-11-23&quot;</span>, <span class="string">&quot;2021-11-24&quot;</span>],</span><br><span class="line">      <span class="comment">//資料部分，可以透過 變數 帶入</span></span><br><span class="line">      [<span class="string">&quot;data1&quot;</span>, <span class="number">30</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">400</span>],</span><br><span class="line">      [<span class="string">&quot;data2&quot;</span>, <span class="number">50</span>, <span class="number">20</span>, <span class="number">10</span>, <span class="number">40</span>]</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 顯示線圖上面每一點的資料</span></span><br><span class="line">    <span class="comment">// labels: true</span></span><br><span class="line">    <span class="comment">// 每一點的資料顯示 $</span></span><br><span class="line">    <span class="attr">labels</span>: &#123;</span><br><span class="line">      <span class="attr">format</span>: &#123;</span><br><span class="line">        <span class="attr">data1</span>: d3.<span class="title function_">format</span>(<span class="string">&quot;$&quot;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//設定一組色票讓data自己捉 線 的顏色</span></span><br><span class="line">  <span class="attr">color</span>: &#123;</span><br><span class="line">    <span class="attr">pattern</span>: [<span class="string">&quot;#ff9896&quot;</span>, <span class="string">&quot;#9467bd&quot;</span>, <span class="string">&quot;#c5b0d5&quot;</span>, <span class="string">&quot;#8c564b&quot;</span>, <span class="string">&quot;#c49c94&quot;</span>, <span class="string">&quot;#e377c2&quot;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 設定顯示格線(虛線)</span></span><br><span class="line">  <span class="attr">grid</span>: &#123;</span><br><span class="line">    <span class="attr">x</span>: &#123;</span><br><span class="line">      <span class="attr">show</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">y</span>: &#123;</span><br><span class="line">      <span class="attr">show</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//整體尺寸 不設定的話，圖表可以自適應地伸縮</span></span><br><span class="line">  <span class="attr">size</span>: &#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">780</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">400</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//padding 會壓縮線圖的大小</span></span><br><span class="line">  <span class="attr">padding</span>: &#123;</span><br><span class="line">    <span class="attr">top</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="comment">//right設太小，會讓最右側刻度的日期被遮住</span></span><br><span class="line">    <span class="attr">right</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">bottom</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">left</span>: <span class="number">100</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//設定坐標軸格式</span></span><br><span class="line">  <span class="attr">axis</span>: &#123;</span><br><span class="line">    <span class="attr">x</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;timeseries&quot;</span>,</span><br><span class="line">      <span class="comment">//刻度</span></span><br><span class="line">      <span class="attr">tick</span>: &#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">format</span>: <span class="string">&quot;%Y-%m-%d&quot;</span>,</span><br><span class="line">        <span class="comment">// outer 拿掉圖表最右側多出來的刻度</span></span><br><span class="line">        <span class="attr">outer</span>: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 設定x軸說明 或是 數據 的單位</span></span><br><span class="line">      <span class="attr">label</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;日期&quot;</span>,</span><br><span class="line">        <span class="comment">//label 橫式的位置有以下幾種</span></span><br><span class="line">        <span class="comment">//inner-right [default],inner-center,inner-left,outer-right,outer-center,outer-left</span></span><br><span class="line">        <span class="attr">position</span>: <span class="string">&quot;outer-center&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">y</span>: &#123;</span><br><span class="line">      <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">tick</span>: &#123;</span><br><span class="line">        <span class="comment">//label 的位置有以下幾種</span></span><br><span class="line">        <span class="comment">//inner-right [default],inner-center,inner-left,outer-right,outer-center,outer-left</span></span><br><span class="line">        <span class="attr">position</span>: <span class="string">&quot;inner-center&quot;</span>,</span><br><span class="line">        <span class="comment">// Y軸 數字前面加上 $ 字號</span></span><br><span class="line">        <span class="attr">format</span>: d3.<span class="title function_">format</span>(<span class="string">&quot;$,&quot;</span>)</span><br><span class="line">        <span class="comment">//format: function (d) &#123; return &quot;$&quot; + d; &#125;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">label</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;價格&quot;</span>,</span><br><span class="line">        <span class="comment">// inner-right : default, inner-center, inner-left, outer-right, outer-center, outer-left</span></span><br><span class="line">        <span class="attr">position</span>: <span class="string">&quot;outer-middle&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//設定圖例</span></span><br><span class="line">  <span class="attr">legend</span>: &#123;</span><br><span class="line">    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//圖例的位置只有 &#x27;right&#x27; 與 &#x27;bottom&#x27;</span></span><br><span class="line">    <span class="attr">position</span>: <span class="string">&quot;bottom&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//圖表的標題</span></span><br><span class="line">  <span class="attr">title</span>: &#123;</span><br><span class="line">    <span class="attr">text</span>: <span class="string">&quot;好心指數&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>CSS設定的部分：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">// CSS</span><br><span class="line"><span class="selector-class">.c3-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c3-axis-y</span> text &#123;</span><br><span class="line">  fill: red;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c3-axis-x</span> text &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  fill: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c3-axis-y</span> text &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">  fill: green;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c3-axis-y</span> <span class="selector-class">.c3-axis-y-label</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  fill: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c3-line</span> &#123;</span><br><span class="line">  stroke-<span class="attribute">width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.c3-circle</span> &#123;</span><br><span class="line">  fill: blue <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/popeye_ux/pen/WNEqNPO">Line Chart 範例</a></p><h2 id="Bar-Chart-長條圖"><a href="#Bar-Chart-長條圖" class="headerlink" title="Bar Chart 長條圖"></a>Bar Chart 長條圖</h2><p>Bar Chart 的設定大同小異，差別在於 axis 可以設定 <code>rotated: false</code> , 坐標軸翻轉，由垂直轉為水平。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chart = c3.<span class="title function_">generate</span>(&#123;</span><br><span class="line">  <span class="attr">bindto</span>: <span class="string">&quot;.chart&quot;</span>,</span><br><span class="line">  <span class="comment">//是bind，不是bid</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="string">&quot;x&quot;</span>,</span><br><span class="line">    <span class="attr">columns</span>: [</span><br><span class="line">      [</span><br><span class="line">        <span class="string">&quot;x&quot;</span>,</span><br><span class="line">        <span class="string">&quot;2013-01-01&quot;</span>,</span><br><span class="line">        <span class="string">&quot;2013-01-02&quot;</span>,</span><br><span class="line">        <span class="string">&quot;2013-01-03&quot;</span>,</span><br><span class="line">        <span class="string">&quot;2013-01-04&quot;</span>,</span><br><span class="line">        <span class="string">&quot;2013-01-05&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      [<span class="string">&quot;data1&quot;</span>, <span class="number">30</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">400</span>, <span class="number">150</span>],</span><br><span class="line">      [<span class="string">&quot;data2&quot;</span>, <span class="number">130</span>, <span class="number">100</span>, <span class="number">140</span>, <span class="number">200</span>, <span class="number">150</span>]</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">//type 設定圖表類型</span></span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;bar&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">bar</span>: &#123;</span><br><span class="line">    <span class="comment">//設定長條圖每一條寬度</span></span><br><span class="line">    <span class="attr">width</span>: &#123;</span><br><span class="line">      <span class="attr">ratio</span>: <span class="number">0.5</span> <span class="comment">// this makes bar width 50% of length between ticks</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// or</span></span><br><span class="line">    <span class="comment">//width: 100 // this makes bar width 100px</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">//設定一組色票讓data自己捉</span></span><br><span class="line">  <span class="attr">color</span>: &#123;</span><br><span class="line">    <span class="attr">pattern</span>: [<span class="string">&quot;#ff9896&quot;</span>, <span class="string">&quot;#9467bd&quot;</span>, <span class="string">&quot;#c5b0d5&quot;</span>, <span class="string">&quot;#8c564b&quot;</span>, <span class="string">&quot;#c49c94&quot;</span>, <span class="string">&quot;#e377c2&quot;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 設定顯示格線(虛線)</span></span><br><span class="line">  <span class="attr">grid</span>: &#123;</span><br><span class="line">    <span class="attr">x</span>: &#123;</span><br><span class="line">      <span class="attr">show</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">y</span>: &#123;</span><br><span class="line">      <span class="attr">show</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//整體尺寸 不設定的話，圖表可以自適應地伸縮</span></span><br><span class="line">  <span class="attr">size</span>: &#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">780</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">400</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">padding</span>: &#123;</span><br><span class="line">    <span class="attr">top</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">right</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">bottom</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">left</span>: <span class="number">100</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">axis</span>: &#123;</span><br><span class="line">    <span class="comment">//rotated 設定坐標軸翻轉</span></span><br><span class="line">    <span class="attr">rotated</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">x</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;category&quot;</span>,</span><br><span class="line">      <span class="comment">// 設定x軸說明 或是 數據 的單位</span></span><br><span class="line">      <span class="attr">label</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;日期&quot;</span>,</span><br><span class="line">        <span class="comment">//label 橫式的位置有以下幾種</span></span><br><span class="line">        <span class="comment">//inner-right [default],inner-center,inner-left,outer-right,outer-center,outer-left</span></span><br><span class="line">        <span class="attr">position</span>: <span class="string">&quot;outer-center&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">y</span>: &#123;</span><br><span class="line">      <span class="attr">tick</span>: &#123;</span><br><span class="line">        <span class="attr">position</span>: <span class="string">&quot;inner-center&quot;</span>,</span><br><span class="line">        <span class="comment">// Y軸 數字前面加上 $ 字號</span></span><br><span class="line">        <span class="attr">format</span>: d3.<span class="title function_">format</span>(<span class="string">&quot;$,&quot;</span>)</span><br><span class="line">        <span class="comment">//format: function (d) &#123; return &quot;$&quot; + d; &#125;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">label</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&quot;價格&quot;</span>,</span><br><span class="line">        <span class="comment">// inner-right : default, inner-center, inner-left, outer-right, outer-center, outer-left</span></span><br><span class="line">        <span class="attr">position</span>: <span class="string">&quot;outer-middle&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">legend</span>: &#123;</span><br><span class="line">    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//圖例的位置 &#x27;bottom&#x27;</span></span><br><span class="line">    <span class="attr">position</span>: <span class="string">&quot;bottom&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//圖表的標題</span></span><br><span class="line">  <span class="attr">title</span>: &#123;</span><br><span class="line">    <span class="attr">text</span>: <span class="string">&quot;銷售金額&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/popeye_ux/pen/yLodYmK">Bar Chart 範例</a></p><h3 id="Pie-Chart-餅圖"><a href="#Pie-Chart-餅圖" class="headerlink" title="Pie Chart 餅圖"></a>Pie Chart 餅圖</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chart = c3.<span class="title function_">generate</span>(&#123;</span><br><span class="line">  <span class="attr">bindto</span>: <span class="string">&quot;.chart&quot;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="comment">// iris data from R</span></span><br><span class="line">    <span class="attr">columns</span>: [</span><br><span class="line">      [<span class="string">&quot;iPhone&quot;</span>, <span class="number">30</span>],</span><br><span class="line">      [<span class="string">&quot;其他手機&quot;</span>, <span class="number">120</span>]</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;pie&quot;</span>,</span><br><span class="line">    <span class="attr">labels</span>: <span class="literal">true</span>    </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//設定一組色票讓data自己捉 線 的顏色</span></span><br><span class="line">  <span class="attr">color</span>: &#123;</span><br><span class="line">    <span class="attr">pattern</span>: [<span class="string">&quot;#ff9896&quot;</span>, <span class="string">&quot;#9467bd&quot;</span>, <span class="string">&quot;#c5b0d5&quot;</span>, <span class="string">&quot;#8c564b&quot;</span>, <span class="string">&quot;#c49c94&quot;</span>, <span class="string">&quot;#e377c2&quot;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//整體尺寸，本來置中，會往畫面左邊靠</span></span><br><span class="line">  <span class="attr">size</span>: &#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">780</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">400</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//padding 會壓縮線圖的大小</span></span><br><span class="line">  <span class="attr">padding</span>: &#123;</span><br><span class="line">    <span class="attr">top</span>: <span class="number">0</span>,    </span><br><span class="line">    <span class="attr">right</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">bottom</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">left</span>: <span class="number">100</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//設定圖例</span></span><br><span class="line">  <span class="attr">legend</span>: &#123;</span><br><span class="line">    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//圖例的位置只有 &#x27;right&#x27; 與 &#x27;bottom&#x27;</span></span><br><span class="line">    <span class="attr">position</span>: <span class="string">&quot;bottom&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line"> <span class="comment">//pie 及 donut 圖 label 設定的方式和其他圖不一樣，要注意</span></span><br><span class="line">  <span class="attr">pie</span>: &#123;</span><br><span class="line">    <span class="attr">label</span>: &#123;</span><br><span class="line">      <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">format</span>: <span class="keyword">function</span> (<span class="params">value, ratio, id</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> d3.<span class="title function_">format</span>(<span class="string">&quot;$&quot;</span>)(value);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//圖表的標題</span></span><br><span class="line">  <span class="attr">title</span>: &#123;</span><br><span class="line">    <span class="attr">text</span>: <span class="string">&quot;銷售金額比例&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/popeye_ux/pen/PoKrVGe">Pie Chart 範例</a></p><h2 id="Donut-Chart-甜甜圈圖"><a href="#Donut-Chart-甜甜圈圖" class="headerlink" title="Donut Chart 甜甜圈圖"></a>Donut Chart 甜甜圈圖</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chart = c3.<span class="title function_">generate</span>(&#123;</span><br><span class="line">  <span class="attr">bindto</span>: <span class="string">&quot;.chart&quot;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="comment">// iris data from R</span></span><br><span class="line">    <span class="attr">columns</span>: [</span><br><span class="line">      [<span class="string">&quot;iPhone&quot;</span>, <span class="number">30</span>],</span><br><span class="line">      [<span class="string">&quot;其他手機&quot;</span>, <span class="number">120</span>]</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;donut&quot;</span>,</span><br><span class="line">    <span class="attr">labels</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//設定一組色票讓data自己捉 線 的顏色</span></span><br><span class="line">  <span class="attr">color</span>: &#123;</span><br><span class="line">    <span class="attr">pattern</span>: [<span class="string">&quot;#ff9896&quot;</span>, <span class="string">&quot;#9467bd&quot;</span>, <span class="string">&quot;#c5b0d5&quot;</span>, <span class="string">&quot;#8c564b&quot;</span>, <span class="string">&quot;#c49c94&quot;</span>, <span class="string">&quot;#e377c2&quot;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//整體尺寸，本來置中，會往畫面左邊靠</span></span><br><span class="line">  <span class="attr">size</span>: &#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">780</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">400</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//padding 會壓縮線圖的大小</span></span><br><span class="line">  <span class="attr">padding</span>: &#123;</span><br><span class="line">    <span class="attr">top</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="comment">//right設太小，會讓最右側刻度的日期被遮住</span></span><br><span class="line">    <span class="attr">right</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">bottom</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="attr">left</span>: <span class="number">100</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//設定圖例</span></span><br><span class="line">  <span class="attr">legend</span>: &#123;</span><br><span class="line">    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//圖例的位置只有 &#x27;right&#x27; 與 &#x27;bottom&#x27;</span></span><br><span class="line">    <span class="attr">position</span>: <span class="string">&quot;bottom&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//pie 及 donut 圖 label 設定的方式和其他圖不一樣，要注意</span></span><br><span class="line">  <span class="attr">donut</span>: &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;地區&quot;</span>,</span><br><span class="line">    <span class="comment">//控制環的粗細</span></span><br><span class="line">    <span class="attr">width</span>:<span class="number">80</span>,</span><br><span class="line">    <span class="attr">label</span>: &#123;</span><br><span class="line">      <span class="attr">show</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//圖表的外部標題</span></span><br><span class="line">  <span class="attr">title</span>: &#123;</span><br><span class="line">    <span class="attr">text</span>: <span class="string">&quot;銷售金額比例&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/popeye_ux/pen/ExvBMPw">Donut Chart 範例</a></p><p>先整理以上這些基本設定，以後若有新發現在隨時更新！如果有錯誤的地方，也請不吝告訴我。感謝！</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul><li><a href="https://vainolo.com/2019/10/14/learning-c3-js-lesson-3-line-charts/">Learning C3.js – Lesson 3 – Line Charts</a></li><li><a href="https://www.demo2s.com/javascript/javascript-c3-js-x-axis-label-text-position.html">Javascript C3.js X axis label text position</a></li><li><a href="https://codepen.io/travisluong/pen/eNeaMe?editors=1010">CodePen Home C3 Line Chart Demo</a></li><li><a href="https://vainolo.com/2019/10/25/learning-c3-js-lesson-4-bar-charts/">Learning C3.js – Lesson 4 – Bar Charts</a></li><li><a href="https://hackmd.io/@sylviekuo/B1Jr5wNgD">js學習60天-c3.js筆記</a></li><li><a href="https://hsuchihting.github.io/javascript/20200715/3292510004/">JS 筆記 - C3.js 基本認識</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/wprOc5M.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;這一周六角學院 JS 直播班教的是 C3.js 這個畫圖表的套件。&lt;/p&gt;
&lt;p&gt;對於一個畫圖表快二十年的人，看到這個套件感到很親切。不同於手工畫的圖表，C3.js可以透過</summary>
      
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班, C3.js" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD-C3-js/"/>
    
  </entry>
  
  <entry>
    <title>表單取值的誤區</title>
    <link href="https://popeye-ux.github.io/2021/11/28/formValueMistake/"/>
    <id>https://popeye-ux.github.io/2021/11/28/formValueMistake/</id>
    <published>2021-11-28T09:24:39.000Z</published>
    <updated>2022-07-06T00:34:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/5g9rhAh.jpg"></p><h2 id="誤區一：忘記將表單中取出的「數字」由字串轉為數字"><a href="#誤區一：忘記將表單中取出的「數字」由字串轉為數字" class="headerlink" title="誤區一：忘記將表單中取出的「數字」由字串轉為數字"></a>誤區一：忘記將表單中取出的「數字」由字串轉為數字</h2><p>從 <code>input</code> 中取出的值為「字串」，就算 <code>type=number</code> 取出來的值也是字串，不是數字。</p><p>在JS直播班第五周的作業，我就犯了這樣的錯誤。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;number&quot; id=&quot;targetInput&quot; value=&#x27;123&#x27;&gt;</span><br><span class="line">&lt;button id=&quot;btn&quot;&gt;觸發按鈕&lt;/button&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原本的 <code>el.value</code> 顯示為 <code>string</code>，要透過 <code>parseInt</code>之後才會轉為數字。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#targetInput&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#btn&quot;</span>);</span><br><span class="line"></span><br><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(el.<span class="property">value</span>);</span><br><span class="line">  <span class="comment">//&quot;123&quot; 甚麼都不輸入的話，輸出預設值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> el.<span class="property">value</span>);</span><br><span class="line">  <span class="comment">//&quot;string&quot;</span></span><br><span class="line">  <span class="keyword">let</span> newValue = <span class="built_in">parseInt</span>(el.<span class="property">value</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> newValue);</span><br><span class="line">  <span class="comment">//&quot;number&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="誤區二：-value-getAttribute-39-value-39-兩者大不同"><a href="#誤區二：-value-getAttribute-39-value-39-兩者大不同" class="headerlink" title="誤區二：.value, .getAttribute(&#39;value&#39;) 兩者大不同"></a>誤區二：<code>.value</code>, <code>.getAttribute(&#39;value&#39;)</code> 兩者大不同</h2><p>這一點是我之前沒有思考過的問題。</p><p>在這個例子中，當我們做表單取值的時候，必須把 id 為 <code>&quot;targetInput&quot;</code>的表單元素綁訂到 <code>el</code> 這個變數上。然後利用 <code>el.value</code>去取值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; id=&quot;targetInput&quot; value=&quot;123&quot;&gt;</span><br><span class="line">&lt;button id=&quot;firstBtn&quot;&gt;觸發按鈕&lt;/button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#targetInput&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> firstBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#firstBtn&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`el.value: <span class="subst">$&#123;el.value&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">firstBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//輸入框填入任何值都會被 &quot;任意填入的值&quot; 取代</span></span><br><span class="line">    el.<span class="property">value</span> = <span class="string">&quot;任意填入的值&quot;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`el.value: <span class="subst">$&#123;el.value&#125;</span>`</span>);</span><br><span class="line">    <span class="comment">//&quot;任意填入的值&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>但是使用 <code>.getAttribute(&#39;value&#39;)</code> 也能取到 <code>input</code> 元素 <code>value</code> 屬性的值，那 <code>.value</code> 和 <code>.getAttribute(&#39;value&#39;)</code> 有甚麼差別呢？</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#targetInput&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> firstBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#firstBtn&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`el.value: <span class="subst">$&#123;el.value&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">firstBtn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//輸入框填入任何值都會被 &quot;任意填入的值&quot; 取代</span></span><br><span class="line">  el.<span class="property">value</span> = <span class="string">&quot;任意填入的值&quot;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`el.value: <span class="subst">$&#123;el.value&#125;</span>`</span>);</span><br><span class="line">  <span class="comment">//&quot;el.value: 任意填入的值&quot;</span></span><br><span class="line">  <span class="keyword">let</span> getValue = el.<span class="title function_">getAttribute</span>(<span class="string">&quot;value&quot;</span>);</span><br><span class="line">  <span class="comment">//getAttribute 取到的是 input 的預設值 ，而非 user 輸入的值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(getValue);</span><br><span class="line">    <span class="comment">//&quot;123&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>el.value</code> 會去捉取表單輸入的值，如果沒有輸入的話，就會去捉預設值。而 <code>.getAttribute(&#39;value&#39;)</code> 則不管使用者輸入甚麼，都會去捉預設值，而要改變預設值的話必須使用 <code>el.setAttribute(&#39;value&#39;, &#39;456&#39;)</code>。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#targetInput&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> firstBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#firstBtn&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`el.value: <span class="subst">$&#123;el.value&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">firstBtn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//輸入框填入任何值都會被 &quot;任意填入的值&quot; 取代</span></span><br><span class="line">  el.<span class="property">value</span> = <span class="string">&quot;任意填入的值&quot;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`el.value: <span class="subst">$&#123;el.value&#125;</span>`</span>);</span><br><span class="line">  <span class="comment">//&quot;el.value: 任意填入的值&quot;</span></span><br><span class="line">  el.<span class="title function_">setAttribute</span>(<span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;456&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> getValue = el.<span class="title function_">getAttribute</span>(<span class="string">&quot;value&quot;</span>);</span><br><span class="line">  <span class="comment">//getAttribute 取到的是 input 的預設值 ，而非 user 輸入的值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(getValue);</span><br><span class="line">  <span class="comment">// &quot;456&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以結論是表單取值不能使用 <code>el.getAttribute(&quot;value&quot;)</code>。</p><p>六角學院助教的提醒：</p><ul><li>el.value 對應的是 input 欄位目前「輸入的值」</li><li>el.getAttribute(‘value’) 對應的是 input 欄位的「預設屬性值」</li><li>修改 el.value 並不會影響 input 標籤的 value 預設屬性，使用 setAttribute() 才會。</li></ul><p>真的每天都要花時間做每日任務，常常會發現自己不懂的地方。</p><h2 id="誤區三：-el-value-不等於-e-target-value"><a href="#誤區三：-el-value-不等於-e-target-value" class="headerlink" title="誤區三： el.value 不等於 e.target.value"></a>誤區三： el.value 不等於 e.target.value</h2><p>今天看每日任務的時候有一瞬間被混淆了。</p><p><code>e.target.value</code> 的 <code>e</code> 是事件監聽的事件物件，例如滑鼠點擊按鈕時會產生一個事件物件，<code>e.target.value</code> 是點擊事件所帶的資訊。</p><p><code>el.value</code> 則是我們綁定表單元素，當輸入資訊時就會夾帶在 <code>value</code> 上。<br>兩者並不相同。</p><p><a href="https://codepen.io/popeye_ux/pen/mdMzvZp">今天的每日任務</a> 。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/5g9rhAh.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;誤區一：忘記將表單中取出的「數字」由字串轉為數字&quot;&gt;&lt;a href=&quot;#誤區一：忘記將表單中取出的「數字」由字串轉為數字&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>JS直播班 作業檢討--旅遊套票作業</title>
    <link href="https://popeye-ux.github.io/2021/11/27/travelticket/"/>
    <id>https://popeye-ux.github.io/2021/11/27/travelticket/</id>
    <published>2021-11-27T07:40:21.000Z</published>
    <updated>2022-05-01T16:49:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/9DdScYX.jpg"></p><p>這是六角學院JS直播班第五周作業的檢討。</p><p>作業有現成的 HTML 與 CSS模板，是一個旅遊促銷套票的網站，可以新增套票會同步渲染到畫面上。</p><span id="more"></span><p><a href="https://codepen.io/popeye_ux/pen/PoKQMyL">我的作業CODE PEN</a></p><p>這也是我第一次抓資料渲染到網頁上，有些笨拙，也有些地方思慮不周，更有些地方根本沒有注意到就犯錯了。</p><p>所以我後來又去看了同學的作業，針對自己沒做好的地方改進，以下就是我的檢討：</p><h2 id="Level-2-把資料渲染到畫面上"><a href="#Level-2-把資料渲染到畫面上" class="headerlink" title="Level 2 把資料渲染到畫面上"></a>Level 2 把資料渲染到畫面上</h2><p>原本我是用字串累加，之後再innerHTML到綁定的DOM元素上：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">renderScene</span>(<span class="params">datas</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> info = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  datas.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    info += <span class="string">`&lt;li  class=&quot;ticketCard&quot;&gt;&lt;div class=&quot;ticketCard-img&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;a href=&quot;#&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;img src=&quot;<span class="subst">$&#123;item.imgUrl&#125;</span>&quot; alt=&quot;<span class="subst">$&#123;item.name&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;/a&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;ticketCard-region&quot;&gt;<span class="subst">$&#123;item.area&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;ticketCard-rank&quot;&gt;<span class="subst">$&#123;item.rate&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;ticketCard-content&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;</span></span><br><span class="line"><span class="string">          &lt;a href=&quot;#&quot; class=&quot;ticketCard-name&quot;&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;ticketCard-description&quot;&gt;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;item.description&#125;</span></span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;ticketCard-info&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;ticketCard-num&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;span&gt;&lt;i class=&quot;fas fa-exclamation-circle&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">          剩下最後 &lt;span id=&quot;ticketCard-num&quot;&gt; <span class="subst">$&#123;item.group&#125;</span> &lt;/span&gt; 組</span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;ticketCard-price&quot;&gt;</span></span><br><span class="line"><span class="string">          TWD &lt;span id=&quot;ticketCard-price&quot;&gt;<span class="subst">$&#123;item.price&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/li&gt;`</span></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  )</span><br><span class="line">  ticketInfo.<span class="property">innerHTML</span> = info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>後來看到同學更好的作法：</p><ul><li>把要渲染到畫面上的卡片，單獨做成一個函式，回傳( return ) HTML 碼的字串。</li><li>再用陣列 reduce 的方法，把卡片渲染出來。</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">cardTemplate</span>(<span class="params">dataObj</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;li class=&quot;ticketCard&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ticketCard-img&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;a href=&quot;#&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;<span class="subst">$&#123;dataObj.imgUrl&#125;</span>&quot; alt=&quot;圖片&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;/a&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;ticketCard-region&quot;&gt;<span class="subst">$&#123;dataObj.area&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;ticketCard-rank&quot;&gt;<span class="subst">$&#123;dataObj.rate&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ticketCard-content&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;h3&gt;</span></span><br><span class="line"><span class="string">              &lt;a href=&quot;#&quot; class=&quot;ticketCard-name&quot;&gt;<span class="subst">$&#123;dataObj.name&#125;</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/h3&gt;</span></span><br><span class="line"><span class="string">            &lt;p class=&quot;ticketCard-description&quot;&gt;</span></span><br><span class="line"><span class="string">              <span class="subst">$&#123;dataObj.description&#125;</span></span></span><br><span class="line"><span class="string">            &lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;ticketCard-info&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;p class=&quot;ticketCard-num&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;span&gt;&lt;i class=&quot;fas fa-exclamation-circle&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">              剩下最後 &lt;span id=&quot;ticketCard-num&quot;&gt; <span class="subst">$&#123;dataObj.group&#125;</span> &lt;/span&gt; 組</span></span><br><span class="line"><span class="string">            &lt;/p&gt;</span></span><br><span class="line"><span class="string">            &lt;p class=&quot;ticketCard-price&quot;&gt;</span></span><br><span class="line"><span class="string">              TWD &lt;span id=&quot;ticketCard-price&quot;&gt;$ <span class="subst">$&#123;dataObj.price&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;/li&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用陣列的reduce方法累加，把版型組起來。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span>(<span class="params">newData = data</span>) &#123;</span><br><span class="line">  ticketCardArea.<span class="property">innerHTML</span> = newData.<span class="title function_">reduce</span>(<span class="keyword">function</span> (<span class="params">accumulator, currentValue</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(newData);</span><br><span class="line">    <span class="keyword">return</span> accumulator + <span class="title function_">cardTemp</span>(currentValue);</span><br><span class="line">  &#125;, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>初始值設為 ‘’ 空字串，傳入累加器 prev 。</li><li>第二個參數則帶入 ticketData 陣列裡的物件，讓它們傳入 cardTemplate 這個函式去累加。</li></ul><p>這種方法把版型的資料跟組版的方法分開，我覺得更有邏輯。</p><p>版型在網頁一載進來時，data陣列中的資料就要渲染在卡片上，所以要在 JS 程式碼中先呼叫 render 函式。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="LEVEL-3-利用表單新增票卡"><a href="#LEVEL-3-利用表單新增票卡" class="headerlink" title="LEVEL 3 利用表單新增票卡"></a>LEVEL 3 利用表單新增票卡</h2><p>這部分我的錯誤比較多：</p><ul><li>成功新增套票後，所有的輸入欄位可以做清空。</li><li>套票組數欄位輸入值新增進去會呈現 undefined，程式碼第 108 行在抓取 HTML 元素時有誤，應該是抓取組數欄位的 input 標籤 id 元素。</li><li>ticketObj 物件變數缺少了 rate 套票星級屬性。</li><li>金額、組數、星級的 type 都需要為 Number，建議可以在程式碼第 124~126 行做轉型。</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增套票邏輯</span></span><br><span class="line"><span class="comment">//綁定表單輸入框的元素</span></span><br><span class="line"><span class="keyword">const</span> ticketName = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ticketName&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ticketImgUrl = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ticketImgUrl&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ticketRegion = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ticketRegion&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ticketPrice = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ticketPrice&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ticketNum = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ticketNum&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ticketRate = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ticketRate&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ticketDescription = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ticketDescription&#x27;</span>);</span><br><span class="line"><span class="comment">//綁掉輸送按鈕</span></span><br><span class="line"><span class="keyword">const</span> addBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.addTicket-btn&#x27;</span>);</span><br><span class="line"><span class="comment">//對按鈕做事件監聽</span></span><br><span class="line">addBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (ticketName.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span> || ticketImgUrl.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span> || ticketRegion.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span> || ticketDescription.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span> || ticketDescription.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span> || ticketNum.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span> || ticketPrice.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;有些資訊沒有填寫！！！&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(ticketDescription.<span class="property">value</span>.<span class="property">length</span> &gt; <span class="number">100</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;套票描述的字數超過 100 字！！！&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(ticketRate.<span class="property">value</span> &gt; <span class="number">10</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;套票星級要在 10 (含10) 以下！！！&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> ticketObj = &#123;&#125;;</span><br><span class="line">  ticketObj.<span class="property">id</span> = data.<span class="property">length</span>;</span><br><span class="line">  ticketObj.<span class="property">name</span> = ticketName.<span class="property">value</span>;</span><br><span class="line">  ticketObj.<span class="property">imgUrl</span> = ticketImgUrl.<span class="property">value</span>;</span><br><span class="line">  ticketObj.<span class="property">area</span> = ticketRegion.<span class="property">value</span>;</span><br><span class="line">  ticketObj.<span class="property">description</span> = ticketDescription.<span class="property">value</span>;</span><br><span class="line">  ticketObj.<span class="property">group</span> = <span class="title class_">Number</span>(ticketNum.<span class="property">value</span>);</span><br><span class="line">  ticketObj.<span class="property">price</span> = <span class="title class_">Number</span>(ticketPrice.<span class="property">value</span>);</span><br><span class="line">  ticketObj.<span class="property">rate</span> = <span class="title class_">Number</span>(ticketRate.<span class="property">value</span>);</span><br><span class="line">  data.<span class="title function_">push</span>(ticketObj);</span><br><span class="line">  data.<span class="title function_">reverse</span>();</span><br><span class="line">  <span class="title function_">renderScene</span>(data);</span><br><span class="line">  <span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.addTicket-form&#x27;</span>);</span><br><span class="line">  form.<span class="title function_">reset</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>為了要捉到表單的資料，我綁定了許多輸入框的DOM元素，結果還少捉了一個，真的是眼花了。</p><p>後來發現同學的方法非常聰明，監聽整個 <code>&lt;form&gt;</code> 元素，而不是一個一個的輸入框，然後用陣列的展開運算子(…)，把每個輸入框的元素轉為一個一個物件，再用 foreEach() 去取輸入的值，這樣就大功告成了，不用再一一去綁定輸入框的DOM元素來取值。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();    </span><br><span class="line">    <span class="keyword">const</span> formArray = [...e.<span class="property">target</span>];</span><br><span class="line">    <span class="comment">//展開運算子(...) 會把每個輸入框變成一個物件，捉進陣列</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(formArray);</span><br><span class="line">    <span class="comment">//最後一個物件是 submit 按鈕，所以要把它去除掉</span></span><br><span class="line">    formArray.<span class="title function_">pop</span>();</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">const</span> obj = &#123;</span><br><span class="line">      <span class="attr">id</span>: ticketData.<span class="property">length</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//必須去HTML改name的內容，讓它對應到資料的物件</span></span><br><span class="line">    formArray.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      obj[item[<span class="string">&#x27;name&#x27;</span>]] = item.<span class="property">value</span>.<span class="title function_">trim</span>();</span><br><span class="line">      </span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//把數字的字串轉為數字</span></span><br><span class="line">    obj.<span class="property">group</span> = <span class="title class_">Number</span>(obj.<span class="property">group</span>);</span><br><span class="line">    obj.<span class="property">price</span> = <span class="title class_">Number</span>(obj.<span class="property">price</span>);</span><br><span class="line">    obj.<span class="property">rate</span> = <span class="title class_">Number</span>(obj.<span class="property">rate</span>)</span><br><span class="line">    <span class="comment">//表單驗證</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(obj.<span class="property">description</span>.<span class="property">length</span> &gt; <span class="number">100</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;套票描述的字數超過 100 字！！！&#x27;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (obj.<span class="property">description</span> === <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&#x27;套票描述沒有填&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(obj.<span class="property">rate</span> &gt; <span class="number">10</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;套票星級要在 10 (含10) 以下！！！&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    ticketData.<span class="title function_">push</span>(obj);</span><br><span class="line">    <span class="title function_">render</span>();</span><br><span class="line">    regionSearch.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    formEl.<span class="title function_">reset</span>();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="LEVEL3-城市選單：選擇城市-變換網頁內容"><a href="#LEVEL3-城市選單：選擇城市-變換網頁內容" class="headerlink" title="LEVEL3 城市選單：選擇城市 變換網頁內容"></a>LEVEL3 城市選單：選擇城市 變換網頁內容</h2><p>這個部分，我目前的程度寫出來是這樣子：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//選取城市，渲染出符合城市條件的卡片</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">selectCity</span> (e) &#123; </span><br><span class="line">    <span class="comment">// &#x27;&#x27;空字串布林值為 false，利用!反轉變成 true</span></span><br><span class="line">    <span class="keyword">if</span> (!e.<span class="property">target</span>.<span class="property">value</span> ) &#123;</span><br><span class="line">      <span class="title function_">render</span>(ticketData)</span><br><span class="line">      searchResultText.<span class="property">innerHTML</span> = <span class="string">`本次搜尋共 <span class="subst">$&#123;ticketData.length&#125;</span> 筆資料`</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> selectedCity = ticketData.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> e.<span class="property">target</span>.<span class="property">value</span> === item.<span class="property">area</span>;</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(selectedCity);</span><br><span class="line">      searchResultText.<span class="property">innerHTML</span> = <span class="string">`本次搜尋共 <span class="subst">$&#123;selectedCity.length&#125;</span> 筆資料`</span>;</span><br><span class="line">      <span class="title function_">render</span>(selectedCity);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>但是我也有看到同學利用「三元運算子」寫出很簡短的程式碼：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">selectCity</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> filterStr = e.<span class="property">target</span>.<span class="property">value</span>;</span><br><span class="line">    filterStr === <span class="string">&#x27;&#x27;</span> ? <span class="title function_">render</span>() : <span class="title function_">render</span>(ticketData.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">area</span> === filterStr)) ;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>他山之石可以攻錯，如果可以學習別人好的地方，來讓自己進步，就可以讓自己離目標更近一點。</p><p><a href="https://codepen.io/popeye_ux/pen/VwzExxo">修改過後的作業</a></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Operators/Spread_syntax">MDN Spread syntax (…)</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/9DdScYX.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;這是六角學院JS直播班第五周作業的檢討。&lt;/p&gt;
&lt;p&gt;作業有現成的 HTML 與 CSS模板，是一個旅遊促銷套票的網站，可以新增套票會同步渲染到畫面上。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班, array" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD-array/"/>
    
  </entry>
  
  <entry>
    <title>JS直播班 作業檢討--高雄里長OPEN DATA作業</title>
    <link href="https://popeye-ux.github.io/2021/11/25/villageOpenData/"/>
    <id>https://popeye-ux.github.io/2021/11/25/villageOpenData/</id>
    <published>2021-11-25T05:35:37.000Z</published>
    <updated>2022-05-01T16:49:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/f7TZ3LP.jpg"></p><p>六角學院JS直播班第五周的小組任務，是要撈 《高雄的里長資訊》，我自己做完作業之後，再參考同學寫的code，我認為自己可以再改進優化：</p><span id="more"></span><p>作業要求的任務如下：</p><ul><li>里長男女生人數比例</li><li>前鎮區有幾個里長</li><li>三民區有幾個女性里長</li><li>無黨籍、民主進步黨、中國國民黨各佔幾位？</li><li>所有區里長人數都整理在一個物件裡</li></ul><p><a href="https://codepen.io/popeye_ux/pen/dyzeLbG">我的高雄市里長資訊作業</a></p><p>資料格式是一個陣列包著物件的JSON檔，物件的屬性為中文命名：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">    &#123;</span><br><span class="line">    區別: <span class="string">&quot;鹽埕區&quot;</span>,</span><br><span class="line">    里別: <span class="string">&quot;藍橋里&quot;</span>,</span><br><span class="line">    里長姓名: <span class="string">&quot;陳本興&quot;</span>,</span><br><span class="line">    性別: <span class="string">&quot;男&quot;</span>,</span><br><span class="line">    生日: <span class="string">&quot;0380817&quot;</span>,</span><br><span class="line">    辦公室電話: <span class="string">&quot;075219559&quot;</span>,</span><br><span class="line">    住家電話: <span class="string">&quot;075219559&quot;</span>,</span><br><span class="line">    手機: <span class="string">&quot;0921236319&quot;</span>,</span><br><span class="line">    信箱: <span class="string">&quot;kh01001@kcg.gov.tw&quot;</span>,</span><br><span class="line">    辦公室: <span class="string">&quot;鹽埕區藍橋里建國四路344號1樓&quot;</span>,</span><br><span class="line">    黨籍: <span class="string">&quot;其他&quot;</span>,</span><br><span class="line">    經歷: <span class="string">&quot;改制後第3.4屆,合併後第1.2屆&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//以下省略</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>以下一一來檢討：</p><h2 id="任務一：里長男女生人數比例"><a href="#任務一：里長男女生人數比例" class="headerlink" title="任務一：里長男女生人數比例"></a>任務一：里長男女生人數比例</h2><p>我的做法是用陣列的 filter 方法，分別撈出男、女里長的資訊，再來算百分比就好了。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//里長人數等於陣列長度</span></span><br><span class="line"><span class="keyword">let</span> villageChiefNum = data.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//filter 方法撈出 [&quot;性別&quot;]為男性的里長</span></span><br><span class="line"><span class="keyword">let</span> maleNum = data.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item[<span class="string">&quot;性別&quot;</span>] === <span class="string">&quot;男&quot;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//filter 方法撈出 [&quot;性別&quot;]為女性的里長</span></span><br><span class="line"><span class="keyword">let</span> femaleNum = data.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item[<span class="string">&quot;性別&quot;</span>] === <span class="string">&quot;女&quot;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> malePercent = ((maleNum.<span class="property">length</span>/villageChiefNum)*<span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> femalePercent =((femaleNum.<span class="property">length</span>/villageChiefNum)*<span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`高雄市的男性里長有 <span class="subst">$&#123;maleNum.length&#125;</span> 位，佔所有里長 <span class="subst">$&#123;malePercent&#125;</span> %的比例；</span></span><br><span class="line"><span class="string">女性里長有 <span class="subst">$&#123;femaleNum.length&#125;</span> 位，佔所有里長 <span class="subst">$&#123;femalePercent&#125;</span> %的比例`</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//高雄市的男性里長有 704 位，佔所有里長 79.01 %的比例；</span></span><br><span class="line"><span class="comment">//女性里長有 187 位，佔所有里長 20.99 %的比例</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>而同學的做法如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">genderRatioCalc</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//設定初始值  </span></span><br><span class="line">    <span class="keyword">let</span> maleNum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> femaleNum = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//用if else來處理男女人數</span></span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (item[<span class="string">&#x27;性別&#x27;</span>] === <span class="string">&#x27;男&#x27;</span>) &#123;</span><br><span class="line">            maleNum += <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            femaleNum += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> malePercent = ((maleNum / villageChiefNum) * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">let</span> femalePercent = ((femaleNum / villageChiefNum) * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`高雄市的男性里長有 <span class="subst">$&#123;maleNum&#125;</span> 位，佔所有里長 <span class="subst">$&#123;malePercent&#125;</span> %的比例；</span></span><br><span class="line"><span class="string">    女性里長有 <span class="subst">$&#123;femaleNum&#125;</span> 位，佔所有里長 <span class="subst">$&#123;femalePercent&#125;</span> %的比例`</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">genderRatioCalc</span>();</span><br></pre></td></tr></table></figure><h3 id="任務一檢討："><a href="#任務一檢討：" class="headerlink" title="任務一檢討："></a>任務一檢討：</h3><ul><li>我沒有先用 if else 去想，而事先想用 filter 撈出陣列，跳過邏輯判斷的部分。</li><li>沒用 input output 的觀念來思考，以至於忽略了可以封裝成一個函式。</li></ul><hr><h2 id="任務二：前鎮區有幾個里長"><a href="#任務二：前鎮區有幾個里長" class="headerlink" title="任務二：前鎮區有幾個里長"></a>任務二：前鎮區有幾個里長</h2><p>我這樣做：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> villageArr = data.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item[<span class="string">&quot;區別&quot;</span>] === <span class="string">&quot;前鎮區&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`前鎮區里長有<span class="subst">$&#123;villageArr.length&#125;</span>位`</span>);</span><br></pre></td></tr></table></figure><h2 id="任務三：-三民區有幾個女性里長"><a href="#任務三：-三民區有幾個女性里長" class="headerlink" title="任務三： 三民區有幾個女性里長"></a>任務三： 三民區有幾個女性里長</h2><p>我這樣做：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sanminDistrictFemale = data.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (item[<span class="string">&quot;區別&quot;</span>] === <span class="string">&quot;三民區&quot;</span> &amp;&amp; item[<span class="string">&quot;性別&quot;</span>] === <span class="string">&quot;女&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`三民區女性區長有<span class="subst">$&#123;sanminDistrictFemale.length&#125;</span>位`</span>);</span><br></pre></td></tr></table></figure><p>同學把任務二跟三包裝成一個函式來處理：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">villageChief</span>(<span class="params">villageName, sex = <span class="string">&#x27;&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="comment">//設一個空陣列</span></span><br><span class="line">    <span class="keyword">let</span> villageArr = [];</span><br><span class="line">    <span class="comment">//如果性別為空字串(沒有查詢)，只要處理 里長的人數</span></span><br><span class="line">    <span class="keyword">if</span> (sex === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        villageArr = data.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item[<span class="string">&#x27;區別&#x27;</span>] === villageName);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(villageArr);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;villageName&#125;</span>里長有<span class="subst">$&#123;villageArr.length&#125;</span>位`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//否則 里長的人數 與 性別都做處理</span></span><br><span class="line">        villageArr = data.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item[<span class="string">&quot;區別&quot;</span>] === villageName &amp;&amp; item[<span class="string">&quot;性別&quot;</span>] === sex)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;villageName&#125;</span>有<span class="subst">$&#123;villageArr.length&#125;</span>位<span class="subst">$&#123;sex&#125;</span>里長`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">villageChief</span>(<span class="string">&#x27;前鎮區&#x27;</span>);</span><br><span class="line"><span class="title function_">villageChief</span>(<span class="string">&#x27;三民區&#x27;</span>,<span class="string">&#x27;女&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="任務二、三檢討："><a href="#任務二、三檢討：" class="headerlink" title="任務二、三檢討："></a>任務二、三檢討：</h3><ul><li>沒用 input output 的觀念來思考。</li><li>根本沒想到 兩個任務可以合併來寫。</li><li>忽略了參數屬值的設定( sex &#x3D;&#x3D;&#x3D; ‘’ )，可以拿來做 if else 判斷，這個要學起來。</li></ul><hr><h2 id="任務四：無黨籍、民主進步黨、中國國民黨各佔幾位？"><a href="#任務四：無黨籍、民主進步黨、中國國民黨各佔幾位？" class="headerlink" title="任務四：無黨籍、民主進步黨、中國國民黨各佔幾位？"></a>任務四：無黨籍、民主進步黨、中國國民黨各佔幾位？</h2><p>因為有指定黨籍，所以我這麼做：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> party = &#123;</span><br><span class="line">    <span class="string">&quot;國民黨&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;民主進步黨&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;中國國民黨&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;;</span><br><span class="line">data.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    party[item[<span class="string">&quot;黨籍&quot;</span>]] += <span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`高雄無黨籍有<span class="subst">$&#123;party[<span class="string">&quot;無黨籍&quot;</span>]&#125;</span>位`</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`高雄民主進步黨有<span class="subst">$&#123;party[<span class="string">&quot;民主進步黨&quot;</span>]&#125;</span>位`</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`高雄中國國民黨有<span class="subst">$&#123;party[<span class="string">&quot;中國國民黨&quot;</span>]&#125;</span>位`</span>);</span><br></pre></td></tr></table></figure><p>但是同學這樣做：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">partChiefCount</span> = (<span class="params">party</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> partyChiefNum = <span class="number">0</span>;</span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (item[<span class="string">&#x27;黨籍&#x27;</span>] === party) partyChiefNum += <span class="number">1</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;party&#125;</span>共有<span class="subst">$&#123;partyChiefNum&#125;</span>位里長`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">partChiefCount</span>(<span class="string">&#x27;無黨籍&#x27;</span>);</span><br><span class="line">  <span class="title function_">partChiefCount</span>(<span class="string">&#x27;民主進步黨&#x27;</span>);</span><br><span class="line">  <span class="title function_">partChiefCount</span>(<span class="string">&#x27;中國國民黨&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>一樣是忽略了 input 與 output。</li><li>如果今天不是指定要那些黨，我就要改變做法了。</li></ul><h3 id="任務五：所有區里長人數都整理在一個物件裡"><a href="#任務五：所有區里長人數都整理在一個物件裡" class="headerlink" title="任務五：所有區里長人數都整理在一個物件裡"></a>任務五：所有區里長人數都整理在一個物件裡</h3><p>作業要求最後輸出時要變成以下的樣子：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> total = &#123;</span><br><span class="line">    <span class="string">&quot;前鎮區&quot;</span>:<span class="number">30</span>,</span><br><span class="line">    <span class="string">&quot;三民區&quot;</span>:<span class="number">50</span>,</span><br><span class="line">    <span class="string">&quot;苓雅區&quot;</span>:<span class="number">79</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我的想法：</p><ol><li>撈出資料中所有的區，把它放入一個空陣列中。</li><li>過濾掉重複的區 ，變成一個新的陣列 distArry</li><li>把各區的名字變成物件 distObj 的屬性</li><li>把data的區別屬性，與distObj的區別屬性比對，兩者相同就加一<figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//撈出資料中所有的區，放入一個空陣列中：</span></span><br><span class="line"><span class="keyword">let</span> dist = [];</span><br><span class="line">data.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    distName = item[<span class="string">&quot;區別&quot;</span>];</span><br><span class="line">    dist.<span class="title function_">push</span>(distName);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//過濾掉重複的區</span></span><br><span class="line"><span class="keyword">let</span> distArry = dist.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">item, index</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> dist.<span class="title function_">indexOf</span>(item) === index;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//把所有的區名變成物件屬性，預設值為 0</span></span><br><span class="line"><span class="keyword">let</span> distObj = &#123;&#125;;</span><br><span class="line">distArry.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item, index</span>) &#123;</span><br><span class="line">    distObj[item] = <span class="number">0</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//跑data陣列物件與distObj物件比對，區別的值與物件的屬性一樣，那物件那邊的屬性值就加一</span></span><br><span class="line"><span class="comment">//三角關係：data，distArry,distObj</span></span><br><span class="line">data.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item, index, array</span>) &#123;</span><br><span class="line">    distObj[item[<span class="string">&#x27;區別&#x27;</span>]] += <span class="number">1</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><p>同學的做法，又快又簡單：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> total = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">organizeChiefOfVillage</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//如果物件沒有該屬性的話，則設置屬性，並給初始值數值 1</span></span><br><span class="line">        <span class="keyword">if</span> (total[item[<span class="string">&#x27;區別&#x27;</span>]] === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            total[item[<span class="string">&#x27;區別&#x27;</span>]] = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 如果物件有屬性，則直接+1</span></span><br><span class="line">            total[item[<span class="string">&#x27;區別&#x27;</span>]] += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">organizeChiefOfVillage</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(total);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="任務五檢討"><a href="#任務五檢討" class="headerlink" title="任務五檢討"></a>任務五檢討</h3><p>可能是剛做完陣列方法的筆記，對於 filter 的印象太過深刻，所以思考路徑會一直往 filter 跑，完全忘記用 if else 也可以篩選，還有是物件取值的方法不夠熟練，所以不會往那邊去想解決方法。</p><p>最後要做的時候要想 input 與 output，盡量想想怎樣可以更完整的解決問題。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/f7TZ3LP.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;六角學院JS直播班第五周的小組任務，是要撈 《高雄的里長資訊》，我自己做完作業之後，再參考同學寫的code，我認為自己可以再改進優化：&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班, array" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD-array/"/>
    
  </entry>
  
  <entry>
    <title>實用陣列操作大全-進階使用方法</title>
    <link href="https://popeye-ux.github.io/2021/11/20/arrayAdvance/"/>
    <id>https://popeye-ux.github.io/2021/11/20/arrayAdvance/</id>
    <published>2021-11-20T07:22:17.000Z</published>
    <updated>2022-05-01T16:49:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/1HmPkkR.jpg"><br>陣列裡是有順序的集合，每個元素因為有索引。所以可以用迴圈的方法來遍歷陣列裡的元素，來進行有條件的篩選。</p><span id="more"></span><p>最常用的就是 for 迴圈處理陣列元素的遍歷問題。</p><p>它的撰寫規則如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ([initialization]; [condition]; [final-expression])</span><br><span class="line">   statement</span><br></pre></td></tr></table></figure><ul><li>initialization：初始表達式，也就是按下計數器，從條件的初始值開始計算。</li><li>condition：判斷條件成不成立，如果回傳 true ,則迴圈繼續執行；如果為 false 則迴圈終止。</li><li>final-expression：遞增表達式，每次迴圈執行完，判斷條件加 1 ，直到判斷條件不成立。</li></ul><p>假設我們要依序印出 avangers 這個超級英雄的陣列元素，用 for 迴圈可以這樣做：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>, <span class="string">&#x27;驚奇隊長&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; avengers.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i + avengers[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 依序印出：</span></span><br><span class="line"><span class="comment">// 0鋼鐵人</span></span><br><span class="line"><span class="comment">// 1美國隊長</span></span><br><span class="line"><span class="comment">// 2浩克</span></span><br><span class="line"><span class="comment">// 3雷神</span></span><br><span class="line"><span class="comment">// 4驚奇隊長</span></span><br></pre></td></tr></table></figure><p>可以看出 for 迴圈是依照條件，不斷地透過索引去撈出陣列中對應的元素（遍歷整個陣列），然後一次一次印出迴圈中的元素。直到條件不符合，才終止迴圈的執行。</p><p>但是現在操作陣列不用那麼麻煩，ES5之後，新增了許多操作陣列的方法，讓我們一起來看看吧！</p><h2 id="Array-prototype-forEach"><a href="#Array-prototype-forEach" class="headerlink" title="Array.prototype.forEach()"></a>Array.prototype.forEach()</h2><blockquote><p>forEach() 方法會將陣列內的每個元素，皆傳入並執行給定的函式一次。<br>直接修改原本的陣列。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">currentValue[, index[, array]]</span>) &#123;</span><br><span class="line">    <span class="comment">//your iterator</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>function ： 給定的函式，是一個 callBack function，會把陣列中的每個元素當作參數帶入陣列中，每個元素執行一次。</li><li>currentValue ： 這個參數代表陣列中輪到被函式處理的元素。</li><li>index ： 這個參數代表陣列中正在被函式處理的元素的索引值。可省略。</li><li>array ： 代表被執行的陣列。可省略。</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = avengers.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item,index,array</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;item&#125;</span> 的索引值是 <span class="subst">$&#123;index&#125;</span>，陣列的內容是 [<span class="subst">$&#123;array&#125;</span>]`</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 鋼鐵人 的索引值是 0，陣列的內容是 [鋼鐵人,美國隊長,浩克,雷神]</span></span><br><span class="line"><span class="comment">// 美國隊長 的索引值是 1，陣列的內容是 [鋼鐵人,美國隊長,浩克,雷神]</span></span><br><span class="line"><span class="comment">// 浩克 的索引值是 2，陣列的內容是 [鋼鐵人,美國隊長,浩克,雷神]</span></span><br><span class="line"><span class="comment">// 雷神 的索引值是 3，陣列的內容是 [鋼鐵人,美國隊長,浩克,雷神]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray);</span><br><span class="line"><span class="comment">// undefined</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>和 for 迴圈比較起來， forEach 不用設定任何條件，也不用初始化，就可以把每個元素傳入函式中執行。</p><p>要注意的是 forEach 方法不會回傳任何的值，所以 console.log 的值是「 Uncaught ReferenceError: newArray is not defined 」。</p><p>另外，for 迴圈可以使用 break 跳出，但是 forEach()如果使用break會紅字報錯。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line">avengers.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (item ===<span class="string">&#x27;美國隊長&#x27;</span> )&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">//Uncaught SyntaxError: Illegal break statement </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>forEach也不會理會使用return的方法中止程式執行，會一路跑完。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line">avengers.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (item ===<span class="string">&#x27;美國隊長&#x27;</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(avengers)</span><br><span class="line"><span class="comment">//[&quot;鋼鐵人&quot;,&quot;美國隊長&quot;,&quot;浩克&quot;,&quot;雷神&quot;]</span></span><br></pre></td></tr></table></figure><h2 id="array-prototype-map"><a href="#array-prototype-map" class="headerlink" title="array.prototype.map"></a>array.prototype.map</h2><blockquote><p>map() 方法會建立一個新的陣列，其內容為原陣列的每一個元素經由回呼函式運算後所回傳的結果之集合。</p></blockquote><p>也就是我們使用 map() 的時候，會透過給定的函式條件處理原來的陣列，再回傳一個新的陣列。</p><p>語法：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> new_array = arr.<span class="title function_">map</span>(<span class="keyword">function</span> <span class="title function_">callback</span>(<span class="params"> currentValue[, index[, array]]</span>) &#123;</span><br><span class="line">    <span class="comment">// return element for new_array</span></span><br><span class="line">&#125;[, thisArg])</span><br></pre></td></tr></table></figure><ul><li>function ： 給定的函式是一個回呼函式。會把陣列中的每個元素當作參數帶入陣列中，每個元素執行一次。</li><li>index ： 處理中的元素索引。</li><li>array ： 當前函式處理的陣列。</li></ul><p>範例：找出名字的字串長度是2的超級英雄。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = avengers.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(item.<span class="property">length</span> === <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray)</span><br><span class="line"><span class="comment">//[undefined, undefined, &#x27;浩克&#x27;, &#x27;雷神&#x27;]</span></span><br></pre></td></tr></table></figure><p>map() 的特色是：</p><ol><li>適合用來篩選特定資料。</li><li>map() 所帶函式回傳的值，會組成一個新的陣列回傳。</li><li>不會改變原來的陣列。</li><li>回傳的陣列長度會等於原始的陣列長度。</li><li>如果沒有回傳值，則元素的值為undefined。</li></ol><p>上面的範例，如果寫法照搬，只把 map 改成 forEach：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = avengers.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(item.<span class="property">length</span> === <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray)</span><br><span class="line"><span class="comment">//undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(avengers)</span><br><span class="line">[<span class="string">&quot;鋼鐵人&quot;</span>,<span class="string">&quot;美國隊長&quot;</span>,<span class="string">&quot;浩克&quot;</span>,<span class="string">&quot;雷神&quot;</span>]</span><br></pre></td></tr></table></figure><p>forEach 方法不會回傳值，所以 newArray 查詢的結果是 undefined。而 avengers 原始陣列也沒有被改變。</p><p>如果要改變原始陣列的話，要這樣子寫：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = avengers.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item,index,array</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(item.<span class="property">length</span> === <span class="number">2</span>)&#123;</span><br><span class="line">        array[index] = item;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      array[index] = <span class="string">&quot;undefined&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray)</span><br><span class="line"><span class="comment">//undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(avengers)</span><br><span class="line"><span class="comment">//[&#x27;undefined&#x27;, &#x27;undefined&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;]</span></span><br></pre></td></tr></table></figure><p>因為forEach不會回傳值， let newArray &#x3D; 這一段其實不用寫了，寫出來只是為了方便比較。</p><h2 id="Array-prototype-filter"><a href="#Array-prototype-filter" class="headerlink" title="Array.prototype.filter()"></a>Array.prototype.filter()</h2><blockquote><p>filter() 方法會建立一個經指定之函式運算後，由原陣列中通過該函式檢驗之元素所構成的新陣列。</p></blockquote><p>語法如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newArray = arr.<span class="title function_">filter</span>(<span class="title function_">callback</span>(element[, index[, array]])[, thisArg])</span><br></pre></td></tr></table></figure><ul><li>element ： 當前處理到的元素。</li><li>index ： 給定函式目前處理的元素索引。可省略。</li><li>array ： 給定函式目前處理的陣列。可省略。</li></ul><p>範例：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = avengers.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> item.<span class="property">length</span> === <span class="number">2</span> ;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray)</span><br><span class="line">[<span class="string">&quot;浩克&quot;</span>,<span class="string">&quot;雷神&quot;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(avengers)</span><br><span class="line">[<span class="string">&quot;鋼鐵人&quot;</span>,<span class="string">&quot;美國隊長&quot;</span>,<span class="string">&quot;浩克&quot;</span>,<span class="string">&quot;雷神&quot;</span>]</span><br></pre></td></tr></table></figure><p>可以觀察到 filter 過濾出字串長度為 2 的陣列元素，並回傳一個新的陣列。而原來的陣列沒被改變。</p><p>filter()也可以用來過濾掉陣列中的重複值：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>, <span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;鋼鐵人&#x27;</span>, <span class="string">&#x27;雷神&#x27;</span>,<span class="string">&#x27;美國隊長&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = avengers.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">item,index,array</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(avengers.<span class="title function_">indexOf</span>(item));</span><br><span class="line">    <span class="comment">//回傳第一個找到的元素索引</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line">    <span class="comment">//函式當前處理的元素索引</span></span><br><span class="line">    <span class="keyword">return</span> avengers.<span class="title function_">indexOf</span>(item) === index;</span><br><span class="line">    <span class="comment">//當第一個找到的元素索引等於函式目前處理的元素索引</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray);</span><br><span class="line"><span class="comment">//[&quot;鋼鐵人&quot;,&quot;美國隊長&quot;,&quot;浩克&quot;,&quot;雷神&quot;]</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;鋼鐵人&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;美國隊長&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;浩克&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span>  newAvengers= avengers.<span class="title function_">filter</span>(<span class="function"><span class="params">member</span> =&gt;</span> member.<span class="property">firePower</span> &gt;= <span class="number">5</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newAvengers);</span><br></pre></td></tr></table></figure><p>回傳值為一個新的陣列，陣列裡有 2 個物件， firePower 都大於或等於 5 ：<br><img src="https://i.imgur.com/buYi4MP.png"></p><h2 id="Array-prototype-every"><a href="#Array-prototype-every" class="headerlink" title="Array.prototype.every()"></a>Array.prototype.every()</h2><blockquote><p>every() 方法會測試陣列中的所有元素是否都通過了由給定之函式所實作的測試。<br>回傳值為布林值， true 或 false。</p></blockquote><p>every() 方法可以用來檢測陣列中的元素是否符合特定條件。</p><p>語法：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newArray = arr.<span class="title function_">every</span>(<span class="title function_">callback</span>(currentValue[, index[, array]])[, thisArg])</span><br></pre></td></tr></table></figure><ul><li>currentValue ： 目前正被回呼函式處理的元素。</li><li>index ： 目前被處理元素的陣列索引。可省略。</li><li>array ： 目前被處理的陣列。可省略。<figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;鋼鐵人&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;美國隊長&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;浩克&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span>  isGoodPower= avengers.<span class="title function_">every</span>(<span class="keyword">function</span>(<span class="params">member</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> member.<span class="property">firePower</span> &gt;= <span class="number">5</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(isGoodPower);</span><br><span class="line"><span class="comment">//false 並不是所有超級英雄的武裝火力都超過 5</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Array-prototype-some"><a href="#Array-prototype-some" class="headerlink" title="Array.prototype.some()"></a>Array.prototype.some()</h2><blockquote><p>some() 方法會透過給定函式、測試陣列中是否至少有一個元素，通過該函式所實作的測試。這方法回傳的是布林值。</p></blockquote><p>也就是陣列中只要有一個元素符合指定函式的條件，就回傳 true ，否則就回傳 false 。</p><p>語法：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newArray = arr.<span class="title function_">some</span>(<span class="title function_">callback</span>(currentValue[, index[, array]])[, thisArg])</span><br></pre></td></tr></table></figure><ul><li>currentValue ： 目前正被回呼函式處理的元素。</li><li>index ： 目前被處理元素的陣列索引。可省略。</li><li>array ： 目前被處理的陣列。可省略。</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;鋼鐵人&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;美國隊長&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;浩克&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span>  isGoodPower= avengers.<span class="title function_">some</span>(<span class="keyword">function</span>(<span class="params">member</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> member.<span class="property">firePower</span> &gt;= <span class="number">5</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(isGoodPower);</span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="Array-prototype-reduce"><a href="#Array-prototype-reduce" class="headerlink" title="Array.prototype.reduce()"></a>Array.prototype.reduce()</h2><p>MDN上寫著：</p><blockquote><p>reduce() 方法將一個累加器及陣列中每項元素（由左至右）傳入回呼函式，將陣列化為單一值。</p></blockquote><p>通常用來做陣列中數字的累加。</p><p>語法為：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">reduce</span>(callback[accumulator, currentValue, currentIndex, array], initialValue)</span><br></pre></td></tr></table></figure><ul><li>accumulator：累加器，個別 currentValue 加總的累計值，如果是第一次呼叫，就看有沒有初始值來決定累加器一開始的值。</li><li>currentValue：陣列的個別元素</li><li>currentIndex：陣列的個別元素索引</li><li>array：回呼函式處理的陣列，可省略。</li><li>initialValue：預設值，可省略。</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;鋼鐵人&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;美國隊長&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;浩克&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> reduceAvenger = avengers.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">accumulator, currentValue</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> accumulator + currentValue.<span class="property">firePower</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reduceAvenger);</span><br><span class="line"><span class="comment">//[object Object]50  !!!!</span></span><br><span class="line"><span class="comment">//因為未提供初始值，預設 陣列 第一個值，作為初始值。</span></span><br><span class="line"><span class="comment">//第一個值為一個 Object，結果造成非預期的錯誤</span></span><br></pre></td></tr></table></figure><p>因為未提供初始值，所以出現了錯誤。</p><p>沒有預設值的話，accumulator（累計值）會取陣列的第一個元素當作預設值。所以我們加上預設值，再來一次。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;鋼鐵人&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;美國隊長&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;浩克&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> reduceAvenger = avengers.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">accumulator, currentValue</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> accumulator + currentValue.<span class="property">firePower</span>;</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reduceAvenger);</span><br><span class="line"><span class="comment">//15</span></span><br></pre></td></tr></table></figure><p>reduce()也可以拿來合併陣列：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> avengers = [[<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>],[<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>],[<span class="string">&#x27;美國隊長&#x27;</span>,<span class="string">&#x27;黑寡婦&#x27;</span>]]</span><br><span class="line">newAvengers = avengers.<span class="title function_">reduce</span>(<span class="function">(<span class="params">accumulator,currentValue</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> accumulator.<span class="title function_">concat</span>(currentValue)</span><br><span class="line">&#125;,[])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newAvengers)</span><br><span class="line"><span class="comment">//[&#x27;鋼鐵人&#x27;, &#x27;蜘蛛人&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;, &#x27;美國隊長&#x27;, &#x27;黑寡婦&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul><li><a href="https://wcc723.github.io/development/2020/10/05/js-for-loop-vs-for-each/">for 迴圈與 forEach 有什麼不同</a></li><li><a href="https://realdennis.medium.com/array-%E5%8E%9F%E5%9E%8B%E7%9A%84-foreach-%E6%9C%89%E5%A4%9A%E5%A5%BD%E7%94%A8-%E5%AD%B8%E6%9C%83%E9%AB%98%E9%9A%8E%E5%87%BD%E6%95%B8%E4%B9%8B%E5%BE%8C%E9%83%BD%E4%B8%8D%E6%83%B3%E5%AF%AB-javascript-%E4%BB%A5%E5%A4%96%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80%E4%BA%86-dc4b594a045a">Array 原型的 forEach 有多好用？ 學會高階函數之後都不想寫 JavaScript 以外的程式語言了</a></li><li><a href="https://dotblogs.com.tw/supershowwei/2020/10/19/094424">在 JavaScript 的 Array.prototype.forEach() 方法實現 continue; 及 break; 的效果</a></li><li><a href="https://blog.csdn.net/lihefei_coder/article/details/76736296">Javascript Array forEach()中无法return和break，代替方法some()与every()</a></li><li><a href="https://medium.com/jass-note/%E5%89%8D%E7%AB%AF%E7%AD%86%E8%A8%98-%E6%97%85%E9%81%8A%E7%B6%B2%E4%B9%8B%E8%A1%8C%E6%94%BF%E5%8D%80%E9%81%B8%E5%96%AE-%E5%88%86%E9%A0%81%E5%8A%9F%E8%83%BD%E5%AF%A6%E4%BD%9C-2d32f731c3ed">【JS】旅遊網之行政區選單、分頁功能實作</a></li><li><a href="https://wcc723.github.io/javascript/2017/06/29/es6-native-array/">JavaScript 陣列處理方法 [filter(), find(), forEach(), map(), every(), some(), reduce()]</a></li><li><a href="https://noob.tw/js-every-some/">JavaScript 陣列中兩個冷門的方法：Every、Some</a></li><li><a href="https://w3c.hexschool.com/blog/a2cb755f">JavaScript reduce 在做什麼？</a></li><li><a href="https://medium.com/unalai/%E8%AA%8D%E8%AD%98-javascript-reduce-940806267bfb">認識 JavaScript Reduce</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/1HmPkkR.jpg&quot;&gt;&lt;br&gt;陣列裡是有順序的集合，每個元素因為有索引。所以可以用迴圈的方法來遍歷陣列裡的元素，來進行有條件的篩選。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班, array" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD-array/"/>
    
  </entry>
  
  <entry>
    <title>實用陣列操作大全-基礎篇</title>
    <link href="https://popeye-ux.github.io/2021/11/16/arrayBasic/"/>
    <id>https://popeye-ux.github.io/2021/11/16/arrayBasic/</id>
    <published>2021-11-16T07:20:04.000Z</published>
    <updated>2022-05-01T16:49:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/hR5Botp.jpg"><br>陣列可以被視為是一種特別的「物件」，和物件一樣，是零到多個屬性的集合，而且沒限制甚麼東西不能放進去，所以陣列裡面可以是字串、數字等基本型別，也可以是物件、函式，甚至是另一個陣列。</p><span id="more"></span><p>而陣列與物件的差別在於，陣列是有順序的集合，能夠透過中括號<code>[]</code>加上索引來存取。也因為這種特性，所以陣列有許多的方法可以使用。</p><p><img src="https://i.imgur.com/wKVr3U7.jpg"><br>圖片來源：codingyuri</p><p>這次就來談談如何運用陣列的基本方法：</p><h2 id="Array-prototype-push"><a href="#Array-prototype-push" class="headerlink" title="Array.prototype.push()"></a>Array.prototype.push()</h2><blockquote><p>使用 <strong>push()</strong> 方法可以在<strong>陣列尾端</strong>新增一個值。<br><strong>push()</strong> 方法回傳的值為<strong>陣列長度</strong>。</p></blockquote><p>這一天有一塊巨大的隕石往地球飛來，超級英雄們緊急集合，要把隕石推出太陽系，但是隕石太大顆，所以又找了驚奇隊長來幫忙。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;美國隊長&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> value = array.<span class="title function_">push</span>(<span class="string">&#x27;驚奇隊長&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array); </span><br><span class="line"><span class="comment">//[&#x27;鋼鐵人&#x27;, &#x27;美國隊長&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;, &#x27;驚奇隊長&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line"><span class="comment">// 5</span></span><br></pre></td></tr></table></figure><p>push() 適用的在類似搶頭香的情境中。</p><h2 id="Array-prototype-unshift"><a href="#Array-prototype-unshift" class="headerlink" title="Array.prototype.unshift()"></a>Array.prototype.unshift()</h2><blockquote><p>使用 <strong>unshift()</strong> 可以在把想要新增的元素插入在<strong>陣列第一個元素</strong>的位置，也就是 index 為 0 的位置。<br><strong>unshift()</strong> 回傳的值也是<strong>陣列長度</strong>。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;美國隊長&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> value = array.<span class="title function_">unshift</span>(<span class="string">&#x27;黑寡婦&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array); </span><br><span class="line"><span class="comment">//[&#x27;黑寡婦&#x27;, &#x27;鋼鐵人&#x27;, &#x27;美國隊長&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">//&#x27;黑寡婦&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line"><span class="comment">// 5</span></span><br></pre></td></tr></table></figure><p>unshift() 則適用於新聞類的排序，越新的新聞排到越前面。</p><h2 id="Array-prototype-pop"><a href="#Array-prototype-pop" class="headerlink" title="Array.prototype.pop()"></a>Array.prototype.pop()</h2><blockquote><p>如果要把陣列尾端的元素刪除，可以使用 pop() 方法。<br>pop() 方法回傳的值為被刪除的元素。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;美國隊長&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> value = array.<span class="title function_">pop</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array); </span><br><span class="line"><span class="comment">//[&#x27;鋼鐵人&#x27;, &#x27;美國隊長&#x27;, &#x27;浩克&#x27;, ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line"><span class="comment">// &#x27;雷神&#x27;</span></span><br></pre></td></tr></table></figure><p>pop 是取自 Popping 這個單字，意思是彈出。不是流行音樂的意思。</p><h2 id="Array-prototype-shift"><a href="#Array-prototype-shift" class="headerlink" title="Array.prototype.shift()"></a>Array.prototype.shift()</h2><blockquote><p>如果要把陣列第一個元素刪除，可以使用 shift() 方法。<br>shift() 方法回傳的值為被刪除的元素。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;美國隊長&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> value = array.<span class="title function_">shift</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array); </span><br><span class="line"><span class="comment">//[&#x27;美國隊長&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;]</span></span><br><span class="line"><span class="comment">//array[0]的鋼鐵人被刪除了</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line"><span class="comment">// &#x27;鋼鐵人&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Array-prototype-splice"><a href="#Array-prototype-splice" class="headerlink" title="Array.prototype.splice"></a>Array.prototype.splice</h2><blockquote><p>splice()可以刪除指定位置的陣列元素，或新增指定位置的陣列元素。<br>回傳一個<strong>新的陣列</strong>，裡面放著<strong>被刪除的元素</strong>。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.<span class="title function_">splice</span>(startIndex[, deleteCount[, item1[, item2[, ...]]]])</span><br></pre></td></tr></table></figure><ol><li>startIndex ：要開始修改的索引位置。</li><li>deleteCount ：要刪除的元素數量(從startIndex位置的原四開始算)。</li><li>item1,item2… ：新增的元素，由startIndex開始新增。這個選項可以選擇性使用。</li></ol><p>來個情境題：這一天復仇者聯盟的超級英雄們舉辦派對，結果不小心混入了兩個正義聯盟的英雄，請問要如何把他們找出來，並且叫一台車把他們裝在一起送回家？</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;超人&#x27;</span>,<span class="string">&#x27;蝙蝠俠&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = array.<span class="title function_">splice</span>(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array);</span><br><span class="line"><span class="comment">//[&#x27;鋼鐵人&#x27;, &#x27;蜘蛛人&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray);</span><br><span class="line"><span class="comment">//[&#x27;超人&#x27;, &#x27;蝙蝠俠&#x27;]</span></span><br></pre></td></tr></table></figure><p>原本由超人與蝙蝠俠占用的名額由’驚奇隊長’跟’緋紅女巫’來代表。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = array.<span class="title function_">splice</span>(<span class="number">2</span>,<span class="number">0</span>,<span class="string">&#x27;驚奇隊長&#x27;</span>,<span class="string">&#x27;緋紅女巫&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array);</span><br><span class="line"><span class="comment">//[&#x27;鋼鐵人&#x27;, &#x27;蜘蛛人&#x27;, &#x27;驚奇隊長&#x27;, &#x27;緋紅女巫&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray);</span><br><span class="line"><span class="comment">//[]回傳空陣列</span></span><br></pre></td></tr></table></figure><h2 id="Array-prototype-sort"><a href="#Array-prototype-sort" class="headerlink" title="Array.prototype.sort()"></a>Array.prototype.sort()</h2><p>MDN上的解釋：</p><blockquote><p>來看一下MDN上關於sort()的解說：<br>sort() 方法會原地（in place）對一個陣列的所有元素進行排序，並回傳此陣列。排序不一定是穩定的（stable）。預設的排序順序是根據字串的 Unicode 編碼位置（code points）而定。</p></blockquote><p>什麼?根據 Unicode 編碼位置（code points）來決定順序，這是甚麼東西?</p><p>來看看MDN上的範例：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> months = [<span class="string">&#x27;March&#x27;</span>, <span class="string">&#x27;Jan&#x27;</span>, <span class="string">&#x27;Feb&#x27;</span>, <span class="string">&#x27;Dec&#x27;</span>];</span><br><span class="line">months.<span class="title function_">sort</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(months);</span><br><span class="line"><span class="comment">// expected output: Array [&quot;Dec&quot;, &quot;Feb&quot;, &quot;Jan&quot;, &quot;March&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">30</span>, <span class="number">4</span>, <span class="number">21</span>, <span class="number">100000</span>];</span><br><span class="line">array1.<span class="title function_">sort</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array1);</span><br><span class="line"><span class="comment">// expected output: Array [1, 100000, 21, 30, 4]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不是由大到小，也不是由小到大，這實在是讓人一頭霧水呀？？？</p><p>MDN上面sort()方法的撰寫規則如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">sort</span>([compareFunction])</span><br></pre></td></tr></table></figure><p>也就是說如果你沒用一個判別大小的函式來做判斷，才會使用Unicode 編碼位置（code points）來決定順序。</p><p>如果你真的像要為數字排大小(當比較的是數字的時候)，可以寫一個函式來判別：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numbers = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line">numbers.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (a &gt; b) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (a &lt; b) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numbers); <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><p>上面的判斷式也就是把陣列元素一一拿來當作a與b兩個參數，傳入判斷式做比較：</p><ul><li>如果回傳的值小於 0，則 a 的索引位置比 b 的小，也就是 a 在 b 前面。</li><li>如果回傳的值大於 0，則 b 的索引位置 比 b 的大，也就是 a 在 b 後面。</li><li>如果等於 0，則 a 與 b 的位置不會改變，但會與陣列其他元素繼續比較。</li></ul><p><img src="https://i.imgur.com/4FVXjkC.png"></p><p>至於是陣列索引小的當a，還是大的當a，則倚賴個瀏覽器廠商的實作。</p><p>compareFunction要更簡潔一些，可以這樣寫：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numbers = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line">numbers.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numbers);</span><br><span class="line"></span><br><span class="line"><span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><blockquote><p>MDN也寫了：由於依賴執行環境的實作，所以並不能保證排序的時間及空間複雜度。</p></blockquote><p>也就是，sort() 這個方法，每家瀏覽器背後運作的原理都不相同。</p><p>像是Chrome瀏覽器，一般是使用快速排序法( Quick Sort )，但是在陣列裡面的元素小於10的時候是使用插入排序法( Insertion Sort)，還使用了二分搜尋法 Binary Search 來優化排序。( 詳細說明可以參考： <a href="https://medium.com/@leokao0726/%E6%B7%BA%E8%AB%87-js-sort-%E5%88%B0%E8%83%8C%E5%BE%8C%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95-1035f5b8cde8">淺談 JS sort() 到背後排序方法</a> )</p><p>我認為 sort() 是可以深入再研究的一個陣列方法，但是身為一個陣列大全，就先點到為止。</p><h2 id="Array-prototype-indexOf"><a href="#Array-prototype-indexOf" class="headerlink" title="Array.prototype.indexOf()"></a>Array.prototype.indexOf()</h2><p>MDN上的解釋：</p><blockquote><p>回傳給定元素於陣列中第一個被找到之索引位置，若不存在於陣列中則回傳 -1。<br>適合用來確認陣列中那個元素是否存在。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array.<span class="title function_">indexOf</span>(searchElement,fromIndex)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>searchElement：要找的元素。</li><li>fromIndex：要從第幾個元素開始找，預設為0。這個參數可以不設。</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>,<span class="string">&#x27;鋼鐵人&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> value = array.<span class="title function_">indexOf</span>(<span class="string">&#x27;浩克&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="keyword">let</span> value1 = array.<span class="title function_">indexOf</span>(<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value1);</span><br><span class="line"><span class="comment">// 4 因為是從 [2] 的浩克開始往後面找。</span></span><br><span class="line"><span class="keyword">let</span> value2 = array.<span class="title function_">indexOf</span>(<span class="string">&#x27;美國隊長&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value2);</span><br><span class="line"><span class="comment">// -1  美國隊長沒有在陣列中</span></span><br></pre></td></tr></table></figure><h2 id="Array-prototype-lastIndexOf"><a href="#Array-prototype-lastIndexOf" class="headerlink" title="Array.prototype.lastIndexOf()"></a>Array.prototype.lastIndexOf()</h2><p>MDN上的解釋：</p><blockquote><p>回傳給定元素於陣列中最後一個被找到之索引，若不存在於陣列中則回傳 -1。<br>搜尋的方向為由陣列尾部向後（即向前）尋找，啟始於 fromIndex。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>,<span class="string">&#x27;鋼鐵人&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> value = array.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;浩克&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="keyword">let</span> value1 = array.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value1);</span><br><span class="line"><span class="comment">// 0 因為是從&#x27;浩克&#x27;往前找，找到的&#x27;鋼鐵人&#x27;是在索引[0] 的位置</span></span><br><span class="line"><span class="keyword">let</span> value2 = array.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;美國隊長&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value2);</span><br><span class="line"><span class="comment">// -1</span></span><br></pre></td></tr></table></figure><h3 id="Array-prototype-prototype-findIndex"><a href="#Array-prototype-prototype-findIndex" class="headerlink" title="Array.prototype.prototype.findIndex()"></a>Array.prototype.prototype.findIndex()</h3><p>MDN上的解釋：</p><blockquote><p>findIndex()方法傳回陣列中滿足測試函式的第一個元素的索引。<br>如果沒找到對應元素就回傳 -1。</p></blockquote><p>findIndex()與indexOf()相似，但是findIndex()可以帶入函式來判斷陣列中是否有滿足函式條件的元素。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;鋼鐵人&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;美國隊長&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;浩克&#x27;</span>,</span><br><span class="line">        <span class="attr">firePower</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">bodyForce</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> isFirePower = <span class="keyword">function</span>(<span class="params">element</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> element.<span class="property">firePower</span> === <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(avengers.<span class="title function_">findIndex</span>(isFirePower))</span><br><span class="line"><span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h2 id="Array-prototype-reverse"><a href="#Array-prototype-reverse" class="headerlink" title="Array.prototype.reverse()"></a>Array.prototype.reverse()</h2><p>MDN上的解釋：</p><blockquote><p>反轉（reverses）一個陣列。陣列中的第一個元素變為最後一個，而最後一個元素則變成第一個。<br>回傳的值為反轉的陣列本身。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = array.<span class="title function_">reverse</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array);</span><br><span class="line"><span class="comment">//[&#x27;雷神&#x27;, &#x27;浩克&#x27;, &#x27;蜘蛛人&#x27;, &#x27;鋼鐵人&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray);</span><br><span class="line"><span class="comment">//[&#x27;雷神&#x27;, &#x27;浩克&#x27;, &#x27;蜘蛛人&#x27;, &#x27;鋼鐵人&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="Array-join"><a href="#Array-join" class="headerlink" title="Array.join"></a>Array.join</h2><blockquote><p>會將陣列（或一個類陣列（array-like）物件）中所有的元素連接、合併成一個字串，並回傳這個字串。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">join</span>([separator])</span><br></pre></td></tr></table></figure><ul><li>separator：用來隔開每個元素的字串，預設是英文逗號 (,) ，如果separator使用空字串的話，合併之後，元素之間不會有任何區隔。</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = array.<span class="title function_">join</span>(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArray);</span><br><span class="line"><span class="comment">//鋼鐵人*蜘蛛人*浩克*雷神</span></span><br></pre></td></tr></table></figure><h2 id="Array-prototype-concat"><a href="#Array-prototype-concat" class="headerlink" title="Array.prototype.concat"></a>Array.prototype.concat</h2><p>MDN上的解釋：</p><blockquote><p>用來合併兩個或多個陣列。<br>不會改變現有的陣列，回傳一個包含呼叫者陣列本身的新陣列。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> new_array = old_array.<span class="title function_">concat</span>(value1[, value2[, ...[, valueN]]])</span><br></pre></td></tr></table></figure><p>範例：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> justice = [<span class="string">&#x27;超人&#x27;</span>,<span class="string">&#x27;蝙蝠俠&#x27;</span>,<span class="string">&#x27;神力女超人&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> avangers = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> justiceAvangers = justice.<span class="title function_">concat</span>(avangers);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(justiceAvangers);</span><br><span class="line"><span class="comment">//[&#x27;超人&#x27;, &#x27;蝙蝠俠&#x27;, &#x27;神力女超人&#x27;, &#x27;蜘蛛人&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;, &#x27;鋼鐵人&#x27;]</span></span><br></pre></td></tr></table></figure><p>也可以陣列合併字串：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newAvengers = avengers.<span class="title function_">concat</span>(<span class="string">&#x27;黑寡婦&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newAvengers);</span><br><span class="line"><span class="comment">//[&#x27;鋼鐵人&#x27;, &#x27;蜘蛛人&#x27;, &#x27;浩克&#x27;, &#x27;雷神&#x27;, &#x27;黑寡婦&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="Array-prototype-slice"><a href="#Array-prototype-slice" class="headerlink" title="Array.prototype.slice"></a>Array.prototype.slice</h2><p>MDN上的解釋：</p><blockquote><p>取出起始索引到結束索引的元素，並回傳由取出元素所組成的新陣列。<br>原有陣列不會被修改</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">slice</span>([begin[, end]])</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>,<span class="string">&#x27;奇異博士&#x27;</span>,<span class="string">&#x27;黑豹&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newAvengers = avengers.<span class="title function_">slice</span>(<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newAvengers);</span><br><span class="line"><span class="comment">//[&#x27;浩克&#x27;, &#x27;雷神&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="Array-prototype-includes"><a href="#Array-prototype-includes" class="headerlink" title="Array.prototype.includes()"></a>Array.prototype.includes()</h2><blockquote><p>includes() 方法會判斷陣列是否包含特定的元素，並以此來回傳 true 或 false。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>,<span class="string">&#x27;奇異博士&#x27;</span>,<span class="string">&#x27;黑豹&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(avengers.<span class="title function_">includes</span>(<span class="string">&#x27;雷神&#x27;</span>)); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(avengers.<span class="title function_">includes</span>(<span class="string">&#x27;黑寡婦&#x27;</span>)); <span class="comment">//false</span></span><br></pre></td></tr></table></figure><h3 id="Array-prototype-toString"><a href="#Array-prototype-toString" class="headerlink" title="Array.prototype.toString()"></a>Array.prototype.toString()</h3><p>MDN上的解釋：</p><blockquote><p>toString() 方法將回傳一個可以表達該陣列及其元素的字串。<br>陣列的每個元素將被轉為字串，並以<code>,</code>連接，同時會回傳該字串。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> avengers = [<span class="string">&#x27;鋼鐵人&#x27;</span>,<span class="string">&#x27;蜘蛛人&#x27;</span>,<span class="string">&#x27;浩克&#x27;</span>,<span class="string">&#x27;雷神&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newAvengers = avengers.<span class="title function_">toString</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newAvengers);</span><br><span class="line"><span class="comment">//&quot;鋼鐵人,蜘蛛人,浩克,雷神&quot;</span></span><br><span class="line"><span class="comment">//每個元素被轉為字串，並以逗號連接。</span></span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p>-<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">MDN : Array.prototype.sort</a><br>-<a href="https://realdennis.medium.com/javascript-%E5%BE%9Earray%E7%9A%84sort%E6%96%B9%E6%B3%95-%E8%81%8A%E5%88%B0%E5%90%84%E5%AE%B6%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9A%84%E5%AF%A6%E4%BD%9C%E7%AE%97%E6%B3%95-c23a335b1b80">從 Array 的 sort 方法，聊到各瀏覽器的實作，沒想到 Chrome 和FireFox 的排序如此不同</a><br>-<a href="https://medium.com/@leokao0726/%E6%B7%BA%E8%AB%87-js-sort-%E5%88%B0%E8%83%8C%E5%BE%8C%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95-1035f5b8cde8">淺談 JS sort() 到背後排序方法</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/hR5Botp.jpg&quot;&gt;&lt;br&gt;陣列可以被視為是一種特別的「物件」，和物件一樣，是零到多個屬性的集合，而且沒限制甚麼東西不能放進去，所以陣列裡面可以是字串、數字等基本型別，也可以是物件、函式，甚至是另一個陣列。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班, array" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD-array/"/>
    
  </entry>
  
  <entry>
    <title>何謂 hoisting(向上提升)？以 let、const、var、function 為例</title>
    <link href="https://popeye-ux.github.io/2021/11/12/hoisting/"/>
    <id>https://popeye-ux.github.io/2021/11/12/hoisting/</id>
    <published>2021-11-12T07:17:51.000Z</published>
    <updated>2022-05-01T16:49:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/oUu94vQ.png"></p><p>向上提升( Hoisting )指的是 JavaScript 允許函式與變數在宣告之前，就可以叫用而不會出錯的一種情況。</p><span id="more"></span><p>以上就是我本來了解的「向上提升( Hoisting )」，我以為自己懂了，寫這篇筆記查資料時，我才發現自己並不懂。</p><p>先來談談變數的「向上提升( Hoisting )」。</p><h2 id="變數的向上提升-hoisting"><a href="#變數的向上提升-hoisting" class="headerlink" title="變數的向上提升(hoisting)"></a>變數的向上提升(hoisting)</h2><p>在 JavaScript 中建立變數包含2個動作：</p><ul><li>宣告：就是給變數一個名稱。</li><li>初始化：給變數一個初始值。</li></ul><p>ES6 的 let 與 const 出現之前，在 JavaScript 中都使用 var 來宣告變數。 程式碼的執行過程中，用var宣告變數可以在前面就先使用，後面才宣告。宣告之前叫用不會出現錯誤，只是會給變數 undefined 的值而已。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(superMan);</span><br><span class="line"><span class="comment">//Uncaught ReferenceError: superMan is not defined</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(wonderWoman);</span><br><span class="line"><span class="comment">//Uncaught ReferenceError: wonderWoman is not defined</span></span><br><span class="line">wonderWoman = <span class="string">&#x27;黛安娜&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(batMan); <span class="comment">//undefined  在程式碼的前面呼叫</span></span><br><span class="line"><span class="keyword">var</span> batMan = <span class="string">&#x27;布魯斯·韋恩&#x27;</span>; <span class="comment">//後面才宣告賦值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在上面的範例中， superMan 沒有被宣告，所以JavaScript在程式碼中找不到這個變數，直接報錯： Uncaught ReferenceError: superMan is not defined。</p><p>wonderWoman 雖然有宣告，但是並沒有使用 var 來宣告，在提前叫用的時候，console.log的結果也是： Uncaught ReferenceError: wonderWoman is not defined。</p><h3 id="var宣告的變數只會提升宣告，不會提升賦值"><a href="#var宣告的變數只會提升宣告，不會提升賦值" class="headerlink" title="var宣告的變數只會提升宣告，不會提升賦值"></a>var宣告的變數只會提升宣告，不會提升賦值</h3><p><strong>使用var來宣告的變數在JavaScript中有特別待遇</strong>，上面的範例用var宣告 superMan 之前，console.log(superMan)並不會報錯，而是出現 ‘undefined’。這是因為JavaScript在執行時發現有沒被宣告的變數，它會先在程式碼中找一找看是否在後面被宣告了，如果有宣告，那就把宣告「提升(Hosting)」到前面。</p><p>要注意的是： var 宣告的變數，宣告的部分會提升，但是賦值的部分不會提升，所以 console.log() 時雖然不會報錯，而是會出現 ‘undefined’，呈現一種沒有給值的狀態。</p><p>那提升的過程中發生了甚麼事呢？以上面的batMan為例：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(batMan); <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">var</span> batMan = <span class="string">&#x27;布魯斯·韋恩&#x27;</span>;</span><br></pre></td></tr></table></figure><p>其實是變成這樣：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> batMan; <span class="comment">//宣告被提前了</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(batMan); <span class="comment">//undefined</span></span><br><span class="line">batMan = <span class="string">&#x27;布魯斯·韋恩&#x27;</span>; <span class="comment">//但是賦值還在後面</span></span><br></pre></td></tr></table></figure><p>var宣告變數的提升(Hoisting)其實就是把宣告與賦值拆成兩個部分，宣告提到前面執行，賦值則還在後面本來的位置上。</p><p>but…在《<a href="https://blog.techbridge.cc/2018/11/10/javascript-hoisting/">我知道你懂 hoisting，可是你了解到多深？</a>》看到兩個範例，我把它改寫一下，來增強自己的記憶，先看這個：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> batMan = <span class="string">&#x27;布魯斯·韋恩&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> batMan;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(batMan); <span class="comment">//布魯斯·韋恩</span></span><br></pre></td></tr></table></figure><p>嗯，結果不是 ‘undefined’ 喔，而是 ‘布魯斯·韋恩’！<br>上面那個例子，還是可以切分為「宣告」與「賦值」這兩部分：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> batMan;</span><br><span class="line"><span class="keyword">var</span> batMan;</span><br><span class="line">batMan = <span class="string">&#x27;布魯斯·韋恩&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(batMan); <span class="comment">//布魯斯·韋恩</span></span><br></pre></td></tr></table></figure><p>再來看這個範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">batManWeapon</span>(<span class="params">arm</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arm);</span><br><span class="line">  <span class="keyword">var</span> arm = <span class="string">&#x27;蝙蝠摩托&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">batManWeapon</span>(<span class="string">&#x27;蝙蝠車&#x27;</span>) <span class="comment">// &#x27;蝙蝠車&#x27;</span></span><br></pre></td></tr></table></figure><p>答案是蝙蝠車喔！</p><p>這個過程是這樣的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">batManWeapon</span>(<span class="params">arm</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> arm = <span class="string">&#x27;蝙蝠車&#x27;</span>; <span class="comment">//batManWeapon(&#x27;蝙蝠車&#x27;)呼叫函式，帶入的參數。</span></span><br><span class="line">    <span class="keyword">var</span> arm;  <span class="comment">//變數提升</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arm)</span><br><span class="line">    arm = <span class="string">&#x27;蝙蝠摩托&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">batManWeapon</span>(<span class="string">&#x27;蝙蝠車&#x27;</span>) <span class="comment">// &#x27;蝙蝠車&#x27;</span></span><br></pre></td></tr></table></figure><p>這是變數提升(Hosting)需要特別注意的地方。</p><h3 id="let與const宣告的變數有被提升的待遇嗎"><a href="#let與const宣告的變數有被提升的待遇嗎" class="headerlink" title="let與const宣告的變數有被提升的待遇嗎?"></a>let與const宣告的變數有被提升的待遇嗎?</h3><p>我們來看看用let與const宣告的變數是否會有「向上提升」的待遇：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(superMan); <span class="comment">//Uncaught ReferenceError: batMan is not defined</span></span><br><span class="line"><span class="keyword">let</span> superMan = <span class="string">&#x27;克拉克&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(batMan);</span><br><span class="line"><span class="keyword">const</span> batMan = <span class="string">&#x27;布魯斯.偉恩&#x27;</span> <span class="comment">//Uncaught ReferenceError: batMan is not defined</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>console.log的結果都是 “Uncaught ReferenceError: batMan is not defined”,這樣我們是否可以說用 let 與 const 宣告的變數沒有「向上提升」的待遇？</p><p>再來看一下這個範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> superMan = <span class="string">&#x27;克拉克&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">superHero</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(superMan);     </span><br><span class="line">&#125;</span><br><span class="line">superHero() <span class="comment">//&#x27;克拉克&#x27;</span></span><br></pre></td></tr></table></figure><p>superHero()函式的作用域中沒有宣告superMan，所以函式外的全域環境去找這個變數，找到 let superMan &#x3D; ‘克拉克’ ，就把這個同名的變數捉進函式內使用。</p><p>那如果題目改成這樣呢？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> superMan = <span class="string">&#x27;克拉克&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">superHero</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(superMan); </span><br><span class="line">    <span class="keyword">let</span> superMan = <span class="string">&#x27;攝影記者&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">superHero() <span class="comment">//Uncaught ReferenceError: Cannot access &#x27;superMan&#x27; before initialization</span></span><br></pre></td></tr></table></figure><p>這一題出現紅字：意思是 superMan 這個變數在初始化之前，無法使用。</p><p>這就有一個問題：如果 superHero 函式內的 superMan 變數沒被提升，那應該會去捉函式外部的  superMan &#x3D; ‘克拉克’ 這個變數，而不是跑出 Uncaught ReferenceError: Cannot access ‘superMan’ before initialization 這樣的紅字結果。</p><p>所以JavaScript在執行的時候，一定也有在函式內部找，找到在 console.log 後面有宣告 superMan這個變數，既然作用域裡面有宣告，就不去外面找，所以就給你報錯的結果：Uncaught ReferenceError: Cannot access ‘superMan’ before initialization。</p><p>差別只在 用var宣告的變數「提升」時會被賦予 ‘undefined’，但是用 let 與 const 宣告的變數「提升」時卻是紅字報錯，讓程式中斷執行不下去?</p><h3 id="暫時死區Temporal-Dead-Zone"><a href="#暫時死區Temporal-Dead-Zone" class="headerlink" title="暫時死區Temporal Dead Zone"></a>暫時死區Temporal Dead Zone</h3><p>let宣告的變數在尚未賦值之前，不像var一樣會以undefined初始化，所以let與const宣告的變數從宣告到初始化之間，將會無法操作，這段時間稱為「暫時死區」(Temporal Dead Zone)。</p><p>const因為宣告時，必須給值，且之後不能再改變，所以沒有TDZ的問題。</p><h2 id="函式的向上提升"><a href="#函式的向上提升" class="headerlink" title="函式的向上提升"></a>函式的向上提升</h2><p>函式可以分為兩種：</p><ul><li>以「函式宣告」定義的函式</li><li>函式運算式</li></ul><p>其中以「函式宣告」定義的函式，可以在函式宣告前就使用，這就稱為「函式提升」。隨叫隨到，不管身在何方，真的是 JavaScript 裡面的超級英雄。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">batMan</span>();<span class="comment">//布魯斯‧韋恩</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">batMan</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;布魯斯‧韋恩&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是，函式運算式在宣告前呼叫函式就會報錯。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">batMan</span>(); <span class="comment">//Uncaught ReferenceError: batMan is not defined</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> batMan = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;布魯斯‧韋恩&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而且函式的提升，不像 var 宣告變數那樣用 ‘undefined’ 暫時充代，而是整個內容都被提升。</p><h2 id="為什麼函式需要「向上提升」呢？"><a href="#為什麼函式需要「向上提升」呢？" class="headerlink" title="為什麼函式需要「向上提升」呢？"></a>為什麼函式需要「向上提升」呢？</h2><p>之前對於「提升」( Hoisting )這個題目只是硬背了起來，直到這次寫筆記與作 BMI KATA 的練習才恍然大悟。</p><p>這是因為<strong>方便函式之間彼此呼叫使用</strong>，在前面宣告的函式可以去叫後面才宣告的函式來使用。如果沒有「提升」( Hosisting )的話，函式的使用會疊床架屋，十分冗長。</p><p>最後來個情境題，假設噗攏共星球的外星人來攻打地球，需要呼叫超級英雄們來幫忙，當然是不管在哪裡呼叫，都能把超級英雄叫來，是最方便的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">crisis ();</span><br><span class="line"><span class="comment">//Superman</span></span><br><span class="line"><span class="comment">//Wonder woman</span></span><br><span class="line"><span class="comment">//Batman</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callSuperMan</span> ()&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Superman&#x27;</span>);</span><br><span class="line">    <span class="title function_">callwonderWoman</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">crisis</span> ()&#123;</span><br><span class="line">    callSuperMan ();</span><br><span class="line">    callBatMan ();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callBatMan</span> ()&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Batman&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callwonderWoman</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Wonder woman&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>這樣不管函式在前面還是後面都可以叫的到，還可以在函式內呼叫別的函式。</p><p>地球的危機就解除了！</p><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><ul><li>var 宣告的變數只會提升宣告，不會提升賦值，所以提升時，值會是 ‘undefined’。</li><li>let 與 const 宣告的變數，如果在宣告前使用，會報出錯誤。</li><li>只有「函式宣告」享有「向上提升」的待遇。</li><li>函式的提升是整個內容都被提升，可以在宣告之前就呼叫使用。</li><li>函式的提升是為了提供函式之間互相呼叫的便利性。</li></ul><p>最後，養成好習慣，變數與函式應該先定義好再呼叫，避免誤用「 hoisting 」這項好設計！</p><p>參考資料：</p><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting">MDN 提升(Hoisting)</a>)</li><li><a href="https://blog.techbridge.cc/2018/11/10/javascript-hoisting/">我知道你懂 hoisting，可是你了解到多深？</a></li><li><a href="https://wcc723.github.io/javascript/2017/12/16/javascript-hoisting/">鐵人賽：JavaScript Function 與 Hoisting</a></li><li><a href="https://yakimhsu.com/project/project_w17_advancedJS_02_Hoisting.html">[第十七週] JavaScript 進階：從 EC 來理解 Hoisting</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10213660">【JavaScript 核心】函式提升</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/oUu94vQ.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;向上提升( Hoisting )指的是 JavaScript 允許函式與變數在宣告之前，就可以叫用而不會出錯的一種情況。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班, hoisting" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD-hoisting/"/>
    
  </entry>
  
  <entry>
    <title>何謂物件取值？在什麼時機上會用到？</title>
    <link href="https://popeye-ux.github.io/2021/11/10/objectKeyAndValue/"/>
    <id>https://popeye-ux.github.io/2021/11/10/objectKeyAndValue/</id>
    <published>2021-11-10T07:12:50.000Z</published>
    <updated>2022-05-01T16:49:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/WOYKnde.jpg"><br>先來談談何謂物件？</p><p>在JavaScript中，所有基本型別( Primitive )以外的變數值，都是物件( Object )。</p><span id="more"></span><p>物件是 0 到多組屬性的集合。屬性是一對鍵( Key )與值( Value )的關聯，又稱 Key-Value pair。屬性的值可以是基本型別的字串、數字、布林…也可以是陣列、函式甚至是另一個物件。</p><p>當然物件也可以是瀏覽器或是執行環境是先定義好的，例如全域物件 window 或是用來取得日期的 Date 物件等等。</p><p>那要怎麼建立一個物件呢？</p><p>一般會使用「物件實字」的方式，或是透過 new 關鍵字建立物件。</p><h2 id="物件實字-Object-literal"><a href="#物件實字-Object-literal" class="headerlink" title="物件實字( Object literal)"></a>物件實字( Object literal)</h2><p>所謂的「物件實字」就是使用<code>&#123;&#125;</code>來建立一個新的物件，並指定屬性給物件。屬性之間以逗號( , )隔開，如果屬性名稱( key )有使用到符號字串則必須用 <code>&#39;&#39;</code>( 或是 <code>&quot;&quot;</code> )將 key 包起來。</p><p>這也是JSON格式的核心語法。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用「物件實字」建立一個郭靖(guoJing)的物件</span></span><br><span class="line"><span class="keyword">let</span> guoJing = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;郭靖&#x27;</span>,</span><br><span class="line"><span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line"><span class="attr">kungFu</span>: [<span class="string">&#x27;降龍十八掌&#x27;</span>,<span class="string">&#x27;空明拳&#x27;</span>],</span><br><span class="line"><span class="attr">useKungFu</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.kungFu[<span class="number">0</span>]&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/o3VPe4H.png"></p><p>看看上面那張圖，鍵與值的配對關係就很清楚了。</p><p>在這裡小結一下：</p><ul><li>key： 就是屬性的名稱，任何字串都可以作為 key，</li><li>value： 在 value 中可以放入任何型別的值，當然也包括物件。</li></ul><h2 id="透過-new-關鍵字建立物件"><a href="#透過-new-關鍵字建立物件" class="headerlink" title="透過 new 關鍵字建立物件"></a>透過 new 關鍵字建立物件</h2><p>另一種方法則是透過 new 關鍵字建立物件，再把屬性一一指定給物件。範例如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoJing = <span class="keyword">new</span> <span class="title class_">Object</span>(); <span class="comment">//建立物件</span></span><br><span class="line">guoJing.<span class="property">name</span> = <span class="string">&#x27;郭靖&#x27;</span>;  <span class="comment">//指定屬性</span></span><br><span class="line">guoJing.<span class="property">gender</span> = <span class="string">&#x27;male&#x27;</span>;</span><br><span class="line">guoJing.<span class="property">kungFu</span> = [<span class="string">&#x27;降龍十八掌&#x27;</span>,<span class="string">&#x27;空明拳&#x27;</span>],</span><br><span class="line">guoJing.<span class="property">useKungFu</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.kungFu[<span class="number">0</span>]&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>說到這裡，你應該對物件的結構十分了解了。所謂的「物件取值」，也就是要把物件的「值」給取出來，那要怎麼做呢？可以使用這兩種方法：</p><ul><li>使用「.」(點)來存取屬性的值</li><li>透過<code> [ ]</code> (中括號)來存取屬性的值</li></ul><h2 id="使用「-」-點-來存取屬性的值"><a href="#使用「-」-點-來存取屬性的值" class="headerlink" title="使用「.」(點)來存取屬性的值"></a>使用「.」(點)來存取屬性的值</h2><p>透過「<code>.</code>」(點)來存取屬性的值是最單純方便的方式。語法如下：</p><p><strong>物件名稱 .屬性名稱</strong></p><p>以前面的範例來說明：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoJing = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;郭靖&#x27;</span>,</span><br><span class="line"><span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line"><span class="attr">kungFu</span>: [<span class="string">&#x27;降龍十八掌&#x27;</span>,<span class="string">&#x27;空明拳&#x27;</span>],</span><br><span class="line"><span class="attr">useKungFu</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.kungFu[<span class="number">0</span>]&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing.<span class="property">gender</span>); <span class="comment">//&#x27;male&#x27;</span></span><br><span class="line">guoJing.<span class="title function_">useKungFu</span>(); <span class="comment">// 警告視窗跳出&#x27;降龍十八掌&#x27;</span></span><br></pre></td></tr></table></figure><p>透過「.」(點)來存取屬性的值雖然方便直觀，但是也有它的限制，例如當物件的屬性名稱是數字或是特殊字元的時候，會出現錯誤，這時另一種存取物件屬性的方法就可以派上用場了。</p><h2 id="透過-中括號-來存取屬性的值"><a href="#透過-中括號-來存取屬性的值" class="headerlink" title="透過 [ ] (中括號)來存取屬性的值"></a>透過 <code>[ ]</code> (中括號)來存取屬性的值</h2><p>物件的屬性也可以使用<code> [ ]</code> 來存取，<code> [ ]</code> 裡面可以放字串也可以帶入變數 ，語法如下：</p><p><strong>物件<code>[&quot;屬性名稱&quot;]</code></strong></p><p>先來看一下範例：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoJing = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;郭靖&#x27;</span>,</span><br><span class="line"><span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line"><span class="attr">kungFu</span>: [<span class="string">&#x27;降龍十八掌&#x27;</span>,<span class="string">&#x27;空明拳&#x27;</span>],</span><br><span class="line"><span class="attr">useKungFu</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.kungFu[<span class="number">0</span>]&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing[<span class="string">&#x27;gender&#x27;</span>]); <span class="comment">//&#x27;male&#x27;</span></span><br><span class="line">guoJing[<span class="string">&#x27;useKungFu&#x27;</span>](); <span class="comment">// 警告視窗跳出&#x27;降龍十八掌&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>乍看之下 <code>[ ]</code> 跟用點 . 沒有兩樣，讓我們改一下題目，把 kungFu 這個陣列拆成 01kungFu 跟 02kungFu 兩個屬性。屬性名稱的開頭使用數字的話，程式會報錯。前面有提到只要是字串都可以當作屬性名稱，所以在這裡把 01kungFu 跟 02kungFu 這兩個屬性名稱加上 <code>&#39;&#39;</code>( <code>&quot;&quot;</code> ) ,讓它們變成字串，這時就不能使用 點( <code>.</code> )來存取屬性了，而要改用可以放入字串的 <code>[ ]</code> 來取值。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoJing = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;郭靖&#x27;</span>,</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;01kungFu&#x27;</span>: <span class="string">&#x27;降龍十八掌&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;02kungFu&#x27;</span>: <span class="string">&#x27;空明拳&#x27;</span>,</span><br><span class="line">  <span class="attr">useKungFu</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>[<span class="string">&#x27;01kungFu&#x27;</span>]&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing[<span class="string">&quot;01kungFu&quot;</span>]);<span class="comment">//&quot;降龍十八掌&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing[<span class="string">&quot;02kungFu&quot;</span>]);<span class="comment">//&quot;空明拳&quot;</span></span><br></pre></td></tr></table></figure><p>使用 物件 <code>[&quot;屬性名稱&quot;]</code> 的方式就可以正常抓到屬性的值了。</p><p>前面提到中括號 <code>[ ]</code> 裡面可以放入變數，所以我們可以把屬性名稱賦值給變數，用 物件 <code>[&quot;變數&quot;]</code> 的方法來取得屬性的值。</p><p>讓我們再用上面的例子做一些變化：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoJing = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;郭靖&#x27;</span>,</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;01kungFu&#x27;</span>: <span class="string">&#x27;降龍十八掌&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;02kungFu&#x27;</span>: <span class="string">&#x27;空明拳&#x27;</span>,</span><br><span class="line">  <span class="attr">useKungFu</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>[<span class="string">&#x27;01kungFu&#x27;</span>]&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> sex = <span class="string">&quot;gender&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing.<span class="property">sex</span>);<span class="comment">//undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing.<span class="property">gender</span>);<span class="comment">//&quot;male&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing[sex]);<span class="comment">//&quot;male&quot;</span></span><br></pre></td></tr></table></figure><p>sex 這個變數雖然存著 “ gender “ 這個值，但是和 guoJing 這個物件並非指向相同的記憶體空間，所以取不到 guoJing.gender 的值，直接報出了 “ undefined “。</p><p>而 guoJing<code>[sex]</code> 這裡sex變數存的是”gender”字串，所以 guoJing<code>[sex]</code> 等於 guoJing<code>[&quot;gender&quot;]</code>，所以就成功取到 “ male “ 的值了。</p><h2 id="新增物件屬性"><a href="#新增物件屬性" class="headerlink" title="新增物件屬性"></a>新增物件屬性</h2><p>如何新增物件的屬性呢？可以直接使用( . )也可以用 <code>[ ]</code> 的方式。</p><ul><li>物件.屬性名稱 &#x3D; 值;</li><li>物件<code>[ &#39;屬性名稱&#39; ]</code> &#x3D; 值;</li></ul><p>讓我們看看範例：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoJing = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;郭靖&#x27;</span>,</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;01kungFu&#x27;</span>: <span class="string">&#x27;降龍十八掌&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;02kungFu&#x27;</span>: <span class="string">&#x27;空明拳&#x27;</span>,</span><br><span class="line">  <span class="attr">useKungFu</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>[<span class="string">&#x27;01kungFu&#x27;</span>]&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">guoJing.<span class="property">wife</span> = <span class="string">&#x27;黃蓉&#x27;</span>;</span><br><span class="line">guoJing[<span class="string">&#x27;pet&#x27;</span>] = <span class="string">&#x27;白雕&#x27;</span>;</span><br><span class="line">guoJing[<span class="string">&#x27;03kungFu&#x27;</span>] = <span class="string">&#x27;九陰真經&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing);</span><br></pre></td></tr></table></figure><h2 id="刪除物件屬性"><a href="#刪除物件屬性" class="headerlink" title="刪除物件屬性"></a>刪除物件屬性</h2><p>要刪除物件的屬性可以使用 delete 指令來刪除。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoJing = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;郭靖&#x27;</span>,</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;01kungFu&#x27;</span>: <span class="string">&#x27;降龍十八掌&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;02kungFu&#x27;</span>: <span class="string">&#x27;空明拳&#x27;</span>,</span><br><span class="line">  pet : <span class="string">&#x27;白雕&#x27;</span>,</span><br><span class="line">  <span class="attr">useKungFu</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>[<span class="string">&#x27;01kungFu&#x27;</span>]&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> guoJing.<span class="property">pet</span>;</span><br><span class="line"><span class="keyword">delete</span> guoJing[<span class="string">&#x27;02kungFu&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJing<span class="string">&#x27;);</span></span><br></pre></td></tr></table></figure><p>參考資料：</p><ul><li><a href="https://ithelp.ithome.com.tw/articles/10193605">JavaScript - 物件 與 屬性</a></li><li><a href="https://medium.com/@yining1204/javascript-%E6%A0%B8%E5%BF%83%E7%AF%87-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-chap-30-%E7%89%A9%E4%BB%B6%E5%8F%96%E5%80%BC-%E6%96%B0%E5%A2%9E%E8%88%87%E5%88%AA%E9%99%A4-b7a3a37a6bd7">JavaScript 核心篇 學習筆記: Chap.30 — 物件取值，新增與刪除</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/WOYKnde.jpg&quot;&gt;&lt;br&gt;先來談談何謂物件？&lt;/p&gt;
&lt;p&gt;在JavaScript中，所有基本型別( Primitive )以外的變數值，都是物件( Object )。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班, 物件" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD-%E7%89%A9%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>何謂運算式( Expression )與陳述式( Statement )？</title>
    <link href="https://popeye-ux.github.io/2021/11/05/expressionAndStatement/"/>
    <id>https://popeye-ux.github.io/2021/11/05/expressionAndStatement/</id>
    <published>2021-11-05T07:06:33.000Z</published>
    <updated>2022-05-01T16:49:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/uHRcIGn.jpg"><br>電腦程式是由一堆命令電腦執行的「指示」所構成。就像人類日常溝通的語言，不同的語言有不同的文法結構；在不同的程式語言，指示電腦執行命令的語法也不相同，程式語言的文法稱為 syntax ，一個程式語言要能運作一定要按照規定的 syntax 來寫。</p><span id="more"></span><p>JavaScript的語法可以分成兩種：</p><ul><li>陳述式( Statement )</li><li>表達式( Expression )，也被稱為表示式或運算式。</li></ul><h2 id="陳述式"><a href="#陳述式" class="headerlink" title="陳述式"></a>陳述式</h2><p>MDN 對於陳述式( Statement )的定義：</p><blockquote><p><strong>陳述式與宣告</strong><br>JavaScript 應用程式由<strong>適當的陳述式</strong>組成。一個單一的陳述式可以跨用好幾行。 多個陳述式也可以藉由分號分隔來寫在同一行。 這不是一個關鍵字，而是一群關鍵字。</p></blockquote><p>這段字每個字都看得懂，但是組在一起卻像是文言文，讓人看好幾次，還是一頭霧水。</p><p>讓我吃掉哆啦A夢的翻譯年糕來解釋一下，陳述式就是由一些程式碼所組成的指示，最重要的是<strong>陳述式執行後，不會回傳結果</strong>。像是變數的宣告．．．</p><p>簡單來說，就是陳述式(Statement)所傳的訊息，都被瀏覽器「已讀不回」。</p><p>陳述式常見的類型： </p><ul><li>宣告(var、let及const)</li><li>流程控制：如if…else….、switch …等等</li><li>迴圈</li><li>函式(function)</li><li>區塊(block)</li><li>其他</li></ul><p>我們繼續用《射鵰英雄歪傳》來模擬陳述式的運作：</p><p>有一天歐陽克想要約黃蓉吃飯，古代可能要飛鴿傳書，現代則只要傳 Line，但是結果都是一樣的，鴿子被射下來烤乳鴿，傳 Line 被蓉妹「已讀不回」。</p><p><img src="https://i.imgur.com/1eHJJIy.png"></p><p>讓我們把上面的對話寫成JavaScript的程式碼，在瀏覽器的console視窗測試一下，看看會有甚麼結果：</p><p><img src="https://i.imgur.com/M8iU3Vm.png"></p><p>以上的那些程式碼都是陳述式(Statement)，都對瀏覽器做了某些指示，但是執行完畢，沒有回傳任何數值。所以上面那張圖裡面說了一大串，但是圖的最下面只跑出了undefined。</p><p>不過最後的if(…)那邊有貓膩喔？這點我在運算式的部分再深入解釋。</p><h2 id="運算式-Expression"><a href="#運算式-Expression" class="headerlink" title="運算式(Expression)"></a><strong>運算式</strong>(Expression)</h2><p>Expression ，中文有人翻譯成表達式、表示式或運算式，MDN 的定義如下：</p><blockquote><p><strong>運算式</strong><br>運算式是任何一段可以取得一個值的程式碼。<br>任何合乎語法的運算式都能取得一個值，概念上， 有兩種不同型態的運算式: 有副作用的 (例如: 將一個值指定給一個變數) 以及只為了取得值而解析的運算式。</p></blockquote><p>上面那段話最重要的地方就是<strong>「任何一段可以取得一個值的程式碼」，運算式(Expression)執行後一定會回傳一個值</strong>。這也是<strong>運算式</strong>( Expression )與陳述式( Statement )最大的不同。</p><p>在這裡繼續用《射鵰英雄歪傳》來模擬運算式的運作(筆者一定要這樣亂入嗎???)：</p><p>運算式就像是郭靖傳Line約黃蓉吃飯一樣，戀情正火熱燒著，就算是吃滷肉飯，黃蓉也會秒回答應！！不會「已讀不回」！</p><p><img src="https://i.imgur.com/4uzoCDM.png"></p><p>在這裡也讓我們用console來模擬一下上面那一串對話：</p><p><img src="https://i.imgur.com/7e9P8tF.png"></p><p>比較需要注意的是if(…)的(…)，需要布林值 true 、 false 來判斷條件會不會成立，所以(…)裡面會放運算式( Expression )，但 if (…){…} 這段程式碼本身是陳述句，不會回傳任何值，也無法將它賦值給變數。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (condition)&#123;</span><br><span class="line">   <span class="comment">//statement1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">   statement2</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>由此可知運算式可能會混在陳述式之中，例如變數宣告本身式陳述式，但是 ＝ 號右側的部分卻屬於運算式。</p><p>要注意的是，我們這一段 if (…) 述句，執行之後雖然在 console 視窗下出現結果，不過那不是回傳一個值(存在記憶體中)，而是執行了 console.log() 印出的指令，印在 console 視窗上，這一個小小的坑在我剛學 JavaScript 時困惑了一陣子。</p><p>而且該放陳述式的地方是不允許放運算式的，例如 if (…) 的 (…) 裡面如果是陳述式，if述句就不知道該怎麼執行了。所以在一個會產生值的地方，是不能放入陳述式( Statement )。</p><p><img src="https://i.imgur.com/bNE5NxC.png"></p><p>最後整理一下重點：</p><p>JavaScript 的語法可以分為兩種，分別是陳述式( Statement )與運算式( Expression )，兩者的區分如下：</p><ul><li>陳述式( Statement )會執行一個指令，產生一個動作，但是不會回傳一個「值」。(已讀不回)。</li><li>運算式( Expression )會回傳一個值。</li><li>陳述式( Statement )中可以放入運算式來進行判斷，但是預期要放入運算式( Expression )的地方，也就是預期會產生一個值的地方，不能放入陳述式。</li></ul><p>我是初踏入前端領域的老學徒，如果有寫錯的地方還請大家包涵與指正，謝謝大家！</p><p>參考資料</p><p><a href="https://andyyou.github.io/2016/03/06/expressions-vs-statements-in-js/">重讀 Axel 的 Javascript 中的 Expression vs Statement 一文</a></p><p><a href="https://ithelp.ithome.com.tw/articles/10192146?sc=pt">Day16　函式陳述句與函式表示式</a></p><p><a href="https://www.w3schools.com/js/js_statements.asp">https://www.w3schools.com/js/js_statements.asp</a></p><p><a href="https://wcc723.github.io/development/2020/09/17/js-expression/">JavaScript 表達式觀念及運用 - JS Expression</a></p><p><a href="https://medium.com/@yining1204/javascript-%E6%A0%B8%E5%BF%83%E7%AF%87-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-chap-17-%E9%99%B3%E8%BF%B0%E5%BC%8F%E8%88%87%E8%A1%A8%E9%81%94%E5%BC%8F-c51f4b395180">JavaScript 核心篇 學習筆記: Chap.17 — 陳述式與表達式</a></p><p><a href="https://ithelp.ithome.com.tw/articles/10218937">JS 原力覺醒 Day07 - 陳述式 表達式</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/uHRcIGn.jpg&quot;&gt;&lt;br&gt;電腦程式是由一堆命令電腦執行的「指示」所構成。就像人類日常溝通的語言，不同的語言有不同的文法結構；在不同的程式語言，指示電腦執行命令的語法也不相同，程式語言的文法稱為 syntax ，一個程式語言要能運作一定要按照規定的 syntax 來寫。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript,JS直播班" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>何謂強制轉型、以及如何作到轉換型別？</title>
    <link href="https://popeye-ux.github.io/2021/10/28/typeConversions/"/>
    <id>https://popeye-ux.github.io/2021/10/28/typeConversions/</id>
    <published>2021-10-28T06:57:20.000Z</published>
    <updated>2022-05-01T16:49:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/80LCkl5.jpg"><br>我們都知道JavaScript的基本型別有以下幾種：</p><span id="more"></span><ol><li>String ：字串，由一連串的字符 (characters) 組成。</li><li>Number ：數值，為 floating point number。</li><li>Boolean ：true 或 false。</li><li>undefined ：表示現在還沒有給值。</li><li>null ：不知道之前有沒有值，但是現在沒有值。</li><li>Symbol ：ES6 出現的新型別。</li></ol><p>JavaScript 的型別不在於變數本身，而在於變數被賦予的值。</p><p>如果以上那些你都知道，那你該來看看JavaScript變態的部分—「強制轉型」( <strong>coercion</strong> )。</p><p>斯斯有兩種，「強制轉型」也有兩種：</p><ul><li>隱含的強制轉型 — <strong>implicit coercion</strong></li><li>明確的強制傳型（explicit coercion）</li></ul><h2 id="隱含的強制轉型-—-implicit-coercion"><a href="#隱含的強制轉型-—-implicit-coercion" class="headerlink" title="隱含的強制轉型 — implicit coercion"></a>隱含的強制轉型 — <strong>implicit coercion</strong></h2><p>剛剛提到 JavaScript 的型別不在於變數本身，而在於<strong>變數被賦予的值</strong>。</p><p>JavaScript 在運算的時候，如果看到兩個不同型別的值，就會自動判斷，把值轉換為相同型別，再做運算。很親切(變態)吧!!??</p><p>不多說，讓我們看一下例子，比較容易進入狀況：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&quot;1&quot;</span>;      <span class="comment">//字串</span></span><br><span class="line">a = a + <span class="number">2</span>;        <span class="comment">//&#x27;12&#x27;， a為字串&quot;1&quot;，數字2與字串相加，被轉型為字串&quot;2&quot;</span></span><br><span class="line">a = a*<span class="number">2</span>           <span class="comment">//24 ， 在乘法的時候，字串&quot;12&quot;與2相乘，字串被轉型為數值，得出的結果是數值 12</span></span><br><span class="line">a = a + <span class="literal">true</span>      <span class="comment">//25， 布林值遇到數值，被轉為數字1，相加後變成25</span></span><br><span class="line">a = a * <span class="literal">null</span>      <span class="comment">//0 ， null遇到數值被轉為0，數值與0相乘變成0</span></span><br><span class="line">a = a / <span class="literal">undefined</span> <span class="comment">//NaN， undefined無法再被轉型為數字</span></span><br></pre></td></tr></table></figure><p>以上這些「我變我變我變變變」的情形就是 JavaScript 變數的「強制轉型」，而且是 JavaScript 親切的、自動的、在背後運作的、<strong>「隱含的強制轉型」（ implicit coercion ）</strong>。一下變字串，一下有變成數字、一下變成布林值…比孫悟空72變還厲害。</p><p>這種「隱含的轉型」（ implicit coercion ）基本上可以轉成三種型別：</p><ul><li>自動轉換為布林值( ToBoolean )</li><li>自動轉換為數值( ToNumber )</li><li>自動轉換為字串( ToString )</li></ul><h3 id="四則運算時的強制轉型"><a href="#四則運算時的強制轉型" class="headerlink" title="四則運算時的強制轉型"></a>四則運算時的強制轉型</h3><p>JavaScript在做四則運算的時候跟小學課本教的一樣，由左而右「先乘除後加減」。</p><p>其中以加法（＋）最需要注意！</p><p>如果是數值的運算，那沒有轉型的問題。「字串」的相加也沒有轉型的問題。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span> + <span class="number">2</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);  <span class="comment">//3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> y = <span class="string">&#x27;歐陽鋒是&#x27;</span> + <span class="string">&#x27;一隻癩哈蟆&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(y);  <span class="comment">//歐陽鋒是一隻癩哈蟆</span></span><br></pre></td></tr></table></figure><p><em>只有在不同型別的狀況下才有轉型的問題：</em></p><ul><li>當加號 + 兩側有一個是字串的情形下，會將「非字串」的那一邊「自動轉型」為字串，再將兩個字串連接在一起。如果另一方為 number 、 boolean 、 object 的情況下， number 、 boolean 、 object 會去叫用它們的** .toString 「原型方法」**，把自己變成字串，再去和另一個字串組合。</li><li>當一邊是數字，一邊是 undefined 的時候， undefined 會被試著轉為數字，變成 NaN ，任何數字與 NaN 相加都是 NaN 。</li><li>當一邊是數字，加號另一邊是 null 的時候， null 會被轉為數字 0 。</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//數字與字串相加</span></span><br><span class="line"><span class="number">77</span> + <span class="string">&#x27;49&#x27;</span>         <span class="comment">//&#x27;7749&#x27;</span></span><br><span class="line"><span class="number">77</span> + <span class="string">&#x27;四十九&#x27;</span>      <span class="comment">//&#x27;77四十九&#x27;</span></span><br><span class="line"><span class="comment">//字串與字串相加</span></span><br><span class="line"><span class="string">&#x27;七七&#x27;</span> + <span class="string">&#x27;四十九&#x27;</span>  <span class="comment">//&#x27;七七四十九&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="number">77</span> + &#123;&#125;           <span class="comment">//&#x27;77[object object]&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//當數字要跟undefined相加的時候，udefined會被嘗試轉為數字，也就是NaN，還記得NaN的型別是number嗎？</span></span><br><span class="line"><span class="number">77</span> + unfined      <span class="comment">//NaN</span></span><br><span class="line"><span class="string">&#x27;七七&#x27;</span> + unfined   <span class="comment">//&#x27;七七undefined&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//當數字要與null相加時，null會被轉成數字 0 ;</span></span><br><span class="line"><span class="number">77</span> + <span class="literal">null</span>          <span class="comment">//77</span></span><br><span class="line"><span class="string">&#x27;七七&#x27;</span> + <span class="literal">null</span>       <span class="comment">//77null</span></span><br></pre></td></tr></table></figure><p>而如果是減乘除法（ － ＊ ／ ）的情況，除了數值以外的其他基本型別都會透過 Number() 方法轉為數字。物件則在乘除的時候會透過 Number() 方法，轉為數字，在減法時透過 valueOf() 方法轉為數字。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">49</span> - <span class="string">&#x27;36&#x27;</span>   <span class="comment">//13</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字串會被轉為數字，也就是NaN</span></span><br><span class="line"><span class="number">49</span> - <span class="string">&#x27;abc&#x27;</span> <span class="comment">//NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//布林值的true，會被轉行為數字 1</span></span><br><span class="line"><span class="number">49</span> - <span class="literal">true</span>  <span class="comment">//48</span></span><br><span class="line"><span class="comment">//布林值的false，會被轉行為數字 0</span></span><br><span class="line"><span class="number">49</span> - <span class="literal">false</span>  <span class="comment">//49</span></span><br><span class="line"></span><br><span class="line"><span class="number">49</span> - <span class="literal">undefined</span>  <span class="comment">//NaN</span></span><br><span class="line"><span class="comment">//null會轉為數字0</span></span><br><span class="line"><span class="number">49</span> - <span class="literal">null</span>       <span class="comment">//49</span></span><br><span class="line"><span class="number">49</span> - &#123;&#125;   　　　<span class="comment">//NaN</span></span><br><span class="line"><span class="number">49</span> * <span class="string">&#x27;10&#x27;</span>       <span class="comment">//490</span></span><br><span class="line"><span class="number">49</span> *  <span class="string">&#x27;四十九&#x27;</span>   <span class="comment">//NaN</span></span><br><span class="line"><span class="number">49</span> * <span class="literal">true</span>       <span class="comment">// 49</span></span><br><span class="line"><span class="number">49</span> * <span class="literal">false</span>      <span class="comment">//0</span></span><br><span class="line"><span class="number">49</span> * &#123;&#125;         <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure><p>下面附上變數在四則運算時的「自動轉型」規則：</p><table><thead><tr><th>四則運算</th><th align="left">數字</th><th align="left">基本型別非數字</th><th align="left">物件</th></tr></thead><tbody><tr><td>減法</td><td align="left">正常運算</td><td align="left">Number()方法轉為數字</td><td align="left">透過valueOf()轉為數字</td></tr><tr><td>乘法</td><td align="left">正常運算</td><td align="left">Number()方法轉為數字</td><td align="left">Number()方法轉為數字</td></tr><tr><td>除法</td><td align="left">正常運算</td><td align="left">Number()方法轉為數字</td><td align="left">Number()方法轉為數字</td></tr><tr><td>加法</td><td align="left">正常運算</td><td align="left">如果是number、boolean透過toString()方法轉為字串，null或undefined透過String()轉為字串</td><td align="left">toString()轉為字串</td></tr></tbody></table><h3 id="比較運算子的強制轉型"><a href="#比較運算子的強制轉型" class="headerlink" title="比較運算子的強制轉型"></a>比較運算子的強制轉型</h3><p>比較運算子用來比較兩側的數值，比較之後得到布林值 true 或 false。</p><p>一個等號 &#x3D;，我們知道是「指定、賦值」的意思。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">49</span>;</span><br></pre></td></tr></table></figure><p>在JavaScript中， <code>==</code> 是相等的意思，而 <code>===</code> 是全等的意思。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">49</span>;   <span class="comment">//數字</span></span><br><span class="line"><span class="keyword">var</span> y = <span class="string">&#x27;49&#x27;</span>; <span class="comment">//字串</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x == y);</span><br><span class="line"><span class="comment">//true，因為 == 在比較兩側的變數是否相等的時候，會自動幫變數轉型。</span></span><br><span class="line"></span><br><span class="line"><span class="literal">true</span> == <span class="string">&#x27;1&#x27;</span>;   <span class="comment">//true</span></span><br><span class="line"><span class="literal">false</span> == <span class="string">&#x27;0&#x27;</span>;   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="literal">true</span> === <span class="string">&#x27;1&#x27;</span>;   <span class="comment">//false</span></span><br><span class="line"><span class="literal">false</span> === <span class="string">&#x27;0&#x27;</span>;  <span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>使用 <code>==</code> 相等的時候，會自動替兩側的變數轉型。</p><p>當使用 <code>===</code> 全等的時候，不會替變數自動轉型，是比較嚴謹的模式，也是比較推薦使用的方法。</p><p>比較特別的是，NaN不等於NaN，不管是 <code>==</code>  還是 <code>===</code>，都是一樣 NaN 不等於 NaN 。</p><p>&#x3D;&#x3D;的自動轉型規則：</p><ul><li>當遇到「字串」與「數字」做比較的時候，字串會透過 Number() 嘗試轉為數字，再進行比較。</li><li>如果比較的一方為布林值，則 true 會轉為 1 ， false 會轉為 0 。</li><li>當<code>==</code> 的一側為物件型別，另一側為基本型別，物件型別會透過 valueOf() ，轉為對應的基本型別進行比較。</li></ul><p>不等於<code>!=</code> 與 <code>!==</code></p><p><code>!=</code> 與「! &#x3D;&#x3D;」兩者都是不等於，但是 <code>!=</code> 會替變數做自動轉型，而 <code>!==</code> 不會替變數自動轉型，推薦使用 <code>!==</code> 。</p><h3 id="大於＞與小於＜的強制轉型"><a href="#大於＞與小於＜的強制轉型" class="headerlink" title="大於＞與小於＜的強制轉型"></a>大於＞與小於＜的強制轉型</h3><p>我有看到一個數字比大小的有趣例子，借來筆記一下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> &lt; <span class="number">2</span> &lt; <span class="number">3</span>); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span> &lt; <span class="number">2</span> &lt; <span class="number">1</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>天哪！怎麼會是這樣的結果！ 3 &lt; 2 &lt; 1 的布林值竟然是 true ．．．天要塌了！</p><p>其實是因為 ＜ 是由左向右( left to right )去做比較，下面來解釋一下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> &lt; <span class="number">2</span> &lt; <span class="number">3</span>);</span><br><span class="line"><span class="number">1</span>&lt;<span class="number">2</span> <span class="comment">//true</span></span><br><span class="line"><span class="literal">true</span> &lt; <span class="number">3</span> <span class="comment">//true轉為數字1，1&lt;3，結果為true。</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span> &lt; <span class="number">2</span> &lt; <span class="number">1</span>); </span><br><span class="line"><span class="number">3</span> &lt; <span class="number">2</span> <span class="comment">//false</span></span><br><span class="line"><span class="literal">false</span> &lt; <span class="number">1</span> <span class="comment">// false轉為數字0，0&lt;1，所以結果為true</span></span><br></pre></td></tr></table></figure><p>所以才會得出 console.log( 3 &lt; 2 &lt; 1 );會變成 true 的結果。</p><p><img src="https://i.imgur.com/EMhtQsq.png"></p><h3 id="Boolean的強制傳型"><a href="#Boolean的強制傳型" class="headerlink" title="Boolean的強制傳型"></a>Boolean的強制傳型</h3><p>邏輯運算子( Logical Operator )有 <code>AND &amp;&amp;</code> 、 <code>OR ||</code> 、<code>NOT !</code> 三種。運算子兩側的值經過 ToBoolean 轉換後會得到一個布林值，再由邏輯運算子比較後傳回其中一個值。</p><p><code>&amp;&amp;</code> 以及 <code>||</code> 進行判斷時，會對左邊的數值進行檢查，如果原本是布林值，就進行後續判斷。如果不是，則透過 ToBoolean 轉換為 true 或 false 。</p><ul><li>AND &amp;&amp; ：(條件&#x2F;運算式 A ) &amp;&amp; (條件&#x2F;運算式 B )，如果兩側的值都為 true ，得到 true 的結果；如果其中一方為 false ，則得到 false 。<br>如果第一個值轉換為true，則回傳第二個值，否則回傳第一個值。</li><li>OR || ：(條件&#x2F;運算式A) || (條件&#x2F;運算式B)，兩側的值只要有一側為 true ，就得到 true 的結果；如果兩側都為 false ，才得到 false 。<br>如果第一個值轉換為true，則回傳第一個值，否則回傳第二個值。</li><li>NOT ! ： true 的結果透過 ! 轉換會得到 false ，而 false 的結果會變成 true。</li></ul><p>那些經過ToBoolean轉換後會得到true的狀況太多，而會得到false的值只有以下五種：</p><ul><li>undefined</li><li>Null</li><li>+0、-0</li><li>NaN</li><li>空字串””或’’</li></ul><p>其他的值都會轉為true。</p><h2 id="明確的強制傳型（explicit-coercion）"><a href="#明確的強制傳型（explicit-coercion）" class="headerlink" title="明確的強制傳型（explicit coercion）"></a>明確的強制傳型（explicit coercion）</h2><p>也就是透過JavaScript提供的函式來進行變數型別轉換，例如：</p><ul><li>轉換為數值型別： Number() 、 parseInt() 、 parseFloat()</li><li>轉換為字串型別： toString() 、 String()</li><li>轉換為布林型別： Boolean()</li></ul><h3 id="Number-、parseInt-、parseFloat"><a href="#Number-、parseInt-、parseFloat" class="headerlink" title="Number()、parseInt()、parseFloat()"></a>Number()、parseInt()、parseFloat()</h3><p>Number()可以將值「嘗試轉型」為「數值型別」，但要並非每種物件都可以順利轉成 number 型別，如果轉型失敗就會變成 NaN (非數值的數值)！</p><p>parseInt(str [, radix]) 函式能將輸入的字串轉成整數，第二個參數 radix 代表使用哪種進位制轉換。</p><p>它會忽略前後空白，在遇到字元被無法解析時，會忽略那個字元與後面的所有字元，停止解析，並回傳目前為止的結果。</p><p>如果第一個字元就無法被解析，會回傳 NaN。</p><p>parseFloat(str)能將字串轉換為以十進位表示的浮點數。</p><p>來看一下範例：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Number</span>(<span class="string">&#x27;123&#x27;</span>);        <span class="comment">//123</span></span><br><span class="line"><span class="title class_">Number</span>(<span class="string">&#x27;華山論劍&#x27;</span>);   <span class="comment">//NaN</span></span><br><span class="line"><span class="title class_">Number</span>(<span class="string">&#x27;9陰真經&#x27;</span>);    <span class="comment">//NaN</span></span><br><span class="line"><span class="title class_">Number</span>(<span class="literal">null</span>);         <span class="comment">//0</span></span><br><span class="line"><span class="title class_">Number</span>(<span class="literal">true</span>)          <span class="comment">//1</span></span><br><span class="line"><span class="title class_">Number</span>([]);           <span class="comment">//0</span></span><br><span class="line"><span class="title class_">Number</span>([<span class="number">1</span>]);          <span class="comment">//1</span></span><br><span class="line"><span class="title class_">Number</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]);      <span class="comment">//NaN</span></span><br><span class="line"><span class="title class_">Number</span>(&#123;&#125;);           <span class="comment">//NaN</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&#x27;9陰真經&#x27;</span>);  <span class="comment">//9</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&#x27;九陰真經&#x27;</span>); <span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">101010</span>,<span class="number">2</span>);   <span class="comment">//42</span></span><br><span class="line"><span class="built_in">parseFloat</span>(<span class="string">&#x27;3.1416&#x27;</span>)  <span class="comment">//3.1416</span></span><br></pre></td></tr></table></figure><h3 id="toString-、String"><a href="#toString-、String" class="headerlink" title=".toString()、String()"></a>.toString()、String()</h3><p>String() 與 .toString() 都可以將值轉換為字串型別，差別在於 .toString() 在收到 null 、 undefined 和數字時會報錯。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">String</span>(<span class="number">123</span>)          <span class="comment">//&#x27;123&#x27;</span></span><br><span class="line"><span class="title class_">String</span>(<span class="literal">null</span>)         <span class="comment">//&#x27;null&#x27;</span></span><br><span class="line"><span class="title class_">String</span>(<span class="string">&#x27;undefined&#x27;</span>)  <span class="comment">//&#x27;undefined&#x27;</span></span><br><span class="line"><span class="title class_">String</span>(<span class="literal">true</span>)         <span class="comment">//&#x27;true&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="literal">true</span>.<span class="title function_">toString</span>()      <span class="comment">//&#x27;true&#x27;</span></span><br><span class="line"><span class="number">123.</span><span class="title function_">toString</span>()</span><br><span class="line"><span class="comment">//Uncaught SyntaxError: Invalid or unexpected token</span></span><br><span class="line"><span class="literal">null</span>.<span class="title function_">toString</span>()</span><br><span class="line"><span class="comment">//Uncaught TypeError: Cannot read properties of null (reading &#x27;toString&#x27;)</span></span><br><span class="line">    </span><br><span class="line"><span class="literal">undefined</span>.<span class="title function_">toString</span>()</span><br><span class="line"><span class="comment">//Uncaught TypeError: Cannot read properties of undefined (reading &#x27;toString&#x27;)</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean()"></a>Boolean()</h3><p>Boolean() 可以用來將其他的資料型態轉型成布林值型態。還記得前面提過幾種會變成 false 的值嗎?</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Boolean</span>(<span class="number">100</span>)       <span class="comment">//true</span></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="string">&#x27;100&#x27;</span>)     <span class="comment">//true</span></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="string">&#x27;&#x27;</span>)        <span class="comment">//false</span></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="literal">false</span>)     <span class="comment">//false</span></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="literal">undefined</span>) <span class="comment">//false</span></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="literal">null</span>)      <span class="comment">//false</span></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="string">&#x27;&quot;&quot;&#x27;</span>)      <span class="comment">//true</span></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="string">&#x27;false&#x27;</span>)   <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>本來以為這個題目很好寫…..結果寫得一點都不輕鬆，也找不到方法寫得很有趣。幾乎每個知識點都有再深入研究的餘地，就像《浪人劍客》裡面老人對宮本武藏說的：「技是無限的，卻有鑽研的餘地！」</p><p>重點整理一下，如果可以掌握一些概念，之後還可以再仔細琢磨：</p><p>強制轉型分為兩種：</p><ul><li>隱含的強制轉型：就是 JavaScript 在運算的過程中，依照它的規則在背地裡把值的型別轉換成其他類的型別。<ul><li>四則運算中加法如果遇到「字串」的轉型最需要留意，其他的減乘除都會試圖轉換成數字來處理。</li><li>使用「＝＝＝」相等的時候，會自動替兩側的變數轉型。當使用「＝＝＝」全等的時候，不會替變數自動轉型，建議使用「＝＝＝」來進行比較。</li><li>在布林值的轉型部分，請記得： undefined 、 Null 、 +0 、 -0 、 NaN 、空字串都會轉換成 false。</li></ul></li><li>明顯的強制轉型：透過 JavaScript 提供的函式來進行變數型別轉換。<ul><li>轉換為數值型別： Number() 、 parseInt() 、 parseFloat()</li><li>轉換為字串型別： toString() 、 String()</li><li>轉換為布林型別： Boolean()</li></ul></li></ul><p>我是初踏入前端領域的老學徒，如果有寫錯的地方還請大家包涵與指正，謝謝大家！</p><p>參考資料</p><ul><li><p><a href="https://cythilya.github.io/2018/10/15/coercion/">你懂 JavaScript 嗎？#8 強制轉型（Coercion）</a></p></li><li><p><a href="https://medium.com/stuarthsu/javascript-%E5%85%A8%E6%94%BB%E7%95%A5-%E5%85%8B%E6%9C%8D-js-%E7%9A%84%E5%A5%87%E6%80%AA%E9%83%A8%E5%88%86-cf44d08ffc0">JavaScript 全攻略：克服 JS 的奇怪部分</a></p></li><li><p><a href="https://www.itread01.com/content/1546084624.html">Javascript型別轉換的技巧</a></p></li><li><p><a href="https://www.uj5u.com/qiye/254374.html">JavaScript資料型別轉換</a></p></li><li><p><a href="https://jimmywei01.github.io/2019/05/28/JS-%E7%B4%80%E9%8C%842-%E5%8C%85%E8%A3%B9%E7%89%A9%E4%BB%B6%E3%80%81%E8%87%AA%E5%8B%95%E8%BD%89%E5%9E%8B/">https://jimmywei01.github.io/2019/05/28/JS-紀錄2-包裹物件、自動轉型/</a></p></li><li><p><a href="https://medium.com/unalai/%E8%AA%8D%E8%AD%98-parseint-parsefloat-%E8%88%87-number-%E8%BD%89%E6%8F%9B%E6%88%90%E6%95%B8%E5%AD%97%E7%9A%84%E4%B8%89%E7%A8%AE%E6%96%B9%E6%B3%95-276640aedb4e">認識 parseInt、parseFloat 與 Number 轉換成數字的三種方法</a></p></li><li><p><a href="https://blog.miniasp.com/post/2020/02/21/JavaScript-Numbers-Deep-Dive">前端工程研究：關於 JavaScript 中 Number 型別的常見地雷與建議作法</a></p></li><li><p><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/254123/">淺談JS中String()與 .toString()的區別</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/80LCkl5.jpg&quot;&gt;&lt;br&gt;我們都知道JavaScript的基本型別有以下幾種：&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>if else 與 switch 的使用時機</title>
    <link href="https://popeye-ux.github.io/2021/10/27/ifElseAndSwitch/"/>
    <id>https://popeye-ux.github.io/2021/10/27/ifElseAndSwitch/</id>
    <published>2021-10-27T06:44:54.000Z</published>
    <updated>2022-05-01T16:49:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/Kz9NhXd.jpg"></p><p>日常生活中充滿了各式各樣的邏輯判斷：「如果」怎樣，就去做某件事，「否則」就去做另外一件事。</p><p>「如果降雨機率超過30%，就帶傘！」每天早上出門要做的判斷。</p><p>「如果肚子餓了，就吃香蕉！」這是猴子也會的事情！</p><span id="more"></span><p>而上帝也教你怎麼做判斷，古早的聖經就說了：</p><p>「如果有人打你的右臉，連左臉也轉過來由他打！」我的臉好腫呀！</p><p><img src="https://i.imgur.com/Jr0NGg7.jpg"></p><h2 id="if…else"><a href="#if…else" class="headerlink" title="if…else"></a>if…else</h2><p>「如果 A 條件成立，就做甲這件事！否則就做乙這件事！」這句話，其實是一個條件式，可以轉換為布林值來判斷：</p><ul><li>「如果A條件成立」就是 A 條件為true的情況。</li><li>「否則…」就是 A 條件為 false 的情況。</li></ul><p>寫成JavaScript就會是這樣子：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (條件式)&#123;</span><br><span class="line"><span class="comment">//條件成立(true)的話，執行&#123; 甲 &#125;區塊內的內容</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//如果條件不成立(false)，執行&#123;  乙 &#125;區塊中的內容</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果條件不只一個，可以使用 else…if 來新增條件。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (條件式 <span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">//條件1成立(true)的話，執行&#123; 甲 &#125;區塊內的內容</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (條件式 <span class="number">2</span>)&#123;</span><br><span class="line"><span class="comment">//條件2成立(true)的話，執行&#123; 乙 &#125;區塊內的內容</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (條件式 <span class="number">3</span>)&#123;</span><br><span class="line"><span class="comment">//條件3成立(true)的話，執行&#123; 丙 &#125;區塊內的內容</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//如果上面的條件都不成立(false)，執行&#123; 丁 &#125;區塊中的內容</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/KmopoxF.png"></p><p>補充一點， if 跟 else 在一個邏輯判斷流程中只能使用一次，但是 else if 卻可以使用很多次。</p><p>讓我們繼續請郭靖….他爹來示範「if….else….」的用法：</p><p>話說郭靖他爹郭嘯天與楊康他爹楊鐵心在妻子懷孕的時候就約定，如果孩子生出來都是男生，就結拜為兄弟；如果是一男一女就結為夫妻。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//guoChildSex代表郭家的孩子，yangChildSex代表楊家的孩子，因為孩子未出生，還不知性別。</span></span><br><span class="line"><span class="keyword">let</span> guoChildSex = <span class="string">&#x27;male&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> yangChildSex = <span class="string">&#x27;female&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( guoChildSex === yangChildSex )&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭家孩子與楊家孩子結拜為金蘭&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭家孩子與楊家孩子結為夫妻&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//考慮到多元成家的話，邏輯會更複雜，這個....我們就先停在這裡</span></span><br></pre></td></tr></table></figure><p>這是一個簡單的雙向分歧決策，但是如果是更複雜的情況呢？我們看看下個例子：</p><p>話說在《射鵰英雄傳》中，長春子丘處機在嘉興酒樓和江南七怪比賽喝酒這一段十分精彩。但是七怪有七個人，到底要派誰出去呢？猜拳嗎？</p><p><img src="https://i.imgur.com/wkEmGhs.png"></p><p>讓我們請 JavaScript 來幫我們決定人選吧！</p><p>我想隨機選出 1 到 7 之間的數字，從七個人中選出一個來跟丘處機鬥酒，例如數字等於1就印出「飛天蝙蝠–柯鎮惡出來喝酒」，數字等於2就印出「妙手書生–朱聰出來喝酒」，依此類推。</p><p>Math.random() 會隨機產生 0 到 1 之間的小數。 而 Math.ceil(x) 會將x無條件進位。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Math.random() 會隨機產生 0 到 1 之間的小數。 而 Math.ceil(x) 會將x無條件進位。</span></span><br><span class="line"><span class="keyword">let</span> drinkWineOrder = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(drinkWineOrder===<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;飛天蝙蝠--柯鎮惡出來喝酒&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (drinkWineOrder===<span class="number">2</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;妙手書生--朱聰出來喝酒&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (drinkWineOrder===<span class="number">3</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;馬王神--韓寶駒出來喝酒&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (drinkWineOrder===<span class="number">4</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;南山樵子--南希仁出來喝酒&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (drinkWineOrder===<span class="number">5</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;笑彌陀--張阿生出來喝酒&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (drinkWineOrder===<span class="number">6</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;鬧市俠隱--全金發出來喝酒&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;越女劍--韓小瑩出來喝酒&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>寫了這麼落落長的一段，看得眼都花了，if … else … 跑了7次小括號裡面的條件，也判斷了 7 次，這種邏輯判斷稱之為「多向分歧決策」。</p><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><p>JavaScript 還有另一種的 switch 條件判斷式，比較適合這樣的情況，它的寫法是這樣的：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (expression) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="attr">value1</span>:</span><br><span class="line">        <span class="comment">//當 expression 的值符合 value1</span></span><br><span class="line">        <span class="comment">//要執行的陳述句</span></span><br><span class="line">    [<span class="keyword">break</span>;]</span><br><span class="line">  <span class="keyword">case</span> <span class="attr">value2</span>:</span><br><span class="line">        <span class="comment">//當 expression 的值符合 value2</span></span><br><span class="line">        <span class="comment">//要執行的陳述句</span></span><br><span class="line">    [<span class="keyword">break</span>;]</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">case</span> <span class="attr">valueN</span>:</span><br><span class="line">        <span class="comment">//當 expression 的值符合 valueN</span></span><br><span class="line">        <span class="comment">//要執行的陳述句</span></span><br><span class="line">    [<span class="keyword">break</span>;]</span><br><span class="line">  [<span class="attr">default</span>:</span><br><span class="line">        <span class="comment">//當 expression 的值都不符合上述條件</span></span><br><span class="line">        <span class="comment">//要執行的陳述句</span></span><br><span class="line">    [<span class="keyword">break</span>;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>switch 括號中可以放入「運算式」( switch 語句會先執行指定的 expression ，得到一個值)、「變數」或「值」，然後一一去和 case 後面的值比對，如果兩者相吻合，就得出一個 true 的值，然後執行 true 那個 case 區塊的程式敘述。如果每個 case 都不符合則執行 default 區塊的程式敘述。</strong></p><p>當滿足 case 列出來的條件，執行完程式敘述之後，break 指令會中止流程判斷，不去執行後面的 case 條件判斷。</p><p><img src="https://i.imgur.com/qE12F15.png"></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">7</span>))&#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;飛天蝙蝠--柯鎮惡出來喝酒&#x27;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;妙手書生--朱聰出來喝酒&#x27;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;馬王神--韓寶駒出來喝酒&#x27;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;南山樵子--南希仁出來喝酒&#x27;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;笑彌陀--張阿生出來喝酒&#x27;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;鬧市俠隱--全金發出來喝酒&#x27;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;越女劍--韓小瑩出來喝酒&#x27;</span>);;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="attr">default</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;七個人都喝醉了，認輸！！&#x27;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用 switch 之後，程式碼沒有夾雜一堆()與{}，看起來簡潔、清楚多了。</p><h1 id="if…else-與-switch的差別"><a href="#if…else-與-switch的差別" class="headerlink" title="if…else 與 switch的差別"></a>if…else 與 switch的差別</h1><p>前面簡單介紹了 if…else 與 switch 的語法，現在來看看兩者的差異。</p><h3 id="「範圍取值」適合使用if…else，「確定取值」則使用switch"><a href="#「範圍取值」適合使用if…else，「確定取值」則使用switch" class="headerlink" title="「範圍取值」適合使用if…else，「確定取值」則使用switch"></a>「範圍取值」適合使用if…else，「確定取值」則使用switch</h3><p>如果是「範圍取值」，也就是判斷的示範為區間，適合使用 if… else 語句。</p><p>如果是「確定取值」，也就是判斷的結果有明確的值，則使用 switch 是一個不錯的選擇。</p><p>讓我們看看下面的這個範例：</p><p>郭靖為了與黃蓉約會參加桃花島主黃藥師的考試，依考試成績的範圍，有不一樣的獎賞。</p><p>如果用 if….else if 要這樣寫：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//郭靖參加桃花島的黃藥師的考試，考試成績超過85分可以娶黃蓉，不及格就去白陀山養癩蛤蟆</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> guoScore = <span class="number">87</span>;</span><br><span class="line"><span class="keyword">if</span>(guoScore &gt;= <span class="number">85</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以得到跟黃蓉約會的資格&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(guoScore &lt; <span class="number">85</span> &amp;&amp; guoScore &gt;= <span class="number">70</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以學得黃藥師的一樣功夫&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(guoScore &lt; <span class="number">70</span> &amp;&amp; guoScore &gt;= <span class="number">60</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以桃花島一日遊&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖考試不及格，去白駝山養養癩蛤蟆&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//郭靖可以得到跟黃蓉約會的資格</span></span><br></pre></td></tr></table></figure><p>使用 switch 的寫法，如果原樣照搬 if…else 的寫法的話，會變成這樣：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoScore =<span class="number">87</span>;</span><br><span class="line"><span class="keyword">switch</span>(guoScore)&#123;</span><br><span class="line"><span class="keyword">case</span> (guoScore &gt;= <span class="number">85</span>): <span class="comment">//87 !== true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以得到跟黃蓉約會的資格&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> (guoScore &lt; <span class="number">85</span> &amp;&amp; guoScore &gt;= <span class="number">70</span>); <span class="comment">//87 !== false  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以學得黃藥師的一樣功夫&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> (guoScore &lt; <span class="number">70</span> &amp;&amp; guoScore &gt;= <span class="number">60</span>): <span class="comment">//87 !== false  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以桃花島一日遊&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="attr">default</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖考試不及格，去白駝山養癩蛤蟆&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//郭靖考試不及格，去白陀山養養癩蛤蟆</span></span><br><span class="line"><span class="comment">//switch()小括號帶入的是變數guoScore，會判斷為全部條件都不吻合，直接去執行default區塊。</span></span><br></pre></td></tr></table></figure><p>什麼！明明郭靖考了87分，怎麼還要去白陀山養癩蛤蟆！！！這一定有黑幕！！！</p><p>等等！別急著打我！讓我來解說一下！</p><p>先記得這件事： switch() 括號中的條件跟 case 後面的值比較的結果必須為 true ，才會去執行case 後面的程式碼區塊。</p><p>因為每個 case 括號裡的 guoScore 是去跟外面的 let guoScore &#x3D; 87 比較，比較的結果不是 true 就是 false，其中只有「 case (guoScore &gt;&#x3D; 85) 」為 true ，其他的範圍區間都是false。</p><p>而 switch() 小括號所帶入變數 guoScore 的值為 87 ，去跟每個 case 的布林值比對， 87 不等於true，也不等於false，當然找不到符合的條件，所以就直接去執行所有條件都不成立的 default 區塊。</p><p>如果要讓這個 switch 區塊能夠執行，就要這樣寫：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoScore = <span class="number">87</span>;</span><br><span class="line"><span class="keyword">switch</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> (guoScore &gt;= <span class="number">85</span>): <span class="comment">//true == true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以得到跟黃蓉約會的資格&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> (guoScore &lt; <span class="number">85</span> &amp;&amp; guoScore &gt;= <span class="number">70</span>): <span class="comment">//true !== false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以學得黃藥師的一樣功夫&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> (guoScore &lt; <span class="number">70</span> &amp;&amp; guoScore &gt;= <span class="number">60</span>): <span class="comment">//true !== false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖可以桃花島一日遊&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="attr">default</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖考試不及格，去白駝山養癩蛤蟆&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x27;郭靖可以得到跟黃蓉約會的資格&#x27;</span></span><br></pre></td></tr></table></figure><p>由上面可以看出 switch() 的小括號裡帶入的就不是郭靖的分數 guoScore 了，而是布林值 true ，這時去和 case 後面的布林值比對，才會在「 case (guoScore &lt; 80 &amp;&amp; guoScore &gt;&#x3D; 60) 」得到 true &#x3D;&#x3D;&#x3D; true 相等的結果，進而得到「’郭靖可以得到跟黃蓉約會的資格’」的結果。</p><p>這種情況之下，使用 switch 就不如 if…else if… 直觀了。</p><p>所以在這裡我們得到的重點是：</p><ul><li>「 if…else if … 」適合使用在不同的條件區間的判斷，如果都沒符合條件，則執行「 else 」的程式碼。</li><li>而「switch」適合使用在有明確的「值」的情況下。</li></ul><h2 id="switch-是用嚴謹模式-x3D-x3D-x3D-在比對-case-後面的數值"><a href="#switch-是用嚴謹模式-x3D-x3D-x3D-在比對-case-後面的數值" class="headerlink" title="switch 是用嚴謹模式( &#x3D;&#x3D;&#x3D; )在比對 case 後面的數值"></a>switch 是用嚴謹模式( &#x3D;&#x3D;&#x3D; )在比對 case 後面的數值</h2><p>最後讓我們用情境題來解釋一下這個情形：</p><p>黃藥師對於郭靖考到 87 分非常不爽，於是拿出了三個信封，上面分別寫了”1”、”2”、”3”，要郭靖從裡面挑一個。</p><p>讓我們看一下 if…else if 怎麼寫：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoPick = <span class="string">&quot;3&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(guoPick == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;到東海餵鯊魚！&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (guoPick == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;到南海騎烏龜&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(guoPick == <span class="number">3</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;在桃花島當島主&#x27;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去白駝山養癩蛤蟆&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在桃花島當島主</span></span><br></pre></td></tr></table></figure><p>運氣好！你打我呀！挑到”3”，可以’在桃花島當島主’。</p><p>讓我們看看用 switch 來判斷，會發生甚麼悲劇…</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> guoPick = <span class="string">&quot;3&quot;</span>;</span><br><span class="line"><span class="keyword">switch</span>(guoPick)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;到東海餵鯊魚！&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;到南海騎烏龜&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;在桃花島當島主&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="attr">default</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;去白駝山養癩蛤蟆&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//去白陀山養癩蛤蟆</span></span><br></pre></td></tr></table></figure><p>蛤！為甚麼挑到”3”，還要’去白駝山養癩蛤蟆’！</p><p><img src="https://i.imgur.com/6ugbrVi.png"></p><p>郭靖的拳頭又硬了！</p><p>這是因為switch判斷式是使用嚴格模式，遇到 ‘3’ 這種狀況，會把它當字串處理，所以才會所有  case 條件都不符合，直接去執行 default 區塊。</p><p>講了那麼多，前面說的忘記了沒關係，讓我們重點整理一下， switch 與 if…else 的差別與使用時機：</p><ul><li>if…else 適合「單向決策」與「雙向分歧決策」； switch 適合「多向分歧決策」。</li><li>「範圍取值」適合使用 if…else ；「確定取值」則適合使用 switch 。</li><li>switch 是用嚴謹模式( &#x3D;&#x3D;&#x3D; )在比對 case 後面的數值</li></ul><p>我不是老司機，而是初踏入前端領域的老學徒，如果有寫錯的地方還請大家包涵與指正，謝謝大家！</p><p>參考資料</p><p><a href="https://ithelp.ithome.com.tw/articles/10211561">JavaScript 基礎知識-switch &amp; if else 的判別差異</a></p><p><a href="https://www.javascripttutorial.net/javascript-switch-case/">JavaScript switch case</a></p><p><a href="https://www.fooish.com/javascript/switch-case.html">JavaScript switch 語法</a></p><p><a href="https://ithelp.ithome.com.tw/articles/10210319">Javascript 中 switch 的彈性用法</a></p><p><a href="https://hsiangfeng.github.io/javascript/20200117/3217748743/?fbclid=IwAR099rUd-l2VYJ4eyJmXxgOFQh1O7d2pVqecpGZUEA3z7420mVuPszQWmh8">JavaScript 的 if 跟 switch 效能</a></p><p><a href="https://yuwensaf.github.io/68afa98c/">switch - 程式碼教學</a></p><p><a href="https://javascript.alphacamp.co/condition.html">流程控制 if&#x2F;else 條件判斷</a></p><p><a href="https://iter01.com/195048.html">switch…case &amp;&amp; if…else效率比較和優化</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Kz9NhXd.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;日常生活中充滿了各式各樣的邏輯判斷：「如果」怎樣，就去做某件事，「否則」就去做另外一件事。&lt;/p&gt;
&lt;p&gt;「如果降雨機率超過30%，就帶傘！」每天早上出門要做的判斷。&lt;/p&gt;
&lt;p&gt;「如果肚子餓了，就吃香蕉！」這是猴子也會的事情！&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>null 與 undefined 的差別</title>
    <link href="https://popeye-ux.github.io/2021/10/23/nullUndefined/"/>
    <id>https://popeye-ux.github.io/2021/10/23/nullUndefined/</id>
    <published>2021-10-23T02:34:52.000Z</published>
    <updated>2022-05-01T16:49:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/WIxDLyl.jpg"></p><p>undefined是基本型別之一，指的是「變數目前還沒有給值」，如果宣告一個變數，卻沒有初始化(沒有給值)，那變數的值就預設為undefined。</p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)<span class="comment">//undefined</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Number</span>(<span class="literal">undefined</span>); <span class="comment">//NaN</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>+<span class="literal">undefined</span>); <span class="comment">//NaN</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">typeof</span>(<span class="literal">undefined</span>); <span class="comment">//&#x27;undefined&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="literal">undefined</span>);<span class="comment">//false，在求布林值時會轉成false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>null也是基本型別之一，指的是「不管前500年，還是後500年有沒有值，總之現在沒有值」。</p><p>在指定DOM元素時，如果那個DOM元素不存在，也會回傳null。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> b = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b);<span class="comment">//null</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Number</span>(<span class="literal">null</span>) <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>+<span class="literal">null</span>); <span class="comment">//0,1 + 0 =1</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">typeof</span>(<span class="literal">null</span>) <span class="comment">//&#x27;object&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Boolean</span>(<span class="literal">null</span>) <span class="comment">//false，在求布林值時會轉成false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是要注意的是：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="literal">null</span> == <span class="literal">undefined</span>; <span class="comment">//true，因為在JS中用布林去查詢null跟undefined都是falsy</span></span><br><span class="line"><span class="literal">null</span> === <span class="literal">undefined</span>; <span class="comment">//false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最後的重點整理：</p><h3 id="undefined和null相似處"><a href="#undefined和null相似處" class="headerlink" title="undefined和null相似處:"></a>undefined和null相似處:</h3><ul><li>都没有屬性和方法，也不能額外添加屬性方法</li><li>皆為Falsy Value(Boolean判斷時為false)</li><li>皆為原始型別(Primitive Type)</li></ul><h3 id="undefined和null相異之處："><a href="#undefined和null相異之處：" class="headerlink" title="undefined和null相異之處："></a>undefined和null相異之處：</h3><ul><li><code>typeof null</code> 會回傳 object ; <code>typeof undefined</code> 會回傳 undefined。</li><li>當要取用一個物件的屬性或陣列的元素時，若該屬性&#x2F;元素不存在，回傳undefined。或原本一個函數需要傳入參數，但是調用函數時卻沒有傳入參數，則回傳值將會是undefined。</li><li>在做DOM元素操作時，若要獲取的DOM元素不存在，則會回傳null。</li></ul><p>參考資料</p><ul><li><p><a href="https://www.jstips.co/zh_tw/javascript/differences-between-undefined-and-null/">undefined 和 null 的差別</a></p></li><li><p><a href="https://snh90100.medium.com/javascript%E4%B8%ADundefined%E5%92%8Cnull%E7%9A%84%E5%B7%AE%E5%88%A5-1f48e9be5e02">Javascript中undefined和null的差異</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/WIxDLyl.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;undefined是基本型別之一，指的是「變數目前還沒有給值」，如果宣告一個變數，卻沒有初始化(沒有給值)，那變數的值就預設為undefined。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, JS直播班" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>by reference (傳參考)、by value(傳值)的差別</title>
    <link href="https://popeye-ux.github.io/2021/10/15/byReferenceByValue/"/>
    <id>https://popeye-ux.github.io/2021/10/15/byReferenceByValue/</id>
    <published>2021-10-15T15:35:46.000Z</published>
    <updated>2022-05-01T16:49:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/k3INsPA.jpg"></p><p>在參加鐵人賽的時候，因為這個題目了解的朦朦朧朧、似懂非懂，所以不敢寫這個題目。直到JS直播班聽了老師的解說，才一秒突破盲腸，恍然大悟。</p><span id="more"></span><p>談這個題目之前，先來做一下六角學院JS直播班第一週的周末作業《記憶體接龍》，以了解變數與記憶體儲存位置的關係，這樣對於by reference (傳參考)、by value(傳值)會有更深入的了解。</p><h2 id="第-1-題"><a href="#第-1-題" class="headerlink" title="第 1 題"></a><strong>第 1 題</strong></h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. console.log 的值為？</span></span><br><span class="line"><span class="comment">// 2.出現幾個變數、型別、記憶體空間?</span></span><br><span class="line"><span class="keyword">let</span> a ;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line">a = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"></span><br><span class="line"><span class="comment">//答案1：console.log 的值為 hello</span></span><br><span class="line"><span class="comment">//答案2：1個變數a；3個型別(undefined、number、string)；3個記憶體空間</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>記憶體空間畫圖來表示：<br><img src="https://i.imgur.com/HUjYFXP.jpg"></p><p>備註： let a ;的值為 “ undefined “ ，也會佔記憶體空間。<br>所以答案2應該是： 1 個變數， 3 個型別， 3 個記憶體空間</p><p>助教的回答：let a因為並沒有宣告a的值，所以a會有一個undefined 的值，並且佔了一個記憶體空間，所以這題答案應該是1個變數， 3 個型別（數字、字串、 undefined ）， 3 個記憶體空間。</p><h2 id="第-2-題"><a href="#第-2-題" class="headerlink" title="第 2 題"></a><strong>第 2 題</strong></h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. console.log 值為？</span></span><br><span class="line"><span class="comment">// 2.出現幾個變數、型別、記憶體空間?</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="number">3</span> ;</span><br><span class="line">b=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">let</span> c = <span class="number">4</span>;</span><br><span class="line">b=<span class="number">8</span>;</span><br><span class="line">c=c+b;</span><br><span class="line"><span class="keyword">let</span> d = b+c;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line"></span><br><span class="line"><span class="comment">//答案1：console.log 的值為「Uncaught ReferenceError: e is not defined」</span></span><br><span class="line"><span class="comment">//答案2：3個變數；1個型別(number)；6個記憶體空間</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>記憶體空間畫圖來表示：<br><img src="https://github.com/popeye-ux/ztock/blob/master/JS-live/w1/q2-w2.jpg?raw=true"></p><h2 id="第-3-題"><a href="#第-3-題" class="headerlink" title="第 3 題"></a><strong>第 3 題</strong></h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. console.log 值為？</span></span><br><span class="line"><span class="comment">// 2. 出現幾個變數、型別、記憶體空間?</span></span><br><span class="line"><span class="keyword">let</span> e=<span class="number">0</span>;</span><br><span class="line">e = <span class="number">5</span>;</span><br><span class="line">e = <span class="string">&quot;hello&quot;</span></span><br><span class="line">e = <span class="literal">true</span>;</span><br><span class="line">e = <span class="number">3</span>;</span><br><span class="line">e+=<span class="number">1</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line"></span><br><span class="line"><span class="comment">//答案 1：console.log 的值為 4</span></span><br><span class="line"><span class="comment">//答案 2： 1 個變數； 3 個型別(number、string、boolean)； 7 個記憶體空間</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>記憶體空間畫圖來表示：<br><img src="https://github.com/popeye-ux/ztock/blob/master/JS-live/w1/q3-w3%20-1.jpg?raw=true"></p><p>我們由上面的作業可以發現，不同的變數指向不同的記憶體位置，只要變數重新賦值之後，就會把新的值存到新的記憶體空間之中，舊的值就從記憶體上面清空，而運算過程中的值也會佔到記憶體的空間。</p><p>這就是JS變數與記憶體之間運作的過程。</p><p>還有一個觀念要先記一下， <strong>JS 的變數本身沒有型別，它被賦予的值才有</strong>。</p><p>理解了這些才能進一步來談 by reference (傳參考)、 by value (傳值)的差別。</p><h1 id="by-value-傳值"><a href="#by-value-傳值" class="headerlink" title="by value(傳值)"></a>by value(傳值)</h1><p><em>讓我們繼續來《射鵰英雄歪傳》，郭靖跟黃蓉小倆口結婚後，在大漠開起了寵物店，專門賣汗血寶馬和神雕，因為都是珍稀之物，所以定價都是1000兩黃金。</em></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 設一個汗血寶馬(horsePrice)的變數，給它1000的值</span></span><br><span class="line"><span class="keyword">let</span> horsePrice = <span class="number">1000</span>;</span><br><span class="line"><span class="comment">//設一個神雕(eaglePrice)的變數，也給它1000的值</span></span><br><span class="line"><span class="keyword">let</span> eaglePrice = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(horsePrice === eaglePrice);</span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>我們可以觀察到，在基本型別的時候，不同的變數指向不同的記憶體位置，兩個變數賦予的值一樣，也就是記憶體儲存的值一樣，兩個變數就相等。所以我們可以歸納出，<strong>基本型別變數的比較，我們看的是它被賦予的值，值相等，兩個變數就相等。</strong></p><p><em>繼續來《射鵰英雄歪傳》，有一天楊康來寵物店想買一隻汗血馬，問郭靖多少錢？因為楊康之前買過神雕，郭靖隨口就說：「汗血馬跟神雕一樣的價格！」</em></p><p><em>楊康心想：「老子最近沒錢！」就說：「兄弟！這馬也太貴了！」郭靖說：「蓉妹說不二價，兄弟！聽某嘴大富貴！」於是楊康只好忍痛去跟大漠的高利貸歐陽克借錢買了一匹汗血馬。</em></p><p><em>結果過幾天，成吉斯汗打敗大宛國，擄獲許多汗血寶馬，造成大漠上汗血寶馬的價格大跌價，一匹馬變成300兩黃金。</em></p><p>我們就用 JavaScript 來說說這件事：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//設一個神雕(eaglePrice)的變數，也給它1000的值</span></span><br><span class="line"><span class="keyword">let</span> eaglePrice = <span class="number">1000</span>;</span><br><span class="line"><span class="comment">//郭靖跟楊康說：汗血馬和神雕的價格是一樣的</span></span><br><span class="line"><span class="keyword">let</span> horsePrice = eaglePrice;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eaglePrice); <span class="comment">//1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(horsePrice); <span class="comment">//1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eaglePrice === horsePrice); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//結果成吉思汗擄獲許多汗血馬，造成汗血馬價格大崩壞</span></span><br><span class="line">horsePrice = <span class="number">300</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eaglePrice); <span class="comment">//1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(horsePrice); <span class="comment">//300</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(horsePrice === eaglePrice); <span class="comment">//false</span></span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>楊康哭哭！汗血馬的價格不是跟神雕一樣嗎？</p><p>讓我們用前面畫圖的練習來理解一下JavaScript發生了甚麼事！</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//設一個神雕(eaglePrice)的變數，也給它1000的值</span></span><br><span class="line"><span class="keyword">let</span> eaglePrice = <span class="number">1000</span>;</span><br><span class="line"><span class="comment">//郭靖跟楊康說：汗血馬和神雕的價格是一樣的</span></span><br><span class="line"><span class="keyword">let</span> horsePrice = eaglePrice;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eaglePrice === horsePrice); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><ul><li>宣告一個eaglePrice變數，給它1000的值</li><li>宣告一個horsePrice變數，給它的值是變數eaglePrice。<br><img src="https://github.com/popeye-ux/ztock/blob/master/JS-live/w1/by%20value-1.jpg?raw=true"></li></ul><p>這時發生的事情就是，<strong>horsePrice 去拷貝了 eaglePrice 的值 1000 到自己目前占用的記憶體空間</strong>。前面有提到「<strong>基本型別變數的比較，我們看的是它被賦予的值，值相等，兩個變數就相等</strong>」。</p><p>let horsePrice &#x3D; eaglePrice;<br>這時候eaglePrice &#x3D;&#x3D;&#x3D; horsePrice的布林值為true。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//horsePrice重新賦值為300</span></span><br><span class="line">horsePrice = <span class="number">300</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(horsePrice === eaglePrice); <span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>horsePrice重新賦值為300這個行為指的是，horsePrice去佔用了新的記憶體空間儲存了新的值300，這時horsePrice &#x3D;&#x3D;&#x3D; eaglePrice的布林值就是false。</p><p><img src="https://github.com/popeye-ux/ztock/blob/master/JS-live/w1/byvalue-2.jpg?raw=true"></p><p>汗血馬的價格horsePrice與神雕的價格eaglePrice是各自獨立的，當值相等時，兩個變數才相等，汗血馬價格崩盤的時候，神雕的價格依然不受影響。</p><p>所以我們可以說「基本型別」變數之間的比較，看的是它被賦予的值相不相等，這種現象被稱為「by value(傳值)」。</p><h1 id="by-reference-傳參考"><a href="#by-reference-傳參考" class="headerlink" title="by reference (傳參考)"></a>by reference (傳參考)</h1><p>但是在「物件型別」的比較上，是另外一種情形。</p><p><em>繼續來《射鵰英雄歪傳》，郭靖的寵物店因為生意太好，所以開了分店，分店裡面汗血馬的價格跟總店是一樣的。</em></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mainStore物件儲存總店汗血馬的價格</span></span><br><span class="line"><span class="keyword">let</span> mainStore = &#123;<span class="attr">horsePrice</span>: <span class="number">1000</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> branchStore = mainStore;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mainStore.<span class="property">horsePrice</span>);  <span class="comment">//1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(branchStore.<span class="property">horsePrice</span>);<span class="comment">//1000</span></span><br><span class="line"></span><br><span class="line">branchStore.<span class="property">horsePrice</span> = <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mainStore.<span class="property">horsePrice</span>);  <span class="comment">//300</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(branchStore.<span class="property">horsePrice</span>);<span class="comment">//300</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mainStore === branchStore); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>我們發現當分店汗血馬的價格branchStore.horsePrice被重新賦值為300時，總店的汗血馬的價格也跟著變為300。</p><p>而console.log(mainStore &#x3D;&#x3D;&#x3D; branchStore)的結果為true，我們可已發現mainStore與branchStore指向的是同一個實體。</p><p>我們來看看宣告物件型別變數時，記憶體是如何運作的。</p><p>當我們let mainStore &#x3D; {horsePrice: 1000};其實是把mainStore的參考位置指向記憶體中存放物件的位置。<br><img src="https://github.com/popeye-ux/ztock/blob/master/JS-live/w1/passByReference.jpg?raw=true"></p><p>所以當我們let branchStore &#x3D; mainStore;也是把branchStore變數參考的位置指向mainStore所參考的變數位置，所以當物件horsePrice屬性的值改變的時候，mainStore跟branchStore的值都會跟著變動。<br><img src="https://github.com/popeye-ux/ztock/blob/master/JS-live/w1/passByReference1.jpg?raw=true"></p><p>物件型別是<strong>透過「引用」的方式</strong>在傳遞資料，物件型別的物件的屬性值其實引用的是記憶體儲存資料的參考， 所以我們會說在物件型別的比較是by reference(傳參考)，看這兩個物件是否指向相同的記憶體空間，參考相同的值。</p><p>凡事都有例外，物件的例外讓人特別困惑。</p><p><em>繼續來《射鵰英雄歪傳》，郭靖寵物店生意很好，所以黃蓉也開了一家分店，有一天夫妻倆吵架，黃蓉一氣之下脫離加盟體系，開始削價競爭。</em></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//husbandStore物件儲存郭靖寵物店汗血馬的價格</span></span><br><span class="line"><span class="keyword">let</span> husbandStore = &#123;<span class="attr">horsePrice</span>: <span class="number">1000</span>&#125;;</span><br><span class="line"><span class="comment">//把husbandStore的值指定給wifeStor</span></span><br><span class="line"><span class="keyword">let</span> wifeStore = husbandStore;</span><br><span class="line"><span class="comment">//wifeStore物件重新賦值</span></span><br><span class="line">wifeStore = &#123;<span class="attr">horsePrice</span>: <span class="number">500</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(husbandStore.<span class="property">horsePrice</span>);  <span class="comment">//1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(wifeStore.<span class="property">horsePrice</span>);<span class="comment">//1000</span></span><br><span class="line"></span><br><span class="line">wifeStore.<span class="property">horsePrice</span> = <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(husbandStore.<span class="property">horsePrice</span>);  <span class="comment">//1000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(wifeStore.<span class="property">horsePrice</span>);<span class="comment">//300</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(husbandStore === wifeStore); <span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>在這種情形之下，husbandStore與wifeStore原本是引用相同的參考位置，<strong>但是wifeStore重新賦值之後，則引用新的參考位置</strong>，所以汗血馬價格變動的時候，husbandStore與wifeStore兩者不會連動，因為兩者參考的是不同的物件實體。</p><p>許國政先生認為這種物件型別的比較應該更像是「by sharing」，這有點玄！</p><p>且讓我們引用他在《0 陷阱！0 誤解！8 天重新認識JavaScript！》的一段話作為總結：</p><p>「由於JavaScript的物件類型是可變的(mutable)，當物件更新時，會影響到所有引用這個物件的變數與副本，修改時會變動到原本的參考。但當賦與新值時，卻會產生新的實體參考。」</p><p>參考資料</p><ul><li><p><a href="https://pjchender.blogspot.com/2016/03/javascriptby-referenceby-value.html">談談 JavaScript 中 by reference 和 by value 的重要觀念</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/articles/10191057">重新認識 JavaScript: Day 05 JavaScript 是「傳值」或「傳址」？</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/m/articles/10278982?sc=iThomeR">傳值跟傳參考概念</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/k3INsPA.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;在參加鐵人賽的時候，因為這個題目了解的朦朦朧朧、似懂非懂，所以不敢寫這個題目。直到JS直播班聽了老師的解說，才一秒突破盲腸，恍然大悟。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript,JS直播班" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>var、let、const 的差異</title>
    <link href="https://popeye-ux.github.io/2021/10/09/jsLive-varLetConst/"/>
    <id>https://popeye-ux.github.io/2021/10/09/jsLive-varLetConst/</id>
    <published>2021-10-09T15:25:52.000Z</published>
    <updated>2022-05-01T16:49:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>以下為我今年參加iT邦幫忙鐵人賽寫的文章，原文連結：</p><p><a href="https://ithelp.ithome.com.tw/articles/10259329">【Day2】變數宣告var、let、const的區別</a></p><p>但是老師教我用 var 宣告變數，但我也看到有同學用 let 與 const 宣告變數，這是怎麼一回事呢？</p><span id="more"></span><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建立一個變數郭靖(guoJing)</span></span><br><span class="line"><span class="keyword">var</span> guoJing;</span><br></pre></td></tr></table></figure><p>也可以看到這樣：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建立一個建立一個名為黃蓉(huangRong)的變數，給她&#x27;打狗棒法&#x27;的值</span></span><br><span class="line"><span class="keyword">let</span> huangRongKungFu = <span class="string">&#x27;打狗棒法&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//建立一個洪七公(hongQigong)的常數，給他「北丐」的值</span></span><br><span class="line"><span class="keyword">const</span> hongQigong = <span class="string">&#x27;北丐&#x27;</span>;</span><br></pre></td></tr></table></figure><p>var 、 let 、 const 這三兄弟到底有甚麼差別呢？</p><p>原來除了用var宣告變數之外，在ES6之後，變數區分為變數與常數，透過 var 與 let 宣告「變數」，透過const宣告「常數」。</p><p>var 和 let 最大的區別在於「作用域」不同，這一點我們先放在心上，之後再深入探討。</p><p><strong>在這裡補上let與var作用域的區別：</strong></p><ul><li>var 是以function為作用域。</li><li>let 則是以大括號{}區塊的程式碼為作用的範圍。</li></ul><p>作用域外層的程式捉不到作用域內的宣告的變數，但是作用域內的程式可以捉到外層的變數。</p><p>先來看看var：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建立一個變數郭靖(guoJing)</span></span><br><span class="line"><span class="keyword">var</span> guoJingKungFu;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(guoJingKungFu);</span><br><span class="line"><span class="comment">//未賦值，所以出現的結果為 undefined</span></span><br><span class="line"></span><br><span class="line">guoJingKungFu = <span class="string">&#x27;降龍十八掌&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖使出 &#x27;</span> + guoJingKungFu);</span><br><span class="line"><span class="comment">//結果為&quot;郭靖使出 降龍十八掌&quot;</span></span><br><span class="line"></span><br><span class="line">guoJingKungFu = <span class="string">&#x27;空明拳&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖使出 &#x27;</span> + guoJingKungFu);</span><br><span class="line"><span class="comment">//結果為&quot;郭靖使出 空明拳&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> guoJingKungFu = <span class="string">&#x27;九陰真經&#x27;</span>;</span><br><span class="line"><span class="comment">//再次用var宣告 guoJing = &#x27;九陰真經&#x27;;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;郭靖使出 &#x27;</span> + guoJingKungFu);</span><br><span class="line"><span class="comment">//結果為&quot;郭靖使出 九陰真經&quot;</span></span><br></pre></td></tr></table></figure><p><strong>使用var的時候，同一個變數名稱可以再重新「宣告」，重新賦值。</strong></p><p>再看看使用 <code>let</code> 的狀況：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建立一個建立一個名為黃蓉(huangRong)的變數，給她&#x27;打狗棒法&#x27;的值</span></span><br><span class="line"><span class="keyword">let</span> huangRongKungFu;</span><br><span class="line">huangRongKungFu = <span class="string">&#x27;打狗棒法&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;黃蓉使出 &#x27;</span> + huangRongKungFu);</span><br><span class="line"><span class="comment">//結果為&quot;黃蓉使出 打狗棒法&quot;</span></span><br><span class="line"></span><br><span class="line">huangRongKungFu = <span class="string">&#x27;落英神劍掌&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;黃蓉使出 &#x27;</span> + huangRongKungFu);</span><br><span class="line"><span class="comment">//結果為&quot;黃蓉使出 落英神劍掌&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> huangRongKungFu = <span class="string">&#x27;蘭花拂穴手&#x27;</span>;</span><br><span class="line"><span class="comment">//Uncaught SyntaxError: Identifier &#x27;huangRong&#x27; has already been declared</span></span><br></pre></td></tr></table></figure><p><strong>使用 let 比使用 var 來宣告變數嚴謹，如果宣告時未賦值，並不會以undefined初始化，所以從宣告到初始化這段時間會無法使用，這個時間差稱為「暫時死區」。</strong></p><p><strong>let 能重複賦值，禁止於同個區塊作用域重複宣告</strong>，如果重複宣告會出現：</p><p>「Uncaught SyntaxError: Identifier ‘huangRong’ has already been declared」</p><p>提醒你已經用 let 宣告過這個變數了。</p><p>讓我們來試試 const：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建立一個洪七公(hongQigong)的常數，給他「北丐」的值</span></span><br><span class="line"><span class="keyword">const</span> hongQigong = <span class="string">&#x27;北丐&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;洪七公是 &#x27;</span> + hongQigong);</span><br><span class="line">hongQigong = <span class="string">&#x27;美食家&#x27;</span>;</span><br><span class="line"><span class="comment">//Uncaught TypeError: Assignment to constant variable.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> hongQigong = <span class="string">&#x27;美食家&#x27;</span>;</span><br><span class="line"><span class="comment">//Uncaught SyntaxError: Identifier &#x27;hongQigong&#x27; has already been declared</span></span><br></pre></td></tr></table></figure><p><strong>const 是用來宣告常數，也就是不會變動的常量，所以禁止於同個區塊作用域重複宣告，也不能重新賦值。而且宣告時一定要給值。</strong></p><p>重複宣告會告訴你：</p><p>「Uncaught SyntaxError: Identifier ‘hongQigong’ has already been declared」</p><p>重複賦值則會提醒你：</p><p>「Uncaught TypeError: Assignment to constant(持續的) variable.」</p><p>因為以上這些區別，使用 var 、 let 、 const 來宣告變數的時機與場景有不同的區別，語意上也有明確區分。而沒有經過 var 、 let 與 const 宣告就直接賦值使用的變數會變成全域變數。</p><p>const 有一個例外，就是在宣告物件時，因為物件是 call by reference ，變數參考的是物件存放的位置，當修改物件屬性的時候，不會改變物件參考的記憶體位置，<strong>所以用 const 宣告物件時，其屬性是可以修改的，但是重新賦值則是禁止的。</strong></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul><li><a href="https://totoroliu.medium.com/javascript-var-let-const-%E5%B7%AE%E7%95%B0-e3d930521230">JavaScript: var, let, const 差異</a></li><li><a href="https://askie.today/differences-among-var-let-const/">在 JavaScript 中，Var、Let、Const 的差異？</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10199513">搞懂變數作用域(2)- let 與const</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;以下為我今年參加iT邦幫忙鐵人賽寫的文章，原文連結：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10259329&quot;&gt;【Day2】變數宣告var、let、const的區別&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是老師教我用 var 宣告變數，但我也看到有同學用 let 與 const 宣告變數，這是怎麼一回事呢？&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript,JS直播班" scheme="https://popeye-ux.github.io/tags/JavaScript-JS%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
  </entry>
  
  <entry>
    <title>Day35:最終章：Todo List實作</title>
    <link href="https://popeye-ux.github.io/2021/10/05/21-day35-toDoList/"/>
    <id>https://popeye-ux.github.io/2021/10/05/21-day35-toDoList/</id>
    <published>2021-10-05T01:43:17.000Z</published>
    <updated>2022-04-18T10:44:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/dRSJcBR.jpg"><br>前面提到了物件、陣列、DOM元素的選取、事件監聽，以及最後的localStorage。這些足夠我們用JavaScript做一個小小的網頁程式，來驗證一下之前提到的方法。</p><span id="more"></span><p>這次我們要來做的是Todo List。</p><p>假設金庸先生要邀請武林高手來參加華山論劍，要邀請的人太多了，他記性不好，所以寫了一個小程式來記錄與會者名單。大概是長這個樣子。</p><p><img src="https://i.imgur.com/LEoElce.png"></p><p>然後在來拆解畫面上的功能：</p><p><img src="https://i.imgur.com/PyvGzVc.png"></p><p>我們可已先把上面的的那張圖區分為三種程式區塊：</p><p><img src="https://i.imgur.com/Uycm0YY.png"></p><ul><li>事件：<ul><li>加入邀請名單：點擊，使用者輸入的資料加入「邀請名單」的localStorage，並渲染到畫面</li><li>寄出：將資料從「邀請名單」的localStorage中移除，加入已寄出名單的localStorage，並渲染到畫面</li><li>移除：將資料由「已寄出名單」的localStorage中移除，並渲染到畫面</li></ul></li><li>資料：<ul><li>邀請名單的localStorage資料</li><li>寄出名單的localStorage資料</li></ul></li><li>畫面：將localStorage的資料渲染到網頁</li></ul><p>所以我們就可以開始實作了！</p><p>畫面上的HTML碼如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://imgur.com/uEvCO7p.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150px&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logotext&quot;</span>&gt;</span>TODO LIST<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;addList&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;請輸入與會者姓名&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;send&quot;</span>&gt;</span>新增邀請名單<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>計畫邀請<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;noneNum&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>人<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;finishedItem&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>已邀請<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;doneNum&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>人<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;finishlist&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>進入JavaScript的部分，先把DOM元素選取起來：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定DOM</span></span><br><span class="line"><span class="keyword">let</span> send = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.send&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> list = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> finishList = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;finishlist&#x27;</span>);</span><br></pre></td></tr></table></figure><p>接下來定義資料的部分：</p><ul><li>計畫邀請的名單，要把它變成陣列物件的格式</li><li>已經寄出邀請函的名單，也要轉成陣列物件的格式</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//資料：設定計畫邀請名單「listData」的localStorage資料，轉為陣列物件</span></span><br><span class="line"><span class="keyword">let</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;listData&#x27;</span>)) || [];</span><br><span class="line"></span><br><span class="line"><span class="comment">//資料：設定寄出名單「listFinish」的localStorage資料，轉為陣列物件</span></span><br><span class="line"><span class="keyword">let</span> finishData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;listFinish&#x27;</span>)) || [];</span><br></pre></td></tr></table></figure><p>接下來把事件綁訂到前面指定的DOM元素上。然後更新資料，此時尚未輸入資料，localStorage的key應該還沒建立，所以為空陣列。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//事件綁定，監聽與更新</span></span><br><span class="line">send.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, addData);</span><br><span class="line">list.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, toggleDone);</span><br><span class="line">finishList.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, deleDone);</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新畫面上的資料</span></span><br><span class="line"><span class="title function_">updateList</span>(data);</span><br><span class="line"><span class="title function_">updateFinish</span>(finishData);</span><br></pre></td></tr></table></figure><p>按下「新增邀請名單後」把資料新增到data中，並叫用updateList這個函式，把資料組字串，渲染到畫面中。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按下「新增邀請名單後」，把資料新增到data中，並叫用updateList</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> txt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.text&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (txt.<span class="property">value</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;必須輸入與會者姓名&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> toInvite =</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">content</span>: txt.<span class="property">value</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    data.<span class="title function_">push</span>(toInvite);    </span><br><span class="line">    <span class="title function_">updateList</span>(data);</span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;listData&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">    txt.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新邀請清單</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateList</span>(<span class="params">items</span>) &#123;</span><br><span class="line">    str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> len = items.<span class="property">length</span>; </span><br><span class="line"><span class="comment">//for迴圈組字串   </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; len &gt; i; i++) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(items[i])</span><br><span class="line">        str += <span class="string">`&lt;li&gt;&lt;a href=&quot;#&quot; data-index=<span class="subst">$&#123;i&#125;</span>&gt;移到已邀請&lt;/a&gt;&lt;span&gt;<span class="subst">$&#123;items[i].content&#125;</span>&lt;/span&gt;&lt;/li&gt;`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    list.<span class="property">innerHTML</span> = str;</span><br><span class="line">    <span class="keyword">let</span> noneNum = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.noneNum&#x27;</span>);</span><br><span class="line">    noneNum.<span class="property">textContent</span> = len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按下「移到已邀請」時，執行以下程式區塊：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//將與會者由邀請清單移至邀請函已寄出清單</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">toggleDone</span>(<span class="params">e</span>)&#123;</span><br><span class="line"><span class="comment">//避免事件冒泡</span></span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line"><span class="comment">//如果點選的不是a標籤，那就不往下執行</span></span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">nodeName</span> !== <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> index = e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">index</span>;</span><br><span class="line"><span class="comment">//把點選的資料推送到finishData中</span></span><br><span class="line">    finishData.<span class="title function_">push</span>(data[index]);</span><br><span class="line"><span class="comment">//清除計畫邀請data中的資料</span></span><br><span class="line">    data.<span class="title function_">splice</span>(index,<span class="number">1</span>);</span><br><span class="line"><span class="comment">//更新計畫邀請的名單</span></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;listData&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line"><span class="comment">//渲染網頁</span></span><br><span class="line">    <span class="title function_">updateList</span>(data);</span><br><span class="line"><span class="comment">//更新已寄出邀請函的名單</span></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;listFinish&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(finishData));</span><br><span class="line"><span class="comment">//渲染網頁</span></span><br><span class="line">    <span class="title function_">updateFinish</span>(finishData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後是渲染「已邀請名單」的部分：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新已寄邀請函清單</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateFinish</span>(<span class="params">finishItems</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> mailStr = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> len = finishItems.<span class="property">length</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(finishItems);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(len);</span><br><span class="line"><span class="comment">//for迴圈組字串 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;len; i++)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(finishItems[i]);</span><br><span class="line">        mailStr+= <span class="string">`&lt;li&gt;&lt;a href=&quot;#&quot; data-num=<span class="subst">$&#123;i&#125;</span>&gt;移除&lt;/a&gt;&lt;span&gt;<span class="subst">$&#123;finishItems[i].content&#125;</span>&lt;/span&gt;&lt;/li&gt;`</span></span><br><span class="line">    &#125;</span><br><span class="line">    finishList.<span class="property">innerHTML</span> = mailStr;</span><br><span class="line">    <span class="keyword">var</span> doneNum = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.doneNum&#x27;</span>);</span><br><span class="line">    doneNum.<span class="property">textContent</span> = len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果點選「刪除」，執行以下程式：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//刪除已邀請的貴賓</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">deleDone</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">nodeName</span> !== <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> num = e.<span class="property">target</span>.<span class="property">num</span>;</span><br><span class="line"><span class="comment">//清除計畫邀請data中的資料</span></span><br><span class="line">    finishData.<span class="title function_">splice</span>(num,<span class="number">1</span>);</span><br><span class="line"><span class="comment">//更新已寄出邀請函的名單</span></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;listFinish&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(finishData));</span><br><span class="line"><span class="comment">//渲染到網頁</span></span><br><span class="line">    <span class="title function_">updateFinish</span>(finishData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>來看看我的實作吧！</p><p><a href="https://codepen.io/popeye_ux/pen/KKqbMwq/">https://codepen.io/popeye_ux&#x2F;pen&#x2F;KKqbMwq</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/dRSJcBR.jpg&quot;&gt;&lt;br&gt;前面提到了物件、陣列、DOM元素的選取、事件監聽，以及最後的localStorage。這些足夠我們用JavaScript做一個小小的網頁程式，來驗證一下之前提到的方法。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, 2021iT邦鐵人賽" scheme="https://popeye-ux.github.io/tags/JavaScript-2021iT%E9%82%A6%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day34:好記性的瀏覽器：Localstorage</title>
    <link href="https://popeye-ux.github.io/2021/10/03/21-day34-localstorage/"/>
    <id>https://popeye-ux.github.io/2021/10/03/21-day34-localstorage/</id>
    <published>2021-10-03T01:40:56.000Z</published>
    <updated>2022-04-18T10:42:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/XTZaPTS.jpg"><br>談這個主題之前，我們先來回憶一下日常的場景，你來到桃子購物網站，選了你要的商品往下捲動網頁，結果竟然發現網頁下方秀出你上次來買東西時，看的那幾樣商品，你心中覺得這個網站真貼心，好聰明。</p><span id="more"></span><p>然而，真正貼心、聰明的是你的瀏覽器。這項技術叫做Web Storage，是HTML5之後出來的新技術，網頁可以透過JavaScript把你瀏覽的資料寫入瀏覽器裡儲存，可以儲存的資料容量有5mb大小。</p><p>Web Storage有兩種：</p><ul><li>localStorage：如果沒有清除瀏覽器的話，資料將永久存在瀏覽器中，使用者關掉瀏覽器或分頁，資料仍會存在瀏覽器中，跨瀏覽器分頁也可以使用。</li><li>sessionStorage：使用者關掉瀏覽器或分頁，資料就會被清空。</li></ul><p>如何看到localStorage的資料呢？</p><p>在Chrome瀏覽器按下F12，瀏覽器會分割稱瀏覽畫面跟Dev Tool，在Dev Tool那一邊點開Application分頁，就可以看到localStorage儲存的資料。</p><p><img src="https://i.imgur.com/sT7SlTj.png"></p><p>我們可以觀察到它是以Key - Value pair的方式儲存的，而且是以自存的格式儲存的。</p><p>那要如何存入資料呢？我們可以使用setItem()方法：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(key, value)</span><br><span class="line">sessionStorage.<span class="title function_">setItem</span>(key, value)</span><br></pre></td></tr></table></figure><p>取出資料則是使用getItem()：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(key)</span><br><span class="line">sessionStorage.<span class="title function_">getItem</span>(key)</span><br></pre></td></tr></table></figure><p>讓我們來砍看如何實作：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>報名參加華山論劍<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nameClass&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btnApply&quot;</span> <span class="attr">value</span>=<span class="string">&quot;報名&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btnCheck&quot;</span> <span class="attr">value</span>=<span class="string">&quot;檢查報名狀況&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> apply= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btnApply&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> check=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btnCheck&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">applyTalk</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> str= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.nameClass&#x27;</span>).<span class="property">value</span>;</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;applyName&#x27;</span>,str);</span><br><span class="line">&#125;</span><br><span class="line">apply.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,applyTalk);</span><br><span class="line"></span><br><span class="line">check.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;applyName&#x27;</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">`<span class="subst">$&#123;str&#125;</span>，你已經報名成功！！！`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/klUshTt.png"></p><p>前面有提到localStorage只接受字串(String)的資料，如果存存的資料不是字串，而是陣列或是物件，就會發生問題。</p><p>如何解決這個問題呢？</p><ul><li>再用setItem()儲存資料到localStorage裡面的時候，要先用JSON.stringify()轉為字串。</li><li>而用getItem()從localStorage取出資料時，要用JSON.parse()方法傳換為本來的資料格式。</li></ul><p>讓我們來看一下怎麼做：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> island = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">islandName</span>: <span class="string">&#x27;桃花島&#x27;</span>,</span><br><span class="line">        <span class="attr">owner</span>: <span class="string">&#x27;黃藥師&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> islandStr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(island);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(islandStr);  <span class="comment">//[&#123;&quot;islandName&quot;:&quot;桃花島&quot;,&quot;owner&quot;:&quot;黃藥師&quot;&#125;]</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;islandItem&#x27;</span>,islandStr);</span><br><span class="line"><span class="keyword">var</span> getData = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;islandItem&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> getData);  <span class="comment">//string</span></span><br><span class="line"><span class="keyword">var</span> getDataAry = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(getData);  <span class="comment">//轉換為陣列</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getDataAry); </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/kQPupvC.png"></p><p>這就是localStorage的基本用法。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/XTZaPTS.jpg&quot;&gt;&lt;br&gt;談這個主題之前，我們先來回憶一下日常的場景，你來到桃子購物網站，選了你要的商品往下捲動網頁，結果竟然發現網頁下方秀出你上次來買東西時，看的那幾樣商品，你心中覺得這個網站真貼心，好聰明。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, 2021iT邦鐵人賽" scheme="https://popeye-ux.github.io/tags/JavaScript-2021iT%E9%82%A6%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day33-「this」好奇怪！</title>
    <link href="https://popeye-ux.github.io/2021/10/02/21-day33-thisStrange/"/>
    <id>https://popeye-ux.github.io/2021/10/02/21-day33-thisStrange/</id>
    <published>2021-10-01T17:13:01.000Z</published>
    <updated>2022-04-18T10:48:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/GgnG2jd.jpg"><br>聽前輩說，「this」在JavaScript裡面是一個大坑。</p><span id="more"></span><p>前面有提過「this」在事件監聽中，不考慮事件冒泡的情況下，this就等同是e.target，但是如果是被事件冒泡觸發的this則為e.currentTarget。</p><p>現在來談談「this」在其他地方要注意的事情。</p><p>首先要記住這句話，只要理解這個原則，大部分遇到「this」的狀況都可以輕鬆掌握：</p><p><strong>「this代表的是function執行時所屬的物件，而不是function本身」</strong></p><p>「this」是在函式被呼叫的時候被自動生成的內部物件，this不等於function，隨著呼叫函示的物件不同，「this」所指向的值也不同。</p><p>沒有特別指定this的情況下，<strong>this預設綁定(Default Binding)「全域物件」，也就是window</strong>。</p><p>但在ES5的嚴格模式下，禁止this自動指定為全域物件，這點要特別注意。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> seven = <span class="string">&quot;江南七怪&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">seven</span>); <span class="comment">//&quot;江南七怪&quot;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">monster</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">seven</span> + <span class="string">&quot;脾氣古怪&quot;</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">monster</span>();  <span class="comment">//&quot;江南七怪脾氣古怪&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  seven : <span class="string">&quot;七喜汽水&quot;</span>,</span><br><span class="line">  <span class="attr">func</span>: monster</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">func</span>(); <span class="comment">//&quot;七喜汽水脾氣古怪&quot;</span></span><br></pre></td></tr></table></figure><p>所以在全域環境中直接呼叫monster()函式時，this.seven是指向全域變數的var seven &#x3D; “江南七怪”；當monster()作為obj物件func屬性的方法的時候，this.seven會指向obj物件的seven屬性”七喜汽水”。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> seven = <span class="string">&quot;江南七怪&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> call = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">seven</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> soda = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> seven = <span class="string">&quot;七喜汽水&quot;</span>;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">call</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">soda</span>(); <span class="comment">//&quot;江南七怪&quot;</span></span><br></pre></td></tr></table></figure><p>soda()透過this.call()來叫用call()，這時call()裡面的this.seven是指向全域變數的seven，所以得到的結果是”江南七怪”。</p><h2 id="如何強制指定this"><a href="#如何強制指定this" class="headerlink" title="如何強制指定this"></a>如何強制指定this</h2><p>在JavaScript有三種方式可以強制指定this給function，這種方式也叫「顯式綁定」，分別是：</p><ul><li>.call()</li><li>.apply()</li><li>.bind()</li></ul><p>先來說說.call與.apply</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">funcA</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">//做某件大事</span></span><br><span class="line">&#125;</span><br><span class="line">funcA.<span class="title function_">call</span>(context, arg1, arg2...)</span><br><span class="line">funcA.<span class="title function_">apply</span>(context,[arg1,arg2...])</span><br></pre></td></tr></table></figure><p>上面的程式碼式使用.call與.apply去呼叫執行funcA，第一個參數context為所帶入的物件，也就是強制用那個物件來當成function執行時的物件。</p><p>.call與.apply作用一樣，差別在.apply第一個參數(帶入的物件)之後的參數以陣列方式傳入，而.call則是使用逗號隔開。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> kuo = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;郭靖&quot;</span>,</span><br><span class="line"><span class="attr">wife</span>: <span class="string">&quot;黃蓉&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> yung = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;楊過&quot;</span>,</span><br><span class="line"><span class="attr">wife</span>: <span class="string">&quot;小龍女&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">funcA</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>的老婆是<span class="subst">$&#123;<span class="variable language_">this</span>.wife&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">funcA.<span class="title function_">call</span>(kuo) <span class="comment">//郭靖的老婆是黃蓉</span></span><br><span class="line">funcA.<span class="title function_">apply</span>(yung) <span class="comment">//楊過的老婆是小龍女</span></span><br><span class="line"></span><br><span class="line">funcA.<span class="title function_">call</span>(<span class="literal">null</span>,<span class="string">&quot;周伯通&quot;</span>,<span class="string">&quot;瑛姑&quot;</span>)<span class="comment">//的老婆是undefined </span></span><br></pre></td></tr></table></figure><p>我們可以看見this.name與this.wife綁定到帶入的物件上。而this隨著所帶入的物件不同，指向也會動態地改變。</p><p>而bind的用法如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> kuo = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;郭靖&quot;</span>,</span><br><span class="line"><span class="attr">wife</span>: <span class="string">&quot;黃蓉&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> yung = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;楊過&quot;</span>,</span><br><span class="line"><span class="attr">wife</span>: <span class="string">&quot;小龍女&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">funcA</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>的老婆是<span class="subst">$&#123;<span class="variable language_">this</span>.wife&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> kuoWife = funcA.<span class="title function_">bind</span>(kuo);</span><br><span class="line"><span class="title function_">kuoWife</span>()  <span class="comment">//郭靖的老婆是黃蓉</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> yungWife = funcA.<span class="title function_">bind</span>(yung);</span><br><span class="line"><span class="title function_">yungWife</span>() <span class="comment">//楊過的老婆是小龍女</span></span><br></pre></td></tr></table></figure><p>藉由‵let kuoWife &#x3D; funcA.bind(kuo) ‵也可以把this指向所帶入的物件。</p><p>其實以上的應用，萬變不離其宗，只要記得：<strong>「this代表的是function執行時所屬的物件，而不是function本身」</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/GgnG2jd.jpg&quot;&gt;&lt;br&gt;聽前輩說，「this」在JavaScript裡面是一個大坑。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, 2021iT邦鐵人賽" scheme="https://popeye-ux.github.io/tags/JavaScript-2021iT%E9%82%A6%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day32:暗通款曲的閉包</title>
    <link href="https://popeye-ux.github.io/2021/10/01/21-day32-clouse/"/>
    <id>https://popeye-ux.github.io/2021/10/01/21-day32-clouse/</id>
    <published>2021-10-01T09:42:20.000Z</published>
    <updated>2022-04-18T02:13:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/DGYvftt.jpg"></p><p>在「閉包」這一關，我一直有一種似懂非懂，玄之又玄的感覺。</p><span id="more"></span><p>MDN上對「閉包」的定義：</p><p><strong>「閉包為函式的組合、還有該宣告函式的作用域環境。這個環境包含閉包建立時，所有位於該作用域的區域變數。」</strong></p><p>每個字都看得懂，但是合起來是甚麼意思？</p><p>唉！我們重新來看一下函式的寫法：</p><p>小龍女在絕情谷底養的玉峰，飛到周伯通住的百花谷，要如何分辨一班的蜜蜂與小龍女養的玉峰呢？當然是看看翅膀上有沒有寫：「我在絕情谷底」，有寫的就是玉蜂。</p><p>這是一般函式的寫法：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bee=<span class="string">&quot;蜜蜂&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flyOut</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> bee = <span class="string">&quot;玉蜂&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;bee&#125;</span>翅膀上有寫「我在絕情谷底」`</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="title function_">flyOut</span>();</span><br><span class="line"><span class="comment">//&quot;玉蜂翅膀上有寫「我在絕情谷底」&quot;</span></span><br></pre></td></tr></table></figure><p>如果我們在flyout()再內嵌一個inner函式，這時直接呼叫flyout()，出來的結果會是undefined。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bee=<span class="string">&quot;蜜蜂&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flyOut</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> bee = <span class="string">&quot;玉蜂&quot;</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">inner</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;bee&#125;</span>翅膀上有寫「我在絕情谷底」`</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">flyOut</span>();</span><br><span class="line"><span class="comment">//undefined 沒有回傳值</span></span><br></pre></td></tr></table></figure><p>但是如果我們再flyout那一層，加上「return inner();」，會回傳「”玉蜂翅膀上有寫「我在絕情谷底」”」。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bee=<span class="string">&quot;蜜蜂&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flyOut</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> bee = <span class="string">&quot;玉蜂&quot;</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">inner</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;bee&#125;</span>翅膀上有寫「我在絕情谷底」`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">inner</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">flyOut</span>();</span><br><span class="line"><span class="comment">//&quot;玉蜂翅膀上有寫「我在絕情谷底」&quot;</span></span><br></pre></td></tr></table></figure><p>再來把return inside()的小括號拿掉。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bee=<span class="string">&quot;蜜蜂&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flyOut</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> bee = <span class="string">&quot;玉蜂&quot;</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">inner</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;bee&#125;</span>翅膀上有寫「我在絕情谷底」`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> inner;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">flyOut</span>();</span><br><span class="line"><span class="comment">//ƒ inner()&#123;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;bee&#125;</span>翅膀上有寫「我在絕情谷底」`</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>結果回傳的是inside()的程式碼：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ƒ <span class="title function_">inner</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;bee&#125;</span>翅膀上有寫「我在絕情谷底」`</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>再更進一步，在外層用變數outBee來存取flyOut()：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bee=<span class="string">&quot;蜜蜂&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flyOut</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> bee = <span class="string">&quot;玉蜂&quot;</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">inner</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;bee&#125;</span>翅膀上有寫「我在絕情谷底」`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> inner;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> outBee = <span class="title function_">flyOut</span>();</span><br><span class="line"><span class="title function_">flyBee</span>();</span><br><span class="line"><span class="comment">//&quot;玉蜂翅膀上有寫「我在絕情谷底」&quot;</span></span><br><span class="line"><span class="keyword">var</span> honeyBee = <span class="title function_">flyout</span>();</span><br><span class="line"><span class="comment">//&quot;玉蜂翅膀上有寫「我在絕情谷底」&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>還記得「切分變數最小的範圍是function」這句話嗎？</p><p>inner()被內嵌在flyOut()之內，所以inner()裡的變數能夠存取的範圍就是flyOut()跟全域的範圍，它在flyOut()裡面找到了bee &#x3D; “玉蜂”，就不會再往外層去找。這種訪問機制就是「作用域鍊(Scope chain)」</p><p>JavaScript 引擎的回收機制會釋放不再使用的記憶體，清空不再使用的變數，但閉包為了保留函式記得和存取其執行環境的能力，就會予以保留，不做記憶體回收。所以當程式執行完var outBee &#x3D; flyOut();這一行，原本應該被記憶體釋放掉的flyOut()裡面的變數bee變成了「自由變數」，還是可以拿來運算。</p><p>這種可以適用自由變數的函式，就是「閉包」。</p><p>雖然 outBee 位於 flyOut()函式所定義的範疇之外，但由於閉包的緣故， 所以能正常執行inner()函式，並存取到 bee 的值，進而執行出”玉蜂翅膀上有寫「我在絕情谷底」”的結果。</p><p>所以在flyout()的函示內部回傳inner函式的同時，除了傳回程式碼之外，也回傳了內部函式建立時的變數值bee&#x3D;”玉蜂”，連同執行環境一起被回傳了。</p><p>嗯！這樣在絕情谷外的楊過就可以依據蜜蜂身上的資訊找到小龍女了！XD</p><p>這就是一種「閉包」的資料結構，包含函式及函式被建立時的當下環境。</p><p>許國政先生在《0 陷阱！0 誤解！8 天重新認識 JavaScript！》一書中：</p><p>「當你在呼叫函式的以前，範圍鍊就已經被建立了。因此我們可以在函式(outer)裡面「回傳」另一個內部函式(inner)給外層的範圍，使得外層也可以透過『範圍鍊』取得內部的變數(msg)。」</p><p>這句話直白易懂，是大神才寫得出來的！</p><p>所以我們可以透過「閉包」的方式，呼叫「函式」內的「函式」，我們可以把變數封裝在函式中，避免變數汙染全域環境，而且可以重複存取叫用函式及其內部環境。許多框架也是透過這種方式運作的。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/DGYvftt.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;在「閉包」這一關，我一直有一種似懂非懂，玄之又玄的感覺。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, 2021iT邦鐵人賽" scheme="https://popeye-ux.github.io/tags/JavaScript-2021iT%E9%82%A6%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day31:IIFE立即執行函式</title>
    <link href="https://popeye-ux.github.io/2021/10/01/21-day31-IIFE/"/>
    <id>https://popeye-ux.github.io/2021/10/01/21-day31-IIFE/</id>
    <published>2021-10-01T09:40:01.000Z</published>
    <updated>2022-04-18T10:48:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/RzLyjIO.jpg"><br>IIFE（Immediately Invoked Function Expression），是一種「可以立即執行的函式」。</p><span id="more"></span><p>一般的函式長這樣：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">doSomething</span> (x)&#123;</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">doSomething</span>(參數);  <span class="comment">//呼叫doSomething，執行程式區塊</span></span><br></pre></td></tr></table></figure><p>而立即執行函式長成這個樣子：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">doSomething</span> (x) &#123;</span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">&#125;)(參數);  <span class="comment">//不用呼叫doSomething函式，X帶入參數，立即在程式區塊中執行</span></span><br></pre></td></tr></table></figure><p>立即執行函式，不透過呼叫函式的方式，瀏覽器讀到函式後面附加的小括號( )，就知道要在函式宣告的當下立即執行。</p><p>假設洪七公嘴饞想吃叫化雞，叫黃蓉馬上烤一隻叫化雞來吃：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">cooking</span>(<span class="params">food</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`丫頭去弄個<span class="subst">$&#123;food&#125;</span>來吃吃！！！`</span>);</span><br><span class="line">&#125;)(<span class="string">&#x27;叫化雞&#x27;</span>)  <span class="comment">//丫頭去弄個叫化雞來吃吃！！！</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">cooking</span>(<span class="string">&#x27;東坡肉&#x27;</span>);  <span class="comment">//Uncaught ReferenceError: cooking is not defined</span></span><br></pre></td></tr></table></figure><p>如果在立即執行函式的外面再呼叫一次cooking函式，就會出現「Uncaught ReferenceError: cooking is not defined」。</p><p>既然提到了立即執行函式，讓我們利用它來解一下面試中常常會出現的考題：</p><p>「每次間隔一秒，依次印出0、1、2、3、4」</p><p>你會怎麼解呢？直覺應該利用for迴圈 + window.setTimeout()來解題：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line"><span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;,<span class="number">1000</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>圖</p><p>結果是直接印出五個5，說好的0、1、2、3、4呢？</p><p>還記得前面提過「切分辨數最小範圍是function」，所以for迴圈和window.setTimeout()是個跑各的。</p><p>for迴圈是急驚風，而window.setTimeout()是慢郎中，window.setTimeout()剛剛過了一秒去捉外面的i來console.log()的時候，for迴圈已經跑完五次，i++變成5，不符合i&lt;5的條件跳出迴圈了，所以window.setTimeout()捉迴圈的i，每次都捉到5。</p><p>那要怎麼解決這個問題呢? 我們可以把window.setTimeout()封裝在一個立即執行函式裡面，後面的小括號則帶入迴圈每次跑出來的 i，讓 i 把值帶入 x 裡面丟到 window.setTimeout() 去執行。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line"><span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">&#125;,x*<span class="number">1000</span>);</span><br><span class="line">&#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣就會每隔1秒依序印出0、1、2、3、4了。</p><p>當然另外一個更簡單的解法則是把for迴圈的變數宣告「var i &#x3D; 0」直接改成「let i &#x3D; 0」，利用let是以大括號區塊為作用域的概念，讓for迴圈必須與window.setTimeout()一起跑。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line"><span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;,<span class="number">1000</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這樣就會間格1秒，依序印出0、1、2、3、4了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/RzLyjIO.jpg&quot;&gt;&lt;br&gt;IIFE（Immediately Invoked Function Expression），是一種「可以立即執行的函式」。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://popeye-ux.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript, 2021iT邦鐵人賽" scheme="https://popeye-ux.github.io/tags/JavaScript-2021iT%E9%82%A6%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
</feed>
